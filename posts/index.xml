<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on SDN-Warrior | Daniel Krieger</title>
		<link>https://sdn-warrior.org/posts/</link>
		<description>Recent content in Posts on SDN-Warrior | Daniel Krieger</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>Daniel Krieger</copyright>
		<lastBuildDate>Thu, 10 Apr 2025 22:00:00 +0200</lastBuildDate>
		<atom:link href="https://sdn-warrior.org/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>VCF - How to use the Broadcom Download Token</title>
			<link>https://sdn-warrior.org/posts/vcf-token/</link>
			<pubDate>Thu, 10 Apr 2025 22:00:00 +0200</pubDate>
			
			<guid>https://sdn-warrior.org/posts/vcf-token/</guid>
			<description><![CDATA[A short article on how to use the Broadcom Download Token.]]></description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>Broadcom is currently changing the access to their public repo. This affects many products. Affected are vCenter, ESXi Updates, vSAN File Services and of course VCF.
The changes are far-reaching. The repo URL has changed and also the way it can be accessed. With the username and password of the Broadcom account, access will no longer work from April 23, 2025. Time to take a look at the whole thing.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">Broadcom provides Powershell scripts via a KB article to make the changes, but there is also a manual way and I find it easier for VCF. Also, I don&rsquo;t need to write a blog to show how to start a Powershell script - which hopefully will work.</div>
    </aside>
<h2 id="what-is-changing-in-detail">What is changing in detail?</h2>
<p>First of all, the URL, this will be <em><strong>dl.broadcom.com</strong></em> for all the components mentioned above. this means that <em><strong>depot.vmware.com, hostupdate.vmware.com and app-updates.vmware.com</strong></em> will disappear and can therefore also be removed from your proxies if you use proxy and whitelistening.
The second change concerns authentication. Access will no longer be possible with your username and password. A download token must be created via the support portal. If you have multiple Site IDs, you must issue the token for the SiteID where you also have your contracts for the products you want to update.
After customizing the products, the user name and password are ignored.</p>
<p>As of today, there are unfortunately no patches that already support the new repo.</p>
<h2 id="customize-sddc-manager---the-manual-way">Customize SDDC Manager - the manual way</h2>
<p>To change the whole thing now, a specific file must be adapted. Like many things, you can change the application-prod.properties in the SDDC manager. This can be found in the following path:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">/opt/vmware/vcf/lcm/lcm-app/conf/application-prod.properties
</span></span></code></pre></div><p>To customize the file you have to log in to the SDDC Manager via VCF user using ssh and then get root rights using su.</p>
<p>The settings can be found under LCM DEPOT PROPERTIES. The following marked lines must be adjusted:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">################### LCM DEPOT PROPERTIES ########################
</span></span><span class="line"><span class="cl">lcm.depot.adapter.host=depot.vmware.com &lt;---change me
</span></span><span class="line"><span class="cl">lcm.depot.adapter.port=443
</span></span><span class="line"><span class="cl">lcm.depot.adapter.remote.rootDir=/PROD2 &lt;---change me
</span></span><span class="line"><span class="cl">lcm.depot.adapter.remote.repoDir=/evo/vmw &lt;---change me
</span></span><span class="line"><span class="cl">lcm.depot.adapter.local.baseDir=/nfs/vmware/vcf/nfs-mount/bundle/depot/local
</span></span><span class="line"><span class="cl">lcm.depot.adapter.enableBundleSignatureValidation=true
</span></span><span class="line"><span class="cl">lcm.depot.adapter.certificateCheckEnabled=true
</span></span><span class="line"><span class="cl">lcm.depot.adapter.remote.index.filename=index.v3
</span></span><span class="line"><span class="cl">lcm.depot.adapter.softwareCompatibilitySetsFile=softwareCompatibilitySets.json
</span></span><span class="line"><span class="cl">lcm.depot.adapter.partnerBundleMetadata.updated.filename=vxrailPartnerBundleMetadata.json
</span></span><span class="line"><span class="cl">lcm.depot.credential.file.path=/opt/vmware/vcf/etc/depot.cred
</span></span><span class="line"><span class="cl">lcm.depot.bundleElement.patchFile.checksumValidation=true
</span></span><span class="line"><span class="cl">lcm.depot.adapter.lcmManifestFile=lcmManifest.json
</span></span><span class="line"><span class="cl">lcm.depot.adapter.remote.lcmManifestDir=/evo/vmw/lcm/manifest &lt;---change me
</span></span><span class="line"><span class="cl">lcm.depot.adapter.remote.lcmProductVersionCatalogDir=/COMP/SDDC_MANAGER_VCF/lcm/productVersionCatalog &lt;---add me
</span></span></code></pre></div><p>The following values must be set:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">lcm.depot.adapter.host=dl.broadcom.com
</span></span><span class="line"><span class="cl">lcm.depot.adapter.remote.rootDir=/&lt;downloadToken&gt;/PROD
</span></span><span class="line"><span class="cl">lcm.depot.adapter.remote.repoDir=/COMP/SDDC_MANAGER_VCF
</span></span><span class="line"><span class="cl">lcm.depot.adapter.remote.lcmManifestDir=/COMP/SDDC_MANAGER_VCF/lcm/manifest
</span></span><span class="line"><span class="cl">lcm.depot.adapter.remote.lcmProductVersionCatalogDir=/COMP/SDDC_MANAGER_VCF/lcm/productVersionCatalog
</span></span></code></pre></div><p>After we have changed all the values, we only need to restart the lcm service.</p>

    <aside class="admonition danger">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-alert-triangle">
      <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
      <line x1="12" y1="9" x2="12" y2="13"></line>
      <line x1="12" y1="17" x2="12.01" y2="17"></line>
   </svg></div><b>Snapshot</b>
        </div>
        <div class="admonition-content">It is strongly recommended to take a snapshot of the SDDC Manager before making any changes to the file.</div>
    </aside>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">systemctl restart lcm
</span></span></code></pre></div>
    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">After restarting the service, the SDDC manager displays an error message that the depot settings are not configured. a dummy username and a dummy password must be entered here. These values are not checked and not used, they are only there for the gui so that the validation works.</div>
    </aside>

<figure><picture>
          <source srcset="/vcf-token/01_hu_bf7f8024fd23d4f7.webp" type="image/webp">
          <source srcset="/vcf-token/01_hu_f036a94982531d7c.jpg" type="image/jpeg">
          <img src="/vcf-token/01_hu_bf7f8024fd23d4f7.webp"alt="SDDC Manager"  width="729"  height="280" />
        </picture><figcaption>
            <p>SDDC Depot settings (click to enlarge)</p>
          </figcaption></figure>
<h2 id="validation-sddc-manager">Validation SDDC Manager</h2>
<p>The easiest way to test it is of course to download a bundle. However, if there is no bundle available for download at the moment because everything has already been loaded, you can also check the debug log of the lcm. Since the SDDC searches cyclically for new bundles, calls to the new repo should be in the log.
The log can be found under /var/log/vmware/vcf/lcm/lcm-debug.log</p>

    <aside class="admonition danger">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-alert-triangle">
      <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
      <line x1="12" y1="9" x2="12" y2="13"></line>
      <line x1="12" y1="17" x2="12.01" y2="17"></line>
   </svg></div><b>Caution</b>
        </div>
        <div class="admonition-content">The log contains the tokenid in plain text.</div>
    </aside>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Plaintext" data-lang="Plaintext"><span class="line"><span class="cl">Getting file size for /COMP/SDDC_MANAGER_VCF/manifests/bundle-14555.manifest.sig from URL https://dl.broadcom.com:443/&lt;token&gt;/PROD/COMP/SDDC_MANAGER_VCF/manifests/bundle-14555.manifest.sig
</span></span></code></pre></div>
    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">Broadcom writes that after patching the SDDC Manager, the changes must be made again. I think that there will be an adjustment in the next release of the SDDC and username and password in the GUI will be replaced by download tokens. Before every update of the SDDC manager it is recommended to read the release notes.</div>
    </aside>
<h2 id="update-vcenter">Update vCenter</h2>
<p>The vCenter is very easy to setup. To do this, you must log in to vCenter Server Management (via port 5480) and log in with root. Under Update and then Settings you can enter a custom repo URL. Username and Password can be left empty as they are not needed.</p>
<p>The following URL must be entered:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Plaintext" data-lang="Plaintext"><span class="line"><span class="cl">https://dl.broadcom.com/&lt;downloadToken&gt;/PROD/COMP/VCENTER/vmw/8d167796-34d5-4899-be0a-6daade4005a3/8.0.3.00400
</span></span></code></pre></div><h2 id="kb-article">KB Article</h2>
<p>Here is a summary KB article that links to all other KB articles for the other products. For some products, there is currently no scripted method. <a href="https://knowledge.broadcom.com/external/article/390098">Broadcom KB</a></p>
<h2 id="conclusion">Conclusion</h2>
<p>The manual way is relatively simple and quick if you do not want to execute the Powershell script from Broadcom for certain reasons. I have tested both variants and the Powershell script has the advantage that entries are validated. However, the execution policy must be changed to unrestricted for the Powershell script from Broadcom and there are customers who do not allow this. The manual method may then be preferable.</p>
]]></content>
		</item>
		
		<item>
			<title>VCF Quick Tip - WLD with single NSX Manager</title>
			<link>https://sdn-warrior.org/posts/vcf-single-nsx/</link>
			<pubDate>Tue, 01 Apr 2025 00:42:39 +0200</pubDate>
			
			<guid>https://sdn-warrior.org/posts/vcf-single-nsx/</guid>
			<description><![CDATA[Manipulate the SDDC Manager and Cloud Builder to enable deployment with only one NSX Manager.]]></description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>Here is a quick VCF tip for anyone who wants to deploy VCF but doesn&rsquo;t have endless resources in the lab. With a few minor adjustments, it is possible to deploy a VI Workload WLD or even the Management WLD with just one NSX manager.
We can also reduce the MGMT domain to three hosts. The only more economical way is through the convert and NFS. In this case, a management domain with two hosts is possible.</p>

    <aside class="admonition warning">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-alert-circle">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="8" x2="12" y2="12"></line>
      <line x1="12" y1="16" x2="12.01" y2="16"></line>
   </svg></div><b>Warning</b>
        </div>
        <div class="admonition-content">Please only use this in the lab. The setup is completely unsupported and should never be carried out in a productive environment.</div>
    </aside>
<h2 id="management-domain">Management Domain</h2>
<p>To reduce the management domain to 3 vSAN hosts, we have to log in to the Cloud Builder as admin via SSH and switch to root.
In the directory <em><strong>/etc/vmware/vcf/bringup/</strong></em>, application.properties must be adapted and the following line must be changed to the value 3.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">bringup.mgmt.cluster.minimum.size=3
</span></span></code></pre></div><p>After that, the bringup service must be restarted.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">systemctl restart vcf-bringup.service
</span></span></code></pre></div><p>After the adjustments, we can deploy a management domain with only three hosts – nice.
For this to work, the deployment must be done via a JSON. There is a good JSON generator from <a href="https://www.martingustafsson.com/vcf-ui-json/">Martin Gustafsson</a> (great tool) or you can upload the VMware Excel Sheet to the Cloudbuilder and use the built-in json generator.</p>
<h3 id="using-the-sos-utility-json-generator">Using the SoS Utility JSON Generator</h3>
<p>The JSON generator options within the SoS Utility provide a method to execute the creation of the JSON file from a completed deployment parameter workbook. To run the JSON generator, you must provide, as a minimum, a path to the deployment parameter workbook and the design type using the following syntax:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">/opt/vmware/sddc-support/sos --jsongenerator --jsongenerator-input /tmp/vcf-ems-deployment-parameter.xlsx --jsongenerator-design vcf-ems
</span></span></code></pre></div><table>
  <thead>
      <tr>
          <th>Option</th>
          <th>Description</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><code>--jsongenerator</code></td>
          <td>Invokes the JSON generator utility.</td>
      </tr>
      <tr>
          <td><code>--jsongenerator-input &lt;JSONGENERATORINPUT&gt;</code></td>
          <td>Specify the path to the input file to be used by the JSON generator utility. For example: <code>/tmp/vcf-ems-deployment-parameter.xlsx</code>.</td>
      </tr>
      <tr>
          <td><code>--jsongenerator-design vcf-ems</code></td>
          <td>Use <code>vcf-ems</code> for VMware Cloud Foundation.</td>
      </tr>
      <tr>
          <td><code>--jsongenerator-design vcf-vxrail</code></td>
          <td>Use <code>vcf-vxrail</code> for VMware Cloud Foundation on Dell VxRail.</td>
      </tr>
      <tr>
          <td><code>--jsongenerator-supress</code></td>
          <td>Supress confirmation to force cleanup directory. (optional)</td>
      </tr>
      <tr>
          <td><code>--jsongenerator-logs &lt;JSONGENERATORLOGS&gt;</code></td>
          <td>Specify the logs directory path.</td>
      </tr>
  </tbody>
</table>
<p>In order to deploy our management domain with only three ESX Servers and one NSX Manager, all we need to do is adjust the JSON so that it contains only three ESX Servers (the Bringup Excel expects four ESX Servers and three NSX Managers) and only one NSX Manager plus the NSX Manager VIP is available.</p>
<p>My sample JSON for my Workload Domain</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;deployWithoutLicenseKeys&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;skipEsxThumbprintValidation&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;managementPoolName&#34;</span><span class="p">:</span> <span class="s2">&#34;networkpool-001&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;sddcManagerSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;secondUserCredentials&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;username&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;password&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;ipAddress&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.4&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;hostname&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;rootUserCredentials&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;username&#34;</span><span class="p">:</span> <span class="s2">&#34;root&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;password&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;localUserPassword&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;sddcId&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;esxLicense&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;workflowType&#34;</span><span class="p">:</span> <span class="s2">&#34;VCF&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;ceipEnabled&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;fipsEnabled&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;ntpServers&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;192.168.12.1&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;dnsSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;secondaryNameserver&#34;</span><span class="p">:</span> <span class="s2">&#34;192.168.100.254&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;subdomain&#34;</span><span class="p">:</span> <span class="s2">&#34;lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;domain&#34;</span><span class="p">:</span> <span class="s2">&#34;lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;nameserver&#34;</span><span class="p">:</span> <span class="s2">&#34;192.168.11.2&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;networkSpecs&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;networkType&#34;</span><span class="p">:</span> <span class="s2">&#34;MANAGEMENT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;subnet&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.1.0/24&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;gateway&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.1.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;vlanId&#34;</span><span class="p">:</span> <span class="s2">&#34;1001&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;mtu&#34;</span><span class="p">:</span> <span class="s2">&#34;1500&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;portGroupKey&#34;</span><span class="p">:</span> <span class="s2">&#34;SDDC-DPortGroup-Mgmt&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;networkType&#34;</span><span class="p">:</span> <span class="s2">&#34;VMOTION&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;subnet&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.2.0/24&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;gateway&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.2.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;vlanId&#34;</span><span class="p">:</span> <span class="s2">&#34;1002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;mtu&#34;</span><span class="p">:</span> <span class="s2">&#34;1700&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;portGroupKey&#34;</span><span class="p">:</span> <span class="s2">&#34;SDDC-DPortGroup-vMotion&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;includeIpAddressRanges&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="nt">&#34;endIpAddress&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.2.104&#34;</span><span class="p">,</span> <span class="nt">&#34;startIpAddress&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.2.101&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;networkType&#34;</span><span class="p">:</span> <span class="s2">&#34;VSAN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;subnet&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.3.0/24&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;gateway&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.3.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;vlanId&#34;</span><span class="p">:</span> <span class="s2">&#34;1003&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;mtu&#34;</span><span class="p">:</span> <span class="s2">&#34;1700&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;portGroupKey&#34;</span><span class="p">:</span> <span class="s2">&#34;SDDC-DPortGroup-VSAN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;includeIpAddressRanges&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="nt">&#34;endIpAddress&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.3.104&#34;</span><span class="p">,</span> <span class="nt">&#34;startIpAddress&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.3.101&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;networkType&#34;</span><span class="p">:</span> <span class="s2">&#34;VM_MANAGEMENT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;subnet&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.0/24&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;gateway&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;vlanId&#34;</span><span class="p">:</span> <span class="s2">&#34;1000&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;mtu&#34;</span><span class="p">:</span> <span class="s2">&#34;1700&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;portGroupKey&#34;</span><span class="p">:</span> <span class="s2">&#34;SDDC-DPortGroup-VM-Mgmt&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;nsxtSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;nsxtManagerSize&#34;</span><span class="p">:</span> <span class="s2">&#34;small&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;nsxtManagers&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span> <span class="nt">&#34;hostname&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-nsx01a&#34;</span><span class="p">,</span> <span class="nt">&#34;ip&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.3&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;rootNsxtManagerPassword&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;nsxtAdminPassword&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;nsxtAuditPassword&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;vip&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;vipFqdn&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-nsx01&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;nsxtLicense&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;transportVlanId&#34;</span><span class="p">:</span> <span class="mi">1004</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;vsanSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;vsanDedup&#34;</span><span class="p">:</span> <span class="s2">&#34;false&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;esaConfig&#34;</span><span class="p">:</span> <span class="p">{</span> <span class="nt">&#34;enabled&#34;</span><span class="p">:</span> <span class="kc">false</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;datastoreName&#34;</span><span class="p">:</span> <span class="s2">&#34;m01-cluster-001-vsan&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;dvsSpecs&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;dvsName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-vds1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;vmnics&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;vmnic0&#34;</span><span class="p">,</span> <span class="s2">&#34;vmnic1&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;mtu&#34;</span><span class="p">:</span> <span class="mi">1700</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;networks&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;MANAGEMENT&#34;</span><span class="p">,</span> <span class="s2">&#34;VMOTION&#34;</span><span class="p">,</span> <span class="s2">&#34;VSAN&#34;</span><span class="p">,</span> <span class="s2">&#34;VM_MANAGEMENT&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;niocSpecs&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="nt">&#34;trafficType&#34;</span><span class="p">:</span> <span class="s2">&#34;VSAN&#34;</span><span class="p">,</span> <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;HIGH&#34;</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="nt">&#34;trafficType&#34;</span><span class="p">:</span> <span class="s2">&#34;VMOTION&#34;</span><span class="p">,</span> <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;LOW&#34;</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="nt">&#34;trafficType&#34;</span><span class="p">:</span> <span class="s2">&#34;VDP&#34;</span><span class="p">,</span> <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;LOW&#34;</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="nt">&#34;trafficType&#34;</span><span class="p">:</span> <span class="s2">&#34;VIRTUALMACHINE&#34;</span><span class="p">,</span> <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;HIGH&#34;</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="nt">&#34;trafficType&#34;</span><span class="p">:</span> <span class="s2">&#34;MANAGEMENT&#34;</span><span class="p">,</span> <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;NORMAL&#34;</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="nt">&#34;trafficType&#34;</span><span class="p">:</span> <span class="s2">&#34;NFS&#34;</span><span class="p">,</span> <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;LOW&#34;</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="nt">&#34;trafficType&#34;</span><span class="p">:</span> <span class="s2">&#34;HBR&#34;</span><span class="p">,</span> <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;LOW&#34;</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="nt">&#34;trafficType&#34;</span><span class="p">:</span> <span class="s2">&#34;FAULTTOLERANCE&#34;</span><span class="p">,</span> <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;LOW&#34;</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="nt">&#34;trafficType&#34;</span><span class="p">:</span> <span class="s2">&#34;ISCSI&#34;</span><span class="p">,</span> <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;LOW&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;nsxtSwitchConfig&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;transportZones&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">          <span class="p">{</span> <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-tz-overlay01&#34;</span><span class="p">,</span> <span class="nt">&#34;transportType&#34;</span><span class="p">:</span> <span class="s2">&#34;OVERLAY&#34;</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">          <span class="p">{</span> <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-tz-vlan01&#34;</span><span class="p">,</span> <span class="nt">&#34;transportType&#34;</span><span class="p">:</span> <span class="s2">&#34;VLAN&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">]</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;clusterSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;clusterName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-cluster-001&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;clusterEvcMode&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;clusterImageEnabled&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;vmFolders&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;MANAGEMENT&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-fd-mgmt&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;NETWORKING&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-fd-nsx&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;EDGENODES&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-fd-edge&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;resourcePoolSpecs&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;m01-cluster-001-management-001&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;management&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuReservationPercentage&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuLimit&#34;</span><span class="p">:</span> <span class="mi">-1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuReservationExpandable&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuSharesLevel&#34;</span><span class="p">:</span> <span class="s2">&#34;normal&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuSharesValue&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memoryReservationMb&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memoryLimit&#34;</span><span class="p">:</span> <span class="mi">-1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memoryReservationExpandable&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memorySharesLevel&#34;</span><span class="p">:</span> <span class="s2">&#34;normal&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memorySharesValue&#34;</span><span class="p">:</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;m01-cluster-001-compute-002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;compute&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuReservationPercentage&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuLimit&#34;</span><span class="p">:</span> <span class="mi">-1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuReservationExpandable&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuSharesLevel&#34;</span><span class="p">:</span> <span class="s2">&#34;normal&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuSharesValue&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memoryReservationPercentage&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memoryLimit&#34;</span><span class="p">:</span> <span class="mi">-1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memoryReservationExpandable&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memorySharesLevel&#34;</span><span class="p">:</span> <span class="s2">&#34;normal&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memorySharesValue&#34;</span><span class="p">:</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;m01-cluster-001-compute-003&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;compute&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuReservationPercentage&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuLimit&#34;</span><span class="p">:</span> <span class="mi">-1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuReservationExpandable&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuSharesLevel&#34;</span><span class="p">:</span> <span class="s2">&#34;normal&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;cpuSharesValue&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memoryReservationPercentage&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memoryLimit&#34;</span><span class="p">:</span> <span class="mi">-1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memoryReservationExpandable&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memorySharesLevel&#34;</span><span class="p">:</span> <span class="s2">&#34;normal&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;memorySharesValue&#34;</span><span class="p">:</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;pscSpecs&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;adminUserSsoPassword&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;pscSsoSpec&#34;</span><span class="p">:</span> <span class="p">{</span> <span class="nt">&#34;ssoDomain&#34;</span><span class="p">:</span> <span class="s2">&#34;vsphere.local&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;vcenterSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;vcenterIp&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.5&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;vcenterHostname&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-vcsa&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;vmSize&#34;</span><span class="p">:</span> <span class="s2">&#34;small&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;storageSize&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;rootVcenterPassword&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;hostSpecs&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;association&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-datacenter&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;hostname&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-esx01&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;credentials&#34;</span><span class="p">:</span> <span class="p">{</span> <span class="nt">&#34;username&#34;</span><span class="p">:</span> <span class="s2">&#34;root&#34;</span><span class="p">,</span> <span class="nt">&#34;password&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;association&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-datacenter&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;hostname&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-esx02&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;credentials&#34;</span><span class="p">:</span> <span class="p">{</span> <span class="nt">&#34;username&#34;</span><span class="p">:</span> <span class="s2">&#34;root&#34;</span><span class="p">,</span> <span class="nt">&#34;password&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;association&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-datacenter&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;hostname&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-esx03&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;credentials&#34;</span><span class="p">:</span> <span class="p">{</span> <span class="nt">&#34;username&#34;</span><span class="p">:</span> <span class="s2">&#34;root&#34;</span><span class="p">,</span> <span class="nt">&#34;password&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h2 id="vi-workload-domain">VI Workload Domain</h2>
<p>In order to deploy a new workload domain with only one NSX manager, we have to manipulate the SDDC manager.
Unfortunately, it is not sufficient to simply generate a JSON with only one NSX manager.
However, the process is not particularly complicated.</p>
<p>We need to log in to the SDDC Manager via SSH. To do this, we need to use the VCF user. Then we switch to the root context with su and edit the following file:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">/etc/vmware/vcf/domainmanager/application-prod.properties
</span></span></code></pre></div><p>We have to add 3 lines of configuration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">nsxt.manager.formfactor=medium
</span></span><span class="line"><span class="cl">nsxt.management.resources.validation.skip=true
</span></span><span class="line"><span class="cl">nsxt.manager.cluster.size=1
</span></span></code></pre></div><p>After that, we restart the domainmanager service and we are good to go.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">systemctl restart domainmanager.service
</span></span></code></pre></div><p>After the adjustments, we can deploy the workload domain with just one NSX manager via the API and a JSON file. I will describe in detail how exactly this works in a separate article.
Happy VCF deployment!</p>
]]></content>
		</item>
		
		<item>
			<title>VCF Stretched Cluster</title>
			<link>https://sdn-warrior.org/posts/vcf-stretched-cluster/</link>
			<pubDate>Thu, 13 Mar 2025 23:00:00 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/vcf-stretched-cluster/</guid>
			<description><![CDATA[A short article on how to build a stretched vSAN cluster in the VCF.]]></description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>This is my third article in my VCF Homelab series.
On second thought, I may have put the cart before the horse, because a stretched vSAN cluster requires a functioning management domain.
But ok, that shouldn&rsquo;t bother us now. I&rsquo;ll try to cover all the essentials of the deployment in this article.</p>
<h3 id="what-are-the-benefits-of-a-stretched-vsan-cluster-and-why-does-it-have-to-be-vsan">What are the benefits of a stretched vSAN cluster and why does it have to be vSAN?</h3>
<p>Well, first the obvious.
We have to use vSAN because we have a consolidated design here and VCF (version 5.2.1) does not allow any other principal storage in the consolidated design (also, this article is about a vSAN stretched cluster).
Secondly, we want to use the synchronous replication of vSAN to the second site. Another reason is “German Angst”. We want to have redundancy here and a muti AZ design. In Germany, there have traditionally been stretched clusters across multiple fire compartments or buildings for a long time. In the past, I myself have already implemented such scenarios with layer 2 over layer 3 (aka VxLAN).
The much more elegant way (and also the way supported by VCF) is the vSAN stretched cluster.</p>
<h2 id="lets-get-started">Let&rsquo;s get started</h2>
<p>Of course, as always, there is a flip side to the coin. We can&rsquo;t just stretch a workload domain and all is well.
This is certainly not possible via the GUI of the SDDC Manager.
Yes, that&rsquo;s right, we will work with the API. But more on that later.
If we think about using one or more stretched workload domains, this always means that we also have to stretch our management domain.
This gives us the following requirements:</p>
<ul>
<li>8 ESXi servers for our Management Domain (4 per AZ)</li>
<li>Minimum 6 ESXi servers for Workload Domain (8 recommanded minimum)</li>
<li>Both availability zones must contain an equal number of hosts to ensure failover in case any of the availability zones goes down.</li>
<li>Redundant L3 gateways</li>
<li>A set of VLANs</li>
<li>A vSAN Witness Host (ESA or OSA Wthness Appliance)</li>
</ul>
<p>You cannot stretch a cluster in the following conditions:</p>
<ul>
<li>The cluster is a vSAN Max cluster.</li>
<li>The cluster has a vSAN remote datastore mounted on it.</li>
<li>The cluster shares a vSAN Storage Policy with any other clusters.</li>
<li>The cluster includes DPU-backed hosts.</li>
</ul>
<p>Latency vSphere</p>
<ul>
<li>Less than 150 ms latency RTT for vCenter Server connectivity.</li>
<li>Less than 150 ms latency RTT for vMotion connectivity.</li>
<li>Less than 5 ms latency RTT for VSAN hosts connectivity.</li>
</ul>
<p>Latency vSAN Site to Witness</p>
<ul>
<li>Less than 200 ms latency RTT for up to 10 hosts per site.</li>
<li>Less than 100 ms latency RTT for 11-15 hosts per site.</li>
</ul>
<p>Latency NSX Managers</p>
<ul>
<li>Less than 10 ms latency RTT between NSX Managers</li>
<li>Less than 150 ms latency RTT between NSX Managers and transport nodes.</li>
</ul>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">I will only explain the stretching of the management domain in my article, as my resources in the lab are not infinite and the process is identical for the workload domain.</div>
    </aside>
<h2 id="vlans">VLANs</h2>
<table>
  <thead>
      <tr>
          <th>Function</th>
          <th style="text-align: center">Availability Zone 1</th>
          <th style="text-align: center">Availability Zone 2</th>
          <th style="text-align: center">HA Layer 3 Gateway</th>
          <th style="text-align: center">Recommended MTU</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>VM Management VLAN</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">1500</td>
      </tr>
      <tr>
          <td>Management VLAN (AZ1)</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">X</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">1500</td>
      </tr>
      <tr>
          <td>vMotion VLAN</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">X</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">9000</td>
      </tr>
      <tr>
          <td>vSAN VLAN (AZ1)</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">X</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">9000</td>
      </tr>
      <tr>
          <td>NSX Host Overlay VLAN</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">X</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">9000</td>
      </tr>
      <tr>
          <td>NSX Edge Uplink01 VLAN</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">X</td>
          <td style="text-align: center">9000</td>
      </tr>
      <tr>
          <td>NSX Edge Uplink02 VLAN</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">X</td>
          <td style="text-align: center">9000</td>
      </tr>
      <tr>
          <td>NSX Edge Overlay VLAN</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">9000</td>
      </tr>
      <tr>
          <td>Management VLAN (AZ2)</td>
          <td style="text-align: center">X</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">1500</td>
      </tr>
      <tr>
          <td>vMotion VLAN (AZ2)</td>
          <td style="text-align: center">X</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">9000</td>
      </tr>
      <tr>
          <td>vSAN VLAN (AZ2)</td>
          <td style="text-align: center">X</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">9000</td>
      </tr>
      <tr>
          <td>NSX Host Overlay VLAN (AZ2)</td>
          <td style="text-align: center">X</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">✓</td>
          <td style="text-align: center">9000</td>
      </tr>
  </tbody>
</table>
<p>In your Lab setup you can also use 1700 byte MTU instead of 9000 byte mtu.
Redundant gateways are heavily dependent on the physical network design.
For a spine/leaf network with top of rack switches, you can use VRRP, HSRP or anycast gateway technology, depending on the manufacturer, expected traffic, fabric design and so on.
It depends heavily on the underlay design which is the right one here. In my setup, I have implemented the gateways on my top of rack switch.</p>
<h2 id="deploy-vsan-witness-host">Deploy vSAN Witness Host</h2>
<p>A vSAN Witness Host is required for a Stretched vSAN Cluster. Ready-made appliances can be downloaded from the Broadcom support portal. These are delivered as OVA and must be deployed on a third independent site. vSAN Witness can be connected either Layer 2 or Layer 3.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Best Practice</b>
        </div>
        <div class="admonition-content">The recommended way would be a layer 3 connection and each site has an independent routed connection to the Witness Appliance.</div>
    </aside>
<p>After the successful deployment, the witness host must be registered in the vCenter of the management domain. You must add the vSAN witness host to the datacenter. Do not add it to a folder. Use the fully qualified domain name (FQDN) of the vSAN witness host, not the IP address.
There are a few adjustments to be made to the witness host:</p>
<ul>
<li>Remove the dedicated VMkernel adapter for witness traffic on the vSAN witness host.</li>
<li>Remove the network port group from the virtual machine on the vSAN witness host.</li>
<li>Enable witness traffic on the VMkernel adapter for the management network of the vSAN witness host.</li>
</ul>
<p>A step-by-step guide can be found in the <a href="https://techdocs.broadcom.com/us/en/vmware-cis/vcf/vcf-5-2-and-earlier/5-2/map-for-administering-vcf-5-2/stretching-clusters-admin/deploy-vsan-witness-host-admin/configure-the-vmkernel-adapters-on-the-vsan-witness-host-admin.html">VCF 5.2 Administration Guide</a>.</p>
<h2 id="commission-host">Commission Host</h2>
<p>As I already wrote in the intro, I assume for the article that a management domain is already deployed, but that it is not yet a stretched cluster.
The physical network is configured and all VLANs and IP networks are available.
Another network pool is also required. The vSAN and vMotion network is defined in this network pool.</p>

<figure><a href="02.png"><picture>
          <source srcset="/vcf-stretch/02_hu_34d1bd188ab32ee0.webp" type="image/webp">
          <source srcset="/vcf-stretch/02_hu_51c3bb0c9760a729.jpg" type="image/jpeg">
          <img src="/vcf-stretch/02_hu_34d1bd188ab32ee0.webp"alt="Network Pool"  width="1251"  height="875" />
        </picture></a><figcaption>
            <p>Network Pool (click to enlarge)</p>
          </figcaption></figure>
<p>Now that the preparations are complete, I can add the additional hosts in the sddc manager.
These must have the same build as the existing hosts in the cluster.
If, for example, the MGMT domain has been patched with ESXi patches to a different build than is in the BoM of VCF 5.2.1, then the additional hosts must be updated to the same version before they are provisioned.</p>

<figure><a href="01.png"><picture>
          <source srcset="/vcf-stretch/01_hu_f947f535f2a482d.webp" type="image/webp">
          <source srcset="/vcf-stretch/01_hu_41fca5e398d04962.jpg" type="image/jpeg">
          <img src="/vcf-stretch/01_hu_f947f535f2a482d.webp"alt="SDDC Manager"  width="1496"  height="891" />
        </picture></a><figcaption>
            <p>SDDC Manager (click to enlarge)</p>
          </figcaption></figure>
<p>After the hosts have been successfully put into operation in the SDDC Manager, they must not be added to the management domain, as stretching the cluster is not possible via the GUI.
Next, the cluster stretch spec must be created – this is the fun part of the deployment.</p>
<h2 id="stretch-a-vsan-cluster-aka-fun-part">Stretch a vSAN Cluster (aka Fun Part)</h2>
<p>Unfortunately, the actual stretch of the cluster cannot be conveniently carried out in the SDDC GUI. A JSON cluster stretch spec must be created and then passed to the SDDC manager via an API call.</p>

    <aside class="admonition attention">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" class="feather feather-link" width="24" height="24" viewBox="0 0 24 24"
      fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
   </svg></div><b>Attention</b>
        </div>
        <div class="admonition-content">The ESXi hosts that you are adding to availability zone 2 must use the same vmnic to vSphere Distributed Switch mapping as the existing hosts in availability zone 1.</div>
    </aside>
<p>The ESXi host ID is required for the JSON. This can be read out via an API call. The easiest way to do this is to use the Developer Center in the SDDC. Of course, any API tool will also work. At this point, I was just too lazy to generate an API token and did all the queries in the developer center of the SDDC manager.</p>

<figure><a href="03.png"><picture>
          <source srcset="/vcf-stretch/03_hu_21339beb0040c761.webp" type="image/webp">
          <source srcset="/vcf-stretch/03_hu_d595aa0f2442f59e.jpg" type="image/jpeg">
          <img src="/vcf-stretch/03_hu_21339beb0040c761.webp"alt="Developer Center"  width="1112"  height="798" />
        </picture></a><figcaption>
            <p>Developer Center (click to enlarge)</p>
          </figcaption></figure>
<p>The answer contains the IDs of the ESX servers, which can be easily transferred to the cluster stretch spec. My cluster stretch spec looks like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="nt">&#34;clusterStretchSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;hostSpecs&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;hostname&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-esx05.lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;hostNetworkSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;networkProfileName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-w01-az2-nsx-np01&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;vmNics&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;vmnic0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;uplink&#34;</span><span class="p">:</span> <span class="s2">&#34;uplink1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;vdsName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-vds1&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;vmnic1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;uplink&#34;</span><span class="p">:</span> <span class="s2">&#34;uplink2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;vdsName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-vds1&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">     <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;2bb45762-b2b9-4d94-8003-980f32d449f2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;licenseKey&#34;</span><span class="p">:</span> <span class="s2">&#34;XXXX-XXXXX-XXXXX-XXXXX-XXXXX&#34;</span>
</span></span><span class="line"><span class="cl">   <span class="p">},</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;hostname&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-esx06.lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;hostNetworkSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;networkProfileName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-w01-az2-nsx-np01&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;vmNics&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;vmnic0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;uplink&#34;</span><span class="p">:</span> <span class="s2">&#34;uplink1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;vdsName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-vds1&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;vmnic1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;uplink&#34;</span><span class="p">:</span> <span class="s2">&#34;uplink2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;vdsName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-vds1&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">     <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;a1fafaf3-bb88-4ee6-9a1b-a7ca0e8e9c47&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;licenseKey&#34;</span><span class="p">:</span> <span class="s2">&#34;XXXX-XXXXX-XXXXX-XXXXX-XXXXX&#34;</span>
</span></span><span class="line"><span class="cl">   <span class="p">},</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;hostname&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-esx07.lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;hostNetworkSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;networkProfileName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-w01-az2-nsx-np01&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;vmNics&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;vmnic0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;uplink&#34;</span><span class="p">:</span> <span class="s2">&#34;uplink1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;vdsName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-vds1&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;vmnic1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;uplink&#34;</span><span class="p">:</span> <span class="s2">&#34;uplink2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;vdsName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-vds1&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">     <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;a8ece8a4-9264-4b05-8637-02cbc0a85f45&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;licenseKey&#34;</span><span class="p">:</span> <span class="s2">&#34;XXXX-XXXXX-XXXXX-XXXXX-XXXXX&#34;</span>
</span></span><span class="line"><span class="cl">   <span class="p">},</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;hostname&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-m01-esx08.lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;hostNetworkSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;networkProfileName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-w01-az2-nsx-np01&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;vmNics&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;vmnic0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;uplink&#34;</span><span class="p">:</span> <span class="s2">&#34;uplink1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;vdsName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-vds1&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;vmnic1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;uplink&#34;</span><span class="p">:</span> <span class="s2">&#34;uplink2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;vdsName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-vds1&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">     <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;c4e8e06f-5229-4d3c-86a3-a9f0f76fdea2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;licenseKey&#34;</span><span class="p">:</span> <span class="s2">&#34;XXXX-XXXXX-XXXXX-XXXXX-XXXXX&#34;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;isEdgeClusterConfiguredForMultiAZ&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;networkSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;networkProfiles&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;isDefault&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-w01-az2-nsx-np01&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;nsxtHostSwitchConfigs&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;uplinkProfileName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-w01-az2-host-uplink-profile01&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;vdsName&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-vds1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="nt">&#34;vdsUplinkToNsxUplink&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">         <span class="nt">&#34;nsxUplinkName&#34;</span><span class="p">:</span> <span class="s2">&#34;uplink-1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">         <span class="nt">&#34;vdsUplinkName&#34;</span><span class="p">:</span> <span class="s2">&#34;uplink1&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">         <span class="nt">&#34;nsxUplinkName&#34;</span><span class="p">:</span> <span class="s2">&#34;uplink-2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">         <span class="nt">&#34;vdsUplinkName&#34;</span><span class="p">:</span> <span class="s2">&#34;uplink2&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">       <span class="p">]</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">     <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">   <span class="p">],</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;nsxClusterSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;uplinkProfiles&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">     <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-w01-az2-host-uplink-profile01&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;teamings&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">       <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;activeUplinks&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">         <span class="s2">&#34;uplink-1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">         <span class="s2">&#34;uplink-2&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;DEFAULT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;policy&#34;</span><span class="p">:</span> <span class="s2">&#34;LOADBALANCE_SRCID&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;standByUplinks&#34;</span><span class="p">:</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">       <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;transportVlan&#34;</span><span class="p">:</span> <span class="mi">1011</span>
</span></span><span class="line"><span class="cl">     <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">]</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;witnessSpec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;fqdn&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf02-osa.lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;vsanCidr&#34;</span><span class="p">:</span> <span class="s2">&#34;192.168.12.0/24&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;vsanIp&#34;</span><span class="p">:</span> <span class="s2">&#34;192.168.12.22&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;witnessTrafficSharedWithVsanTraffic&#34;</span><span class="p">:</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl"> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Next, the cluster stretch spec can be validated.The cluster ID is required for this.</p>
<p>This is also done as an API call. To do this, I go to the Developer Center, then to the managing clusters section, expand <em><strong>GET /v1/cluster</strong></em> end execute the API call.</p>
<p>Here is a small excerpt of what the response looks like. The correct ID can be found in the “id” field at the top level, in my case its “e04c96fe-263c-4355-bdcf-7464b03e35d2”. The domain ID must not be used.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;elements&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;e04c96fe-263c-4355-bdcf-7464b03e35d2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;domain&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;40a61f61-0686-4514-b6a9-ba47c8533be9&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;sfo-m01-cluster-001&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;status&#34;</span><span class="p">:</span> <span class="s2">&#34;ACTIVE&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;primaryDatastoreName&#34;</span><span class="p">:</span> <span class="s2">&#34;m01-cluster-001-vsan&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;primaryDatastoreType&#34;</span><span class="p">:</span> <span class="s2">&#34;VSAN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;hosts&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;034f44ca-1654-450c-915f-6d3e072bee68&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;2bb45762-b2b9-4d94-8003-980f32d449f2&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;7cdd8928-575d-44b0-a604-834d3dd0bf13&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;9cbbe32f-31ce-450a-863c-31c39e248ab0&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span></code></pre></div><p>To perform the validate cluster stretch spec, I&rsquo;ll expand the “APIs for managing clusters” section and expand <em><strong>POST /v1/clusters/{id}/validations</strong></em>.
I enter the unique ID for the management cluster in the id text field.
In addition, the cluster stretch spec must be copied into the body field.</p>

<figure><a href="05.png"><picture>
          <source srcset="/vcf-stretch/05_hu_cc56115e897d13c2.webp" type="image/webp">
          <source srcset="/vcf-stretch/05_hu_6261fc54c387e02a.jpg" type="image/jpeg">
          <img src="/vcf-stretch/05_hu_cc56115e897d13c2.webp"alt="Validation"  width="1094"  height="867" />
        </picture></a><figcaption>
            <p>cluster stretch spec Validation (click to enlarge)</p>
          </figcaption></figure>
<p>After the validation has been successfully completed, the cluster can be stretched.
To start the actual task, another API call must be made. This time <em><strong>PATCH /v1/clusters/{id}</strong></em>. The process is the same as for the validation. I copy the cluster ID into the ID field and copy the cluster stretch spec into the body field. After executing, the cluster stretch begins. This can be followed in the SDDC in the task bar.</p>

<figure><a href="04.png"><picture>
          <source srcset="/vcf-stretch/04_hu_45b1fe68b12725c2.webp" type="image/webp">
          <source srcset="/vcf-stretch/04_hu_ddba8f2fc28efcd0.jpg" type="image/jpeg">
          <img src="/vcf-stretch/04_hu_45b1fe68b12725c2.webp"alt="Cluster Stretch"  width="1720"  height="1200" />
        </picture></a><figcaption>
            <p>Cluster Stretch (click to enlarge)</p>
          </figcaption></figure>
<p>Depending on the performance of the environment, the process may take some time. For me, it was comparable to the duration of the bring-up of the unstretched management domain. If the task has been completed successfully, the SDDC and the vCenter should look like the following screenshots.</p>
<p>
<figure><a href="06.png"><picture>
          <source srcset="/vcf-stretch/06_hu_dd40b1da7bcc41bf.webp" type="image/webp">
          <source srcset="/vcf-stretch/06_hu_f20587ac75b8d2f9.jpg" type="image/jpeg">
          <img src="/vcf-stretch/06_hu_dd40b1da7bcc41bf.webp"alt="Stretched Cluster SDDC"  width="1487"  height="683" />
        </picture></a><figcaption>
            <p>Stretched Cluster SDDC (click to enlarge)</p>
          </figcaption></figure>

<figure><a href="07.png"><picture>
          <source srcset="/vcf-stretch/07_hu_4634a0f7f8e07457.webp" type="image/webp">
          <source srcset="/vcf-stretch/07_hu_53d1f9607b3016f7.jpg" type="image/jpeg">
          <img src="/vcf-stretch/07_hu_4634a0f7f8e07457.webp"alt="Stretched Cluster vCenter"  width="1716"  height="1084" />
        </picture></a><figcaption>
            <p>Stretched Cluster vCenter (click to enlarge)</p>
          </figcaption></figure></p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Storage Policy</b>
        </div>
        <div class="admonition-content">When you stretch a cluster, VMware Cloud Foundation modifies the site disaster tolerance setting for storage policy associated with datastore of that cluster from None - standard cluster to Site mirroring - stretched cluster. This affects all VMs using default datastore policy in that cluster.</div>
    </aside>
<h2 id="notes">Notes</h2>
<p>Further stretched cluster maintenence operations like upgrades can be carried out via GUI. A cluster shrink, expand or a cluster unstretch must currently still be carried out via API.</p>
<p>You also need to think about BGP peering. Depending on the setup, each side has its own AS number for BGP and Broadcom recommends working with route maps and local preference to control traffic.
Personally, I would say: it depends. However, this topic is so extensive that it may get its own blog article at some point.
In addition, you have to worry about the placement of VMs, storage policies and much more&hellip;</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Opinion</b>
        </div>
        <div class="admonition-content">Design is always a matter of opinions and there is usually not just one perfect solution.</div>
    </aside>
<h2 id="lab-hardware-and-sizing-of-the-vms">Lab Hardware and Sizing of the VMs</h2>
<p>Perhaps a brief word about the resources used. I could have set up the lab more economically.
There is potential for savings in the NSX managers, where only one manager would have been needed with some adjustments or non nested edge vms.
But I didn&rsquo;t want anything unexpected to happen to me during the deployment, so I decided to build the whole thing as close to reality as possible.
My next attempt will be to build the setup as resource-efficient as possible.</p>
<p>As a nested ESX server, I used the <a href="https://williamlam.com/nested-virtualization/nested-esxi-virtual-appliance">Nested ESXi Virtual Appliance from William Lam</a> and customized it for my use case.
Each of the 8 ESXi virtual servers has 10 cores, 40GB of RAM and 3 hard disks. 16GB for the OS, 40 GB as an OSA cache tier and 400 GB as an OSA capacity tier. I use 2 network cards.</p>
<p>The virtual ESX servers run on 4 Minisforum MS-01 with 2x10 Gb network and 96 GB Ram each. I have 2 virtual servers running on each MS-01. The VMs run on local NVMe storage so that they are not unnecessarily moved via DRS.
I have a nested ESXi server of AZ 1 and AZ 2 running on an MS-01. The vSAN Witness Appliance runs on my management ESX server.</p>

<figure><a href="08.png"><picture>
          <source srcset="/vcf-stretch/08_hu_7143d1799f3f1a31.webp" type="image/webp">
          <source srcset="/vcf-stretch/08_hu_cb7c528aee9608e6.jpg" type="image/jpeg">
          <img src="/vcf-stretch/08_hu_7143d1799f3f1a31.webp"alt="Lab Usage"  width="552"  height="373" />
        </picture></a><figcaption>
            <p>Lab usage (click to enlarge)</p>
          </figcaption></figure>
<p>After the lab has booted and all services are running as they should, the resource requirements calm down a bit. I still have 200GB of RAM free on my physical hosts, so there is room for expansion and further tests.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Deploying a stretched cluster is not that difficult if you follow all the preparations and meet all the requirements. The real challenge lies elsewhere, namely in the design of the actual stretched cluster.</p>
]]></content>
		</item>
		
		<item>
			<title>VCF Import Tool - Enable Overlay in an imported VCF Domain</title>
			<link>https://sdn-warrior.org/posts/vcf-import-overlay/</link>
			<pubDate>Wed, 05 Mar 2025 21:00:00 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/vcf-import-overlay/</guid>
			<description><![CDATA[Part 2 VCF Import Cluster with NFS and activating the overlay.]]></description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>My blog is a follow-up to my article <a href="https://sdn-warrior.org/posts/vcf-import-cluster/">&ldquo;VCF Import Tool - Run VCF with NFS as principal Storage&rdquo;</a> and covers the activation of the overlay network after I have successfully converted an ESXi cluster to a VCF management domain using the VCF Import Tool.</p>
<p>The VCF import tool still has a few limitations. Among other things, no NSX TEP interface is configured in VCF 5.2.1 after the convert or import. Without the tunnel endpoints it is not possible to use NSX overlay networks. In this blog I will show which steps you have to take to prepare NSX so that we can create and use overlay networks.</p>
<h2 id="creating-an-ip-pool">Creating an IP pool</h2>
<p>For our TEP network we can either use a DHCP server or the IP pool variant preferred by VMware. I personally find the DHCP server more flexible and easier for environments that need to grow quickly, but there is no right or wrong at this point. However, when creating the pool, you should make sure that our subnet has a sufficient size, as this can only be changed to a limited extent after successful allocation.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Best practice</b>
        </div>
        <div class="admonition-content">VMware recommends the use of /24 networks in the current NSX Reference Design Guide. This would also be my recommendation, as you need 2 IP addresses per transport node for a dual TEP setup and you want to be prepared for the future. Outside of VCF, setups with 4 TEP IP addresses per transport node are also possible and you never know what will happen in future.</div>
    </aside>
<p>To create an IP pool, we go to <strong>IP Address Pools</strong> under <strong>Networking</strong> in the NSX Gui and click the <strong>ADD IP ADDRESS POOL</strong> button.</p>
<p>Under Subnet we click on the IP RANGES button and configure our IP range, our network CIDR and a gateway. The TEP network must be routed, as the Edge Transport Nodes normally have their TEP IP addresses in a different network and VLAN. While it is possible for the Edge Transport Nodes to be on the same VLAN and network as our Host Transport Nodes, this is a less common scenario and requires the Edge Transport Nodes to either run on non-NSX enabled hosts or use NSX backed VLAN segments. I have already writte a <a href="https://evoila.com/blog/nsx-sharing-overlay-transport-vlan-between-esxi-teps-edge-teps/">blog</a> for Evoila about this.</p>

<figure><a href="01.png"><picture>
          <source srcset="/vcf-import-overlay/01_hu_75da3c2320055e6f.webp" type="image/webp">
          <source srcset="/vcf-import-overlay/01_hu_adc7f7f5c384fb52.jpg" type="image/jpeg">
          <img src="/vcf-import-overlay/01_hu_75da3c2320055e6f.webp"alt="IP Pool"  width="2302"  height="1434" />
        </picture></a><figcaption>
            <p>IP Pool configuration (click to enlarge)</p>
          </figcaption></figure>
<p>Finally, we define a name for the IP pool and save the configuration.</p>
<h2 id="update-the-default-transport-zone">Update the default Transport Zone</h2>
<p>In NSX, a transport zone (TZ for short) is a logical grouping of transport nodes that defines which network segments can exist on these nodes.
It determines the scope of the overlay and VLAN networks and is not a security feature.
There are two types of TZ: an overlay and a VLAN transport zone. For the imported or converted VCF environment, we only need to make changes to the overlay TZ. The VLAN TZ is created when the Edge Nodes are deployed via the SDDC Manager and no longer needs to be customized.
VCF uses the default transport zone <em><strong>nsx-overlay-transportzone</strong></em>.
This must also be assigned later in the <em><strong>transport node profile</strong></em>.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info Overlay TZ</b>
        </div>
        <div class="admonition-content">VCF 5.2.1 currently only supports one overlay transport zone. It is not possible to use multiple overlay transport zones. This can be a crucial point in the NSX design. If I don&rsquo;t want the overlay networks in my workload domains to be visible everywhere, I have to deploy multiple workload domains with their own NSX instance.</div>
    </aside>
<p>We first need to add two tags to the TZ. These tags are used internally by the SDDC manager to identify the TZ as being used by VCF.</p>

    <aside class="admonition alert">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" class="feather feather-link" width="24" height="24" viewBox="0 0 24 24"
      fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
   </svg></div><b>TAGs</b>
        </div>
        <div class="admonition-content">Note that the tag consists of two parts, the tag name and the tag scope. Also, tags are case sensitive, so you need to enter them exactly as shown.</div>
    </aside>
<p>The transport zones can be found in the NSX GUI under <em><strong>System</strong></em> - <em><strong>Transport Zone</strong></em>. There should be exactly one overlay transport zone that also has the default flag.
The following TAGs must be attached to the overlay transport zone:</p>
<table>
  <thead>
      <tr>
          <th>Tag Name</th>
          <th>Scope</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>VCF</td>
          <td>Created by</td>
      </tr>
      <tr>
          <td>vcf</td>
          <td>vcf-orchestration</td>
      </tr>
  </tbody>
</table>
<p>The transport zone type cannot be changed afterwards. We can and must only add tags here.</p>

<figure><a href="02.png"><picture>
          <source srcset="/vcf-import-overlay/02_hu_43f1e05bcdc986ff.webp" type="image/webp">
          <source srcset="/vcf-import-overlay/02_hu_f39a966cbbe70043.jpg" type="image/jpeg">
          <img src="/vcf-import-overlay/02_hu_43f1e05bcdc986ff.webp"alt="Transport Zone"  width="2870"  height="980" />
        </picture></a><figcaption>
            <p>Transport Zone configuration (click to enlarge)</p>
          </figcaption></figure>
<h2 id="edit-the-transport-node-profiles">Edit the Transport Node Profiles</h2>
<p>The next step is to customize the transport node profile so that we can use overlay networks and create NSX TEP interfaces on our ESXi servers.</p>
<p>Since NSX 3.1.x, the Transport Node profile can be found under <em><strong>Fabric</strong></em> - <em><strong>Hosts</strong></em> - <em><strong>Transport Node Profile</strong></em>. The VCF Import Tool has already created a profile for us. As is so often the case with VCF, the profile has a cryptic name that consists of an ID + domain and the text autoconf-tnp. You can safely ignore the name. We need to go to the profile&rsquo;s host switch config and add the overlay transport zone to the profile. As soon as we have added this TZ, additional options for IP assignment will appear. The previously created IP pool is selected here. We save the whole thing and that&rsquo;s it for the changes in the NSX.</p>

<figure><a href="03.png"><picture>
          <source srcset="/vcf-import-overlay/03_hu_6c14cf5c1e3c757c.webp" type="image/webp">
          <source srcset="/vcf-import-overlay/03_hu_22a98347318cf0a2.jpg" type="image/jpeg">
          <img src="/vcf-import-overlay/03_hu_6c14cf5c1e3c757c.webp"alt="TNP"  width="2308"  height="1708" />
        </picture></a><figcaption>
            <p>Transport Node Profile configuration (click to enlarge)</p>
          </figcaption></figure>
<p>After everything has been saved, NSX starts customizing the cluster and configuring TEP IP addresses for each of our ESXi servers.</p>
<h2 id="verify-tep-network">Verify TEP Network</h2>
<p>There are several ways to check the TEP network.
We can look it up in the vCenter, where each host should now have 2 VMK adapters with IP addresses from our TEP network.
VKM10 and VMK11 are responsible for processing our TEP traffic in the dual TEP setup. The second option is in NSX itself.
To do this, go to <em><strong>System</strong></em> - <em><strong>Fabric</strong></em> - <em><strong>Hosts</strong></em> and look at our cluster.
In the TEP IP Addresses column, each ESXi in the cluster should have two IP addresses.</p>

<figure><a href="04.png"><picture>
          <source srcset="/vcf-import-overlay/04_hu_da2602b0b4319551.webp" type="image/webp">
          <source srcset="/vcf-import-overlay/04_hu_80f31889082978ef.jpg" type="image/jpeg">
          <img src="/vcf-import-overlay/04_hu_da2602b0b4319551.webp"alt="TEP IP"  width="2888"  height="1486" />
        </picture></a><figcaption>
            <p>Transport Node TEP IPs (click to enlarge)</p>
          </figcaption></figure>
<p>The third option is to ping from one ESXi server to another. To do this, the VMK ping command must be executed as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>root@vcf03-m01-esx01:~<span class="o">]</span> vmkping -I vmk10 -S vxlan 10.28.4.105 -d -s <span class="m">1972</span>
</span></span><span class="line"><span class="cl">PING 10.28.4.105 <span class="o">(</span>10.28.4.105<span class="o">)</span>: <span class="m">1972</span> data bytes
</span></span><span class="line"><span class="cl"><span class="m">1980</span> bytes from 10.28.4.105: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">0</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nv">time</span><span class="o">=</span>0.274 ms
</span></span><span class="line"><span class="cl"><span class="m">1980</span> bytes from 10.28.4.105: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">1</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nv">time</span><span class="o">=</span>0.113 ms
</span></span><span class="line"><span class="cl"><span class="m">1980</span> bytes from 10.28.4.105: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">2</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nv">time</span><span class="o">=</span>0.267 ms
</span></span></code></pre></div><p>I use an MTU of 2000 in my lab, so the maximum payload is 1972 bytes.<br>
<code>-d</code> sets the <strong>don&rsquo;t fragment</strong> bit, and <code>-S vxlan</code> uses the <strong>VXLAN socket interface</strong> for the ping.
This is used to test the transport over the <strong>NSX Geneve overlay</strong>.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info MTU</b>
        </div>
        <div class="admonition-content">NSX 4.X uses a minimum MTU of 1700 bytes. Normally, I also stick to this size in my labs, but I made a typing error when creating the AVN and I didn&rsquo;t want to do it all over again. Happy little excidents ;) In productive environments, an MTU size of 9000 is always preferable.</div>
    </aside>
<h2 id="update-the-sddc-manager">Update the SDDC Manager</h2>
<p>We need to use our VCF import tool again so that our SDDC manager also knows that we now have an overlay transport zone and that we can deploy our AVN for the Aria Suite, for example. To do this, we perform a sync and wait for it to complete.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">python3 vcf_brownfield.py sync --vcenter <span class="s1">&#39;vcf03-vcsa.lab.home&#39;</span> --sso-user <span class="s1">&#39;administrator@vsphere.local&#39;</span> --domain-name <span class="s1">&#39;mgmt&#39;</span>
</span></span></code></pre></div><p>Don&rsquo;t be surprised if you get an error after the sync. However, you can ignore it and it is totally logical that it occurs.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">Status: VALIDATION_FAILED
</span></span><span class="line"><span class="cl">  Check Name: vCenter Server no NSX Manager present
</span></span><span class="line"><span class="cl">  Description: Check that the vCenter Server does not have an NSX Manager connected to it
</span></span><span class="line"><span class="cl">  Details: Detected an NSX Manager connected to the vCenter Server
</span></span><span class="line"><span class="cl">  Remediation: Please ensure that no NSX Manager is connected to the vCenter Server to be imported
</span></span></code></pre></div><p>So our converted MGMT domain would be ready for use. Next, I deployed my Edge Cluster and then the Aria Suite. But that&rsquo;s not what this article is about.</p>
<h2 id="conclusion">Conclusion</h2>
<p>I really like the VCF Import tool, even though it still needs some fine-tuning here and there.
The sync function is quite practical and is a good way to bring changes made outside of the SDDC Manager back into the SDDC Manager.
Hopefully Broadcom will also provide the sync for a regularly deployed VCF, which from NSX&rsquo;s point of view would significantly enrich the VCF in terms of flexibility.</p>
]]></content>
		</item>
		
		<item>
			<title>VCF Import Tool - Run VCF with NFS as principal Storage </title>
			<link>https://sdn-warrior.org/posts/vcf-import-cluster/</link>
			<pubDate>Sun, 23 Feb 2025 16:00:00 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/vcf-import-cluster/</guid>
			<description><![CDATA[Importing from a vSphere cluster with NFS 3 as principal storage without losing support.]]></description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>VCF is a powerful platform designed to simplify the deployment of vSphere, NSX and the Aria product family.
This is both a blessing and a curse. On the one hand, the Cloudbuilder and SDDC Manager significantly simplify deployment, but this also takes away a certain amount of flexibility.
In addition, not every customer starts on a greenfield site.
Another point is the need for resources, which affects us home labbers in particular.
Many want to prepare for the new VCP exams and are now forced to deploy VCF in their Homelab.
There are already many solutions for this, such as the Holodeck, the <a href="https://github.com/lamw/vcf-automated-lab-deployment">Automated Lab Deployment Scrip</a>) or the <a href="https://github.com/lamw/vcf-automated-import-lab-deployment">Automated VMware Cloud Foundation Import Lab Deployment</a> script (both from the great <a href="https://williamlam.com/">William Lam</a>), but in my view this is too far removed from the kind of deployment that a customer will experience.
Therefore I will show several ways how to create VCF as close as possible to a real deployment without needing the real resources.
In this article I would like to show you how to do a convert with the VCF Import Tool. I will write more articles about VCF deployment in the future.</p>
<h2 id="why-use-the-import-tool">Why use the import tool?</h2>
<p>As indicated in the title, the import tool allows a VCF deployment with NFS as principal storage, which means that we do not need vSAN.
As much as I like vSAN, vSAN in Homelab always means additional resource consumption.
I need fast networking, local NVMes and the overall performance is still not great as I usually set up my LABs nested in my homelab.
In addition, the use of vSAN consumer NVMes wears out very quickly.
Thanks to VCF 5.2 and the VCF Import Tool, we can get around this relatively easily. Of course, there are always a few limitations.</p>
<table>
  <thead>
      <tr>
          <th style="text-align: center">Storage Type</th>
          <th style="text-align: center">Consolidated Workload Domain</th>
          <th style="text-align: center">Management Domain</th>
          <th style="text-align: center">VI Workload Domain</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center"><strong>Principal</strong> Storage</td>
          <td style="text-align: center">No</td>
          <td style="text-align: center">Only for a management domain converted from vSphere infrastructure</td>
          <td style="text-align: center">Yes</td>
      </tr>
      <tr>
          <td style="text-align: center"><strong>Supplemental</strong> Storage</td>
          <td style="text-align: center">Yes</td>
          <td style="text-align: center">Yes</td>
          <td style="text-align: center">Yes</td>
      </tr>
  </tbody>
</table>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>NFS Version</b>
        </div>
        <div class="admonition-content">Only supports NFS protocol version 3 when used as principal storage. Supplemental storage can use either vSphere supported NFS protocol version 3 or 4.1. Although NFS 3 and NFS 4.1 can coexist on the same host, you cannot use different NFS versions to mount the same datastore on different hosts.</div>
    </aside>
<p>What can we take from the table now? It is possible to deploy a standard VCF design with NFS3 and without vSAN, and the best part is that the whole thing is officially supported and is not a homemade solution.</p>
<h2 id="deployment-and-preparation-of-the-management-domain">Deployment and preparation of the management domain</h2>
<p>First of all, we need to prepare our future management domain. To do this, I am deploying four virtual ESXi servers. I am using the Flings OVA from William Lam and adapting it for my lab.
My 4 ESX Nested Servers have the following hardware:</p>
<ul>
<li>10 vCPUs</li>
<li>45 GB RAM</li>
<li>16 GB Thin Storage</li>
<li>2 Network Cards</li>
</ul>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Virtual Hardware</b>
        </div>
        <div class="admonition-content">It is possible to carry out the deployment with fewer resources, but I had to deal with timeouts during the deployment and, based on my experience, these are the best sizing with my LAB hardware.</div>
    </aside>
<p>NTP service and DNS including reverse lookup must be available and working. In addition, all VLANs, gateways and, if necessary, firewall rules must be in place. To keep this article short, I won&rsquo;t go into this part in detail. The required networks can be found in the VCF Guide.</p>
<p>Of course, there are a few restrictions and things that we have to consider here as well.</p>
<ul>
<li>
<p>Cluster - Storage:</p>
<p>Default cluster must be one of vSAN, NFS v3, VMFS-FC, or VMFS-FCoE (only supported with VCF 5.2.1 and later).
NFS 4.1, VVOLs, and native iSCSI are not supported</p>
<p>Clusters cannot be stretched vSAN (and we will not be using vSAN either)</p>
<p>VCF 5.2: All clusters (vSAN, NFS v3, FC) must be 4 nodes minimum.</p>
<p>VCF 5.2.1.x When using NFS or FC and vLCM images, the default cluster must be 2 nodes minimum. When using NFS or FC and vLCM baselines, the default cluster must be 4 nodes minimum.</p>
</li>
<li>
<p>Cluster - Network:</p>
<p>vCenter Server must not have an existing NSX instance registered</p>
<p>LACP - VCF Import Tool 5.2.1.2 with SDDC Manager 5.2.1.1: Supported other Version are Not supported</p>
<p>Use vSphere Distributed Switches only. Standard or Cisco virtual switches are not supported.</p>
<p>VMkernel IP addresses must be statically assigned</p>
<p>Multiple VMkernels for a single traffic type (vSAN , vMotion) are not supported</p>
<p>VCF Import Tool 5.2.1.2 with SDDC Manager 5.2.1.1: ESXi hosts can have a different number of physical uplinks (minimum 2) assigned to a vSphere distributed switch. Each uplink must be a minimum of 10Gb.</p>
<p>Ealier versions: ESXi hosts must have the same number of physical uplinks (minimum 2) assigned to a vSphere distributed switch. Each uplink must be a minimum of 10Gb.</p>
<p>vSphere distributed switch teaming policies must match VMware Cloud Foundation standards</p>
<p>Dedicated vMotion network must be configured</p>
</li>
<li>
<p>Cluster - Compute:</p>
<p>Clusters must not be VxRail managed</p>
<p>Clusters that use vSphere Configuration Profiles are not supported</p>
<p>All clusters must be running vSphere 8.0U3 or later</p>
<p>DRS must be fully automated</p>
</li>
</ul>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Limitations</b>
        </div>
        <div class="admonition-content">There are more limitations, but these should be the most important ones.
10 Gb/s network is not necessary in a nested environment. The exact requirements can be found in the current <a href="https://techdocs.broadcom.com/us/en/vmware-cis/vcf/vcf-5-2-and-earlier/5-2/map-for-administering-vcf-5-2/importing-existing-vsphere-environments-admin/considerations-before-converting-or-importing-existing-vsphere-environments-into-vcf-admin.html">VCF 5.2 Administration Guide</a>.</div>
    </aside>
<p>So after I have prepared my future management domain, it should look similar to the screenshot below.</p>

<figure><a href="vcf01.png"><picture>
          <source srcset="/vcf-import/vcf01_hu_c95dd8930db031a9.webp" type="image/webp">
          <source srcset="/vcf-import/vcf01_hu_63424ee8bc073bac.jpg" type="image/jpeg">
          <img src="/vcf-import/vcf01_hu_c95dd8930db031a9.webp"alt="ESXi Cluster"  width="1257"  height="550" />
        </picture></a><figcaption>
            <p>ESXi Cluster with NFS Storage (click to enlarge)</p>
          </figcaption></figure>
<h2 id="convert-the-cluster-to-a-management-domain">Convert the cluster to a management domain</h2>
<p>After I have prepared my cluster, the real fun can begin. To do this, I first need to download the SDDC Manager, the VCF Import Tool and the appropriate NSX bundle.
In my case, it was the following software versions:</p>
<ul>
<li>VCF-SDDC-Manager-Appliance-5.2.1.1-24397777.ova</li>
<li>VMware Software Install Bundle - NSX_T_MANAGER 4.2.1.0</li>
<li>VCF Import Tool 5.2.1.2</li>
</ul>
<p>The software can be found in the Broadcom support portal under Tools and Drivers in the corresponding VCF 5.2.1 category.
First, I deploy the SDDC Manager appliance to my cluster. The SDDC Manager will later deploy our NSX managers. The SDDC Manager will deploy NSX to the same network and storage where it is located. Network and storage cannot be customized during the deployment of the NSX managers.
After that, I create a JSON file for the future NSX cluster. Here is my example file:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;license_key&#34;</span><span class="p">:</span> <span class="s2">&#34;XXXX-XXXX-XXXX-XXXX-XXXX&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;form_factor&#34;</span><span class="p">:</span> <span class="s2">&#34;medium&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;admin_password&#34;</span><span class="p">:</span> <span class="s2">&#34;xxx&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;install_bundle_path&#34;</span><span class="p">:</span> <span class="s2">&#34;/nfs/vmware/vcf/nfs-mount/bundle/bundle-133764.zip&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;cluster_ip&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.10&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;cluster_fqdn&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf03-m01-nsx01.lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;manager_specs&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;fqdn&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf03-m01-nsx01a.lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf03-m01-nsx01a&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;ip_address&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.11&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;gateway&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;subnet_mask&#34;</span><span class="p">:</span> <span class="s2">&#34;255.255.255.0&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;fqdn&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf03-m01-nsx01b.lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf03-m01-nsx01b&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;ip_address&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.14&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;gateway&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;subnet_mask&#34;</span><span class="p">:</span> <span class="s2">&#34;255.255.255.0&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;fqdn&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf03-m01-nsx01c.lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;vcf03-m01-nsx01c&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;ip_address&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.15&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;gateway&#34;</span><span class="p">:</span> <span class="s2">&#34;10.28.0.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;subnet_mask&#34;</span><span class="p">:</span> <span class="s2">&#34;255.255.255.0&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div>
    <aside class="admonition attention">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" class="feather feather-link" width="24" height="24" viewBox="0 0 24 24"
      fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
   </svg></div><b>NSX Deployment</b>
        </div>
        <div class="admonition-content"><p>The importer tool would like to create a 3 node NSX cluster by default.
By customizing the actual domainmanager properties, you can reduce this to a single node – however, this is then no longer supported by Broadcom and should not be used in a production environment.
It is not enough to just customize the JSON file.</p>
<p>In addition, I tried it first with the small form factor and my convert was not successful because not all services could be started successfully on the NSX cluster. I have experienced this several times in nested environments. Therefore, I always deploy my NSX manager to medium and after a successful deployment, I manually remove the RAM reservation and reduce the manager to 4 vCPUs and 20GB ram. In my environment, this is the best compromise between resource consumption and functionality and performance.</p>
</div>
    </aside>
<h3 id="tipp-customizing-the-nsx-cluster-size">Tipp: Customizing the NSX cluster size</h3>
<p>First, I log in to my SDDC manager with the VCF user via ssh and switch to the root context. Then I add the
application-prod.properties file with the following addition.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">cat &gt;&gt; /etc/vmware/vcf/domainmanager/application-prod.properties &lt;&lt; EOF
</span></span><span class="line"><span class="cl">nsxt.manager.cluster.size=1 
</span></span><span class="line"><span class="cl">EOF
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">systemctl restart domainmanager.service
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">watch &#39;systemctl status domainmanager.service&#39;
</span></span></code></pre></div><p>After restarting the domain manager services, the changes should take effect and it is possible to deploy an NSX single node cluster. In my current test I did not do this, but in the past I have often done single node nsx cluster vcf deployments in the lab.</p>
<h3 id="upload-software-and-run-precheck">Upload Software and run precheck</h3>
<p>The next step is relatively simple: I use WinSCP to upload the import tool, the NSX upgrade bundle and the  NSX deployment json to my SDDC Manager.
The upgrade bundle is placed in the directory specified in the NSX spec. In my case, it is</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">/nfs/vmware/vcf/nfs-mount/bundle/bundle-133764.zip
</span></span></code></pre></div><p>and I upload the NSX spec and the import tool to</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">/home/vcf
</span></span></code></pre></div><p>Next, uncompress the import tool and you&rsquo;re ready to go.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">tar xvf vcf-brownfield-import-5.2.1.2-24494579.tar.gz
</span></span></code></pre></div><p>To run the precheck, we change to the vcf-browndield-toolset directory and run the precheck with the following command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">python3 vcf_brownfield.py check --vcenter &#39;&lt;my-vcenter-address&gt;&#39; --sso-user &#39;&lt;my-sso-username&gt;&#39;
</span></span></code></pre></div><p>Should there be any errors in the precheck, the tool generates guardrails files in which you can read about the problem. In my case, the precheck went cleanly and I can now start the actual convert of my management domain.</p>
<p>The command is more or less the same, only a few parameters have to be changed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">python3 vcf_brownfield.py convert --vcenter &#39;&lt;vcenter-fqdn&gt;&#39; --sso-user &#39;&lt;sso-user&gt;&#39; --domain-name &#39;&lt;wld-domain-name&gt;&#39; --nsx-deployment-spec-path &#39;&lt;nsx-deployment-json-spec-path&gt;&#39;
</span></span></code></pre></div><p>Actions:</p>
<table>
  <thead>
      <tr>
          <th>Action</th>
          <th>Additional Information</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><code>-h, --help</code></td>
          <td>Shows the VCF Import Tool help.</td>
      </tr>
      <tr>
          <td><code>-v, --version</code></td>
          <td>Displays the VCF Import Tool version.</td>
      </tr>
      <tr>
          <td><code>convert</code></td>
          <td>Converts existing vSphere infrastructure into the management domain in SDDC Manager.</td>
      </tr>
      <tr>
          <td><code>check</code></td>
          <td>Checks whether a vCenter is suitable to be imported into SDDC Manager as a workload domain.</td>
      </tr>
      <tr>
          <td><code>import</code></td>
          <td>Imports a vCenter as a VI workload domain into SDDC Manager.</td>
      </tr>
      <tr>
          <td><code>sync</code></td>
          <td>Syncs an imported VI workload domain or a VI workload domain deployed from SDDC Manager. See <em>Manage Workload Domain Configuration Drift Between vCenter Server and SDDC Manager</em>.</td>
      </tr>
      <tr>
          <td><code>deploy-nsx</code></td>
          <td>Deploys NSX Manager as a standalone operation. See <em>Deploy NSX Manager for Workload Domains</em>.</td>
      </tr>
      <tr>
          <td><code>precheck</code></td>
          <td>Runs prechecks on vCenter.</td>
      </tr>
  </tbody>
</table>
<p>Parameter:</p>
<table>
  <thead>
      <tr>
          <th>Parameter</th>
          <th>Additional Information</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><code>--vcenter</code></td>
          <td>Target vCenter Server for the current operation.</td>
      </tr>
      <tr>
          <td><code>--sso-user</code></td>
          <td>SSO administrator user for the target vCenter Server.</td>
      </tr>
      <tr>
          <td><code>--sso-password</code></td>
          <td>SSO administrator password for the target vCenter Server. Used for prevalidation only.</td>
      </tr>
      <tr>
          <td><code>--domain-name</code></td>
          <td>Workload domain name to be assigned to the target environment during convert/import.</td>
      </tr>
      <tr>
          <td><code>--nsx-deployment-spec-path</code></td>
          <td>Absolute path to the NSX deployment spec JSON file.</td>
      </tr>
  </tbody>
</table>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">The tool took about 80 minutes to complete the process on my system. Of course, it always depends on the performance of the environment.
You can view the progress at any time in the SDDC or in the vCenter. In between, there are queries, such as whether you have taken a snapshot at the SDDC manager. So it&rsquo;s not easy to run completely unattended. So grab a coffee and enjoy the show.</div>
    </aside>
<p>After the convert has hopefully been successful, the whole thing should now look like on my screenshot.</p>

<figure><a href="vcf02.png"><picture>
          <source srcset="/vcf-import/vcf02_hu_ff8c78de8946466a.webp" type="image/webp">
          <source srcset="/vcf-import/vcf02_hu_984d7722d590294a.jpg" type="image/jpeg">
          <img src="/vcf-import/vcf02_hu_ff8c78de8946466a.webp"alt="Convert successfully"  width="2188"  height="773" />
        </picture></a><figcaption>
            <p>Convert successfully(click to enlarge)</p>
          </figcaption></figure>

<figure><a href="vcf03.png"><picture>
          <source srcset="/vcf-import/vcf03_hu_cc37f997f9abfa79.webp" type="image/webp">
          <source srcset="/vcf-import/vcf03_hu_11edb348f99072ba.jpg" type="image/jpeg">
          <img src="/vcf-import/vcf03_hu_cc37f997f9abfa79.webp"alt="MGMT Domain with NFS Storage"  width="1489"  height="534" />
        </picture></a><figcaption>
            <p>MGMT Domain with NFS Storage(click to enlarge)</p>
          </figcaption></figure>
<p>Congratulations, we now have a supported workload domain with NFS storage.
Of course, we still have some fine-tuning to do. For example, no NSX Edges have been deployed yet and the ESX servers have been made transport nodes, but they do not yet have TEP addresses.
This is work that we have to do manually in the NSX Manager.
We also still need to install licenses in the SDDC manager and setup the software repository so that we can install updates directly via the SDDC if necessary.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>NSX Edge Cluster</b>
        </div>
        <div class="admonition-content">NSX is deployed on the convert without overlay configuration. After manually adjusting the overlay config in the NSX Manager, you have to perform a sync via the import tool, otherwise you cannot deploy edge clusters via the SDDC and cannot use AVNs, which in turn are needed for the Aria Suite.</div>
    </aside>
<p>There are now two options for the future workload domains: 1. import via the import tool (the process is analogous to the convert) or 2. normal deployment via the SDDC manager.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Importing or converting existing ESXi clusters enables us to deploy VCF in a resource-efficient way in the lab and also offers the possibility for PoCs for customers who would like to test VCF but do not have vSAN Ready nodes. The import tool in VCF 5.2 extends the possibilities of VCF and gives us a bit more flexibility in deploying VCF. From my point of view, this is the right way to make VCF more widely accepted by customers. It also gives us the opportunity to become familiar with the product with fewer resources.</p>

    <aside class="admonition warning">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-alert-circle">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="8" x2="12" y2="12"></line>
      <line x1="12" y1="16" x2="12.01" y2="16"></line>
   </svg></div><b>A last word</b>
        </div>
        <div class="admonition-content">I wouldn&rsquo;t recommend importing or converting an existing workload productively just yet. The feature is still quite new and, although many errors are already caught in the prechecks, it&rsquo;s not yet perfect and bulletproof. For customer PoCs, I would always set up a fresh cluster and then import it so that you don&rsquo;t end up with any legacy issues.</div>
    </aside>
]]></content>
		</item>
		
		<item>
			<title>JetKVM - all show and no substance?</title>
			<link>https://sdn-warrior.org/posts/jetkvm/</link>
			<pubDate>Mon, 03 Feb 2025 21:00:00 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/jetkvm/</guid>
			<description><![CDATA[The good, the bad and the ugly - JetKVM]]></description>
			<content type="html"><![CDATA[<h2 id="jetkvm-a-kickstarter-project">JetKVM a Kickstarter Project</h2>
<p>Yes, there we have another kickstarter project. JetKVM advertises itself as a cheap, fast and open-source network KVM solution. It should provide 60FPS with an average latency of 30-60 ms, H264 endoding and an RJ11 extension port. All for a modest $69 - it almost sounds too good to be true. Well, I got hooked by all the influencer videos and ordered two of them right away. Since one of the two arrived as DOA (defect on arrival), I&rsquo;m only now getting to my conclusion and test.</p>

<figure><picture>
          <source srcset="/jetkvm/01_hu_7cd1910a4daca412.webp" type="image/webp">
          <source srcset="/jetkvm/01_hu_78a4d3b8620f7d83.jpeg" type="image/jpeg">
          <img src="/jetkvm/01_hu_7cd1910a4daca412.webp"alt="JetKVM"  width="1200"  height="900" />
        </picture><figcaption>
            <p>JetKVM</p>
          </figcaption></figure>
<p>But first things first: what exactly is a KVM? In short, it stands for keyboard, video and mouse. The KVM allows me to control my computer remotely. This is very practical for my NUCs, as they do not have remote management and are permanently installed in my 19-inch rack. Since it is a network KVM, it can be controlled via the network, quite conveniently via the browser. In addition, JetKVM offers the option of a virtual “CD” drive, enabling remote installation of operating systems or data transfer via ISOs.</p>
<h2 id="how-to-get-started">How to get started</h2>
<p>The JetKVM package is relatively small. The slim box contains the JetKVM itself, a very, very short mini HDMI to HDMI cable, a USB A to C cable and a USB C power/data splitter cable. The JetKVM itself has only a small touchscreen display (which cannot be turned off), a mini HDMI port, a USB C port for data and power, a 100 Mbit RJ45 port and an RJ11 extension port for which separate modules will probably be available at a later date, for example to switch on a computer via ATX. That&rsquo;s it.</p>
<h3 id="power-on-the-jetkvm">Power on the JetKVM</h3>
<p>The most common way to power the JetKVM is through its USB-C port, which is connected directly to the computer you&rsquo;re controlling. It is also possible to use a USB-C Y-cable splitter that separates the power and data connections. This allows you to connect one cable to your remote host for data transfer, while powering the device from a separate 5V power supply, such as a phone charger. According to the manufacturer, it is also possible to supply the JetKVM with power via the RJ11 socket – however, I was unable to test this. In addition, an ATX extension is planned that would allow the JetKVM to be supplied with 5V directly via pin headers.</p>
<p>While it looks very good on the power side, it looks rather thin on the network side. You definitely need a network with DHCP. There is currently no way to set a fixed IP address. Perhaps one of the numerous customized firmware versions that can be found on the internet offers such a possibility, but it does not work with the unmodified original software. As is usual with network KVMs, we only have a 100 Mbit port, which I will come back to later.</p>
<p>After the JetKVM has booted up and obtained an IP address via DHCP, the interface greets us in bright white (no dark mode - put on sunglasses) and prompts us to assign a password. Congratulations – you have successfully set up your JetKVM.</p>
<h3 id="settings">Settings</h3>
<p>The settings are still relatively limited at the moment. You can check for updates, hide the mouse cursor (the local machine&rsquo;s cursor, not the one you are controlling), a mouse jiggler that is really super handy and you won&rsquo;t notice negatively, and a few quality settings. It is also relatively practical to adjust the EDID, so you can, for example, specify that you are sitting at a Dell monitor. This can help with incompatibilities. You can also specify a custom EDID. I have not tested the JetKVM Cloud and therefore cannot say anything about it. In principle, the focus was on the essentials. Most annoying is that the Relative Mouse Mode does not yet exist - thus the full screen mode is very unusable, because the mouse is in absolute mode and thus differs between local and remote computer in full screen mode, which makes control unnecessarily difficult.</p>

<figure><a href="02.png"><picture>
          <source srcset="/jetkvm/02_hu_6134684836700a5b.webp" type="image/webp">
          <source srcset="/jetkvm/02_hu_afe0594644ae58dd.jpg" type="image/jpeg">
          <img src="/jetkvm/02_hu_6134684836700a5b.webp"alt="JetKVM Settings"  width="2526"  height="1283" />
        </picture></a><figcaption>
            <p>JetKVM Settings (click to enlarge)</p>
          </figcaption></figure>
<p>Apart from the settings listed, you can enable or disable the local password. Enable Dev Channel updates or even unlock SSH to play around with the firmware and system yourself. There is also a small connection status page where you can see the round-trip time, jitter, packet loss and FPS. As expected, all this was great during my tests, even though my computer was on Wi-Fi – but it&rsquo;s not that difficult to transfer 100 Mbit stably over Wifi 6e.</p>
<h3 id="other-features">Other Features</h3>
<p>Now let&rsquo;s move on to the other features, and there are a few things to criticize. But let&rsquo;s start with the practical one first. There is a virtual keyboard and it always worked well for me. Especially handy if you need to get into a bios or you&rsquo;re a Mac user and can&rsquo;t just press CTRL+ALT+DEL (because you don&rsquo;t have DEL on your mechanical keyboard 😄). Since the JetKVM unfortunately can&rsquo;t turn on a PC remotely without the extension module, a Wake on Lan function was implemented. This worked well for me as long as the JetKVM was in the same VLAN as the PC. Since my Mikrotik switches can do that too, this is rather uninteresting for me and more of a nice to have. But now we come to the biggest annoyance: the virtual CD drive. Currently, only URL Mount is possible as an experimental feature, or ISOs previously uploaded to the JetKVM&rsquo;s internal storage. Streaming an ISO via the browser, as offered by iDRAC or other network KVM solutions, for example, is not yet possible. Uploading to the internal storage (13 GB free) takes a correspondingly long time over 100 Mbit. With a vCenter ISO, the internal storage is then already quite full.</p>

<figure><picture>
          <source srcset="/jetkvm/03_hu_21a7357a6b852c04.webp" type="image/webp">
          <source srcset="/jetkvm/03_hu_89cbd573b20026d2.jpg" type="image/jpeg">
          <img src="/jetkvm/03_hu_21a7357a6b852c04.webp"alt="JetKVM Mount ISO"  width="702"  height="489" />
        </picture><figcaption>
            <p>JetKVM ISO mount</p>
          </figcaption></figure>
<p>To make matters worse, the whole thing then froze my Mac (the client I control via JetKVM) multiple times. To be fair, I also tested the whole thing with my Windows computer and inserted a Ubuntu Live DVD. Everything worked fine here. You can read from the internal memory at approx. 30 MB/s, which makes installation quite bearable. I hope that this will be improved in the near future and that it will then also work with my Mac at some point. Mounting the drive didn&rsquo;t always work either, and I had to restart the JetKVM once because something got stuck and the ISO was in an undefined state. I&rsquo;ve seen other systems that are more reliable and better.</p>
<h2 id="the-good-the-bad-and-the-ugly">The good, the bad and the ugly</h2>
<h3 id="the-good">The good</h3>
<p>Let&rsquo;s start with the good. The interface is really tidy, very responsive and the latencies are fabulous. The 60 FPS are there and are maintained. The network connection is stable and the boot times are blazingly fast. You can even watch YouTube videos at 60 FPS without judder – crazy. Working is wonderful. If you have several systems that you can&rsquo;t access via RDP or other tools (for reasons 😉), it&rsquo;s great to work with. Writing emails, holding team calls, etc. Everything is easy. Also the price is fantastic. The feel and workmanship are top-notch. I didn&rsquo;t look at the inside. Plus, the software is 100% open source.</p>
<h3 id="the-bad">The bad</h3>
<p>That one of two JetKVMs was DOA and that I wasn&rsquo;t the only one on the manufacturer&rsquo;s Discord server I&rsquo;ll chalk up to ‘the bad’. To its credit, JetKVM&rsquo;s support was great, replacements were free, I could have even kept the defective unit - top-notch. However, I have already read from several that there are problems with a capacitor and therefore the JetKVMs can die and probably a few from the first batches were affected. Maybe I was unlucky, we&rsquo;ll see. The replacement delivery took about 4 weeks and came directly from China via a German selling agent. The lack of relative mouse mode is also quite a downer for me, as it makes working properly in full-screen mode (if you don&rsquo;t have a 16:9 format) quite annoying. In addition, the fact that there are no expansion modules yet to switch computers on and off via ATX is a bit annoying, especially in rack operation – ok, I knew that in advance. Hopefully something will come soon.</p>
<h3 id="the-ugly">The ugly</h3>
<p>Unfortunately, the biggest point of criticism currently has to do with the implementation of the virtual CD drive. Why it doesn&rsquo;t work properly on Mac is a mystery to me. I can live with the fact that URL Mount is still labelled as experimental. But I can&rsquo;t stream the ISO via the browser, which is a real downer. Uploading is painfully slow (no wonder at 100 Mbit) and space is also very limited. For larger installations, I would always prefer a USB stick or a small SSD. Installing an ESXi with it is not a problem, but it&rsquo;s not really fun. I hope this will be fixed soon.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Do I regret the purchase? Is JetKVM a kickstarter cashcrap? Hell no. The software is of course still in beta status and matures with the customer - if we are honest, we are used to nothing else. The power requirement of 0.6 watts in operation is terrific. Overall, I&rsquo;m satisfied and hope for the community or JetKVM for future software updates.</p>
<p>I&rsquo;ll definitely write another article if missing features have been added or the JetKVM has stopped working.
Time will tell whether the saying “all show and no substance” applies.</p>
]]></content>
		</item>
		
		<item>
			<title>Migration with HCX</title>
			<link>https://sdn-warrior.org/posts/migration-with-hcx/</link>
			<pubDate>Tue, 28 Jan 2025 20:00:00 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/migration-with-hcx/</guid>
			<description><![CDATA[Live Migration of Workloads with VMware HCX: A Customer Story]]></description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>I was brought in to help with a customer project that involved a VCF setup and migrating the workload domains to a new VCF deployment. The challenge of this project was that we had to adopt the existing networks without making any changes while also reducing the downtime of the workloads to an absolute minimum. We used HCX and network extension to solve this problem.</p>
<h2 id="what-is-hcx">What is HCX?</h2>
<p>VMware HCX is an application mobility platform designed to simplify application migration, workload redeployment, and disaster recovery in data centers and clouds.</p>
<p>HCX covers several use cases:</p>
<ul>
<li>
<p>Extend Networks with HCX
Seamlessly extend vSphere and NSX network segments and retain the IP and MAC addresses of migrated VMs to accelerate consumption of modernized resources. Network Extension minimizes the need for complicated networking changes.</p>
</li>
<li>
<p>Migrating Virtual Machines
Select from multiple HCX mobility technologies for optimized migrations at scale for both VMware and non-VMware workloads.</p>
</li>
<li>
<p>Virtual Machine Disaster Recovery
Protect data center applications and workloads through asynchronous replication and recovery of virtual machines, as well as integration with the VMware’s Site Recovery Manager suite of features and tools.</p>
</li>
</ul>
<p>In short, HCX is the answer to my customer problem.</p>
<h2 id="first-things-first-what-are-the-requirements-for-hcx">First things first: what are the requirements for HCX?</h2>
<p>Since HCX has been part of VCF since version 5.1.1, many customers have the opportunity to benefit from HCX. For those who want to test VCF, here is the good news: an eval license comes with HCX.

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Eval License</b>
        </div>
        <div class="admonition-content">The eval license has a runtime of 60 days and can migrate a maximum of 20 VMs per migration type.</div>
    </aside></p>
<ul>
<li>
<p>For environments requiring NSX virtual networking, you must install and configure NSX, including integration with the vCenter Server, before deploying HCX Manager.</p>
</li>
<li>
<p>In the destination environment, the NSX Manager must be installed and connected to the vCenter Server.</p>
</li>
<li>
<p>The NSX Manager must be registered during the HCX Manager install with the admin user.</p>
</li>
<li>
<p>If the NSX Manager IP or FQDN uses self-signed certificates, it might be necessary to trust the NSX system manually using the Import Cert by URL interface in the HCX Appliance Management interface.</p>
</li>
<li>
<p>HCX requires an NSX configured with an Overlay Transport Zone.</p>
</li>
<li>
<p>When NSX-T is registered, both Overlay and VLAN segments can be used during the Network Profile creation.</p>
</li>
<li>
<p>In NSX-T deployments, the HCX supports integration with networking objects created with the NSX Simplified UI/API only.</p>
</li>
</ul>
<h3 id="hcx-connector-and-hcx-cloud-installations">HCX Connector and HCX Cloud Installations</h3>
<p>In HCX, there is a notion of an HCX source and an HCX destination environment. Depending on the environment, HCX provides a separate installer.</p>
<ul>
<li>
<p><strong>HCX Connector:</strong>
Use the HCX Connector with the vCenter Server containing the virtual machines that will be migrated.
The HCX Connector is always an HCX source that connects to an HCX Cloud.

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Note</b>
        </div>
        <div class="admonition-content">If the environment is also used as a destination for site pairing and Network Extension, use the HCX Cloud instead.
Installations using OS Assisted Migration require HCX Connector at the source.</div>
    </aside></p>
</li>
<li>
<p><strong>HCX Cloud:</strong>
Use the HCX Cloud installer with the vCenter Server that is the target of site pairing requests, network extensions, and virtual machine migrations. <br>
The HCX Cloud can also serve as the source of a site pair in HCX cloud-to-cloud installations.

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Note</b>
        </div>
        <div class="admonition-content">OS Assisted Migration does not support cloud-to-cloud installations. For OS Assisted Migration, you must have HCX Connector installed as the source.</div>
    </aside></p>
</li>
</ul>

    <aside class="admonition attention">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" class="feather feather-link" width="24" height="24" viewBox="0 0 24 24"
      fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
   </svg></div><b>Attention</b>
        </div>
        <div class="admonition-content">If the HCX Cloud Manager is used at the source, NSX is required at the source.
The HCX Cloud Manager installation carries higher requirements, but it can be both the source and the target for Site Pairing, HCX Network Extension operations and Service Mesh deployments.</div>
    </aside>
<h3 id="compute-ressources">Compute Ressources</h3>
<table>
  <thead>
      <tr>
          <th>Appliance</th>
          <th>vCPU</th>
          <th>Memory</th>
          <th>Disk Space/IOPS</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>HCX Manager</td>
          <td>4</td>
          <td>12 GB</td>
          <td>60 GB</td>
      </tr>
      <tr>
          <td>HCX Interconnect (HCX-IX)</td>
          <td>8</td>
          <td>6 GB</td>
          <td>2 GB</td>
      </tr>
      <tr>
          <td>HCX Network Extension (HCX-NE)</td>
          <td>8</td>
          <td>3 GB</td>
          <td>2 GB</td>
      </tr>
  </tbody>
</table>
<h3 id="network-ressources">Network Ressources</h3>
<p>I need one HCX appliance per workload domain. This needs access to the respective vCenter and the associated NSX manager. In addition, the HCX appliance must be placed in the vMotion network of the respective workload domain. This can be done by routing or the HCX appliance can be given an IP address directly in the vMotion network. I also need at least one uplink VLAN for the HCX appliances to communicate via. This could be done via WAN, for example. For my customer, this is a VLAN in the underlay network.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">Of course, I can&rsquo;t cover all the migration scenarios that are possible with HCX in this article, which is why the requirements also vary. For my scenario at my customer&rsquo;s site, we decided on vMotion migration between the two VCF stacks. In addition, the Network Extension is to be used to minimize downtime.</div>
    </aside>
<h2 id="deploying-and-configuring-hcx-appliance">Deploying and configuring HCX appliance</h2>
<p>After deploying the HCX appliance, it must be initially configured. To do this, you have to log in to the management interface via <strong>(https://hcx-ip-or-fqdn:9443)</strong> using the configured admin credentials.
The HCX appliance must have access to the NSX manager, the vCenter must be configured, the public access URL (in my case only internally resolvable) and the SSO domain (vCenter). After successful configuration, you can log in to the HCX appliance with the vCenter credentials. The local admin account only works on the HCX management interface.</p>

<figure><a href="hcx01.png"><picture>
          <source srcset="/hcx/hcx01_hu_fa9d59191baaf0dd.webp" type="image/webp">
          <source srcset="/hcx/hcx01_hu_bcdd838100517175.jpg" type="image/jpeg">
          <img src="/hcx/hcx01_hu_fa9d59191baaf0dd.webp"alt="HCX settings"  width="1720"  height="804" />
        </picture></a><figcaption>
            <p>HCX settings (click to enlarge)</p>
          </figcaption></figure>
<h2 id="get-started-with-hcx">Get started with HCX</h2>
<p>HCX requires the following: at least one network profile, one compute profile, one or more service mesh and one or more site pairs.</p>
<h3 id="site-pair">Site Pair</h3>
<p>A Site Pair establishes the connection needed for management, authentication, and orchestration of HCX services across a source and destination environment. To create a new site pair, we need the remote HCX URL, which was configured when deploying the HCX appliance. This must be resolvable via the management network. You also need a vCenter user in the target environment who has sufficient permissions. In my lab I use the vsphere.local administrator. This is of course not best practice and should be adapted in a productive environment.</p>

<figure><a href="hcx04.png"><picture>
          <source srcset="/hcx/hcx04_hu_507719aef7a6bb30.webp" type="image/webp">
          <source srcset="/hcx/hcx04_hu_8dd9fb315ab85b69.jpg" type="image/jpeg">
          <img src="/hcx/hcx04_hu_507719aef7a6bb30.webp"alt="HCX Site Pair"  width="1496"  height="641" />
        </picture></a><figcaption>
            <p>HCX Site Pair (click to enlarge)</p>
          </figcaption></figure>
<h3 id="network-profiles">Network profiles</h3>
<p>After the Site Pair, I set up the network profiles for the interconnect. These profiles allow me to determine the IP addresses and networks. Depending on the setup and service, you need different networks here. In my customer scenario, I can manage with two networks. One profile for management traffic, which I use to access the vCenter and the NSX Manager from environment A. The second network is for the actual uplink connection. In my lab I have 2 uplink networks for testing, so the screenshots may differ slightly. I select the appropriate distributed port group and assign a free IP range. You can define the HCX traffic type, but this is only used as a suggestion in the compute profile. Just because I mark a network profile as an HCX uplink doesn&rsquo;t mean it has to be used as an uplink. It only serves to mark the networks for easier configuration in the compute profile. The vMotion network is routed in my lab. If this is not possible, you can also configure direct access to the vMotion network for the HCX appliance via the network profiles. This is necessary if the vMotion network cannot be routed.</p>

<figure><a href="hcx02.png"><picture>
          <source srcset="/hcx/hcx02_hu_27a68acf699f2ec.webp" type="image/webp">
          <source srcset="/hcx/hcx02_hu_3291e40e92a3be10.jpg" type="image/jpeg">
          <img src="/hcx/hcx02_hu_27a68acf699f2ec.webp"alt="HCX network profiles settings"  width="1504"  height="821" />
        </picture></a><figcaption>
            <p>HCX network profiles settings (click to enlarge)</p>
          </figcaption></figure>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Free Ip Adresses</b>
        </div>
        <div class="admonition-content">Note: I need one free IP in the MGMT network for each of the following: Pro Network Extension, HCX Appliane and Servicemesh (3 IPs). In the vMotion network, 1 IP is required per service mesh (if the vMotion network is not routed) and at least 1 uplink IP is required per service mesh. The HCX interface offers a calculator for the IP planning.</div>
    </aside>
<h3 id="compute-profiles">Compute Profiles</h3>
<p>The compute profiles in HCX are used to specify which HCX services, compute resources such as clusters or resource pools or networks are connected. You can also set CPU and memory reservations for the interconnect appliance. Depending on the HCX service, you have to assign several networks, e.g. management network, uplink networks, vMotion network and the network container. In my case, the network container is the overlay transport zone from my source NSX, as I want to migrate machines from one NSX environment to another NSX environment.</p>

<figure><a href="hcx03.png"><picture>
          <source srcset="/hcx/hcx03_hu_defde22a62987bc9.webp" type="image/webp">
          <source srcset="/hcx/hcx03_hu_501be16b5d0f95e8.jpg" type="image/jpeg">
          <img src="/hcx/hcx03_hu_defde22a62987bc9.webp"alt="HCX Compute profiles settings"  width="1355"  height="937" />
        </picture></a><figcaption>
            <p>HCX Compute profiles settings (click to enlarge)</p>
          </figcaption></figure>
<p>The screenshot shows very clearly how the Interconnect appliance is later connected. The uplinks can be VLAN connections within a data center, public WAN connections, MPLS or VPN. There are very few restrictions here. The uplink networks only need to reach each other between the locations. It does not matter whether it is via Layer2 or Layer3.</p>
<h3 id="service-mesh">Service Mesh</h3>
<p>In the service mesh, compute profiles, HCX services and advanced configurations such as MTU for uplink links or the number of appliances for the network extension are defined and assigned. After I have configured the service mesh, the interconnect VMs are automatically deployed at both HCX locations.</p>

<figure><a href="hcx05.png"><picture>
          <source srcset="/hcx/hcx05_hu_cec88bd2f0a21050.webp" type="image/webp">
          <source srcset="/hcx/hcx05_hu_b8c5cb0a35e994d6.jpg" type="image/jpeg">
          <img src="/hcx/hcx05_hu_cec88bd2f0a21050.webp"alt="HCX Service Mesh"  width="2019"  height="611" />
        </picture></a><figcaption>
            <p>HCX Service Mesh (click to enlarge)</p>
          </figcaption></figure>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Service Mesh</b>
        </div>
        <div class="admonition-content">The service mesh cannot be created until both sides of the site pair are configured and have compute and network profiles.</div>
    </aside>
<h2 id="firewall-settings-for-hcx">Firewall Settings for HCX</h2>
<p>After successfully setting up the interconnect compute profile, a firewall port matrix is created that you can easy copy and export over the HCX gui. Here is an example from my lab.</p>
<table>
  <thead>
      <tr>
          <th>Source</th>
          <th>Destination</th>
          <th>Services</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>ANY</td>
          <td>ANY</td>
          <td>UDP(3784)</td>
      </tr>
      <tr>
          <td>192.168.70.30-192.168.70.40</td>
          <td>192.168.70.30-192.168.70.40</td>
          <td>UDP(3784), TCP(8182)</td>
      </tr>
      <tr>
          <td>192.168.70.30-192.168.70.40</td>
          <td>192.168.70.10</td>
          <td>TCP(9555)</td>
      </tr>
      <tr>
          <td>192.168.70.30-192.168.70.40</td>
          <td>192.168.12.100</td>
          <td>TCP(443)</td>
      </tr>
      <tr>
          <td>192.168.70.10</td>
          <td>192.168.70.30-192.168.70.40</td>
          <td>TCP(9443)</td>
      </tr>
      <tr>
          <td>192.168.70.10</td>
          <td>192.168.12.100</td>
          <td>TCP(443)</td>
      </tr>
      <tr>
          <td>192.168.70.10</td>
          <td>192.168.12.203, 192.168.12.204</td>
          <td>TCP(902), TCP(80), TCP(443)</td>
      </tr>
      <tr>
          <td>192.168.12.203, 192.168.12.204</td>
          <td>192.168.70.30-192.168.70.40</td>
          <td>TCP(31031), TCP(32032), TCP(44046)</td>
      </tr>
      <tr>
          <td>192.168.70.30-192.168.70.40</td>
          <td>192.168.12.203, 192.168.12.204</td>
          <td>TCP(902), TCP(80)</td>
      </tr>
      <tr>
          <td>192.168.12.203, 192.168.12.204</td>
          <td>192.168.70.30-192.168.70.40</td>
          <td>TCP(8000)</td>
      </tr>
      <tr>
          <td>192.168.70.30-192.168.70.40</td>
          <td>192.168.12.203, 192.168.12.204</td>
          <td>TCP(8000)</td>
      </tr>
      <tr>
          <td>192.168.70.10</td>
          <td>192.168.70.30-192.168.70.40</td>
          <td>TCP(443), TCP(8123), TCP(9443)</td>
      </tr>
      <tr>
          <td>ANY</td>
          <td>172.21.22.10-172.21.22.100, 172.21.21.10-172.21.21.100</td>
          <td>TCP(5201), UDP(4500), UDP(5201)</td>
      </tr>
  </tbody>
</table>
<h2 id="network-extension">Network Extension</h2>
<p>With the network extension in HCX, layer-2 networks can be extended between the source and target environments without having to change the IP addressing of the workloads. This allows virtual machines to be seamlessly migrated while maintaining their existing network connection and connectivity, and is a prerequisite for a “zero” downtime migration. To create a layer 2 stretch via the network extension, I just have to click on <strong>Network Extension</strong> &raquo; <strong>Create a Network Extension</strong> and select my network that I want to stretch to the other location via HCX. Here I can only choose from networks in my previously configured network container. In my case, these are the networks from my NSX.</p>

<figure><a href="hcx06.png"><picture>
          <source srcset="/hcx/hcx06_hu_875e10bf44e7af5c.webp" type="image/webp">
          <source srcset="/hcx/hcx06_hu_911668d32bc13d86.jpg" type="image/jpeg">
          <img src="/hcx/hcx06_hu_875e10bf44e7af5c.webp"alt="HCX Network Extension"  width="1651"  height="1043" />
        </picture></a><figcaption>
            <p>HCX Network Extension (click to enlarge)</p>
          </figcaption></figure>
<p>The stretched  networks are created at the selected T1 router in the target environment and given a prefix. However, the segments are not connected to the T1. The north/south connection is via the T1 and T0 in the source environment. This ensures that no traffic for the VMs is routed into a black hole.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Attention</b>
        </div>
        <div class="admonition-content">For each network that is stretched across the network extension, a network adapter is required on the appliance. Since the appliance is subject to the same limits as all other VMs, a maximum of 10 network adapters can be used. In my case, I lose 1 adapter for management and two adapters for my uplinks. So I can stretch a maximum of 7 NSX networks over this appliance. If I want to stretch more networks, I need another network extension appliance.</div>
    </aside>
<h3 id="how-does-network-extension-work">How does Network Extension work?</h3>
<p>The sink port on the HCX Network Extension serves as the endpoint for the extended Layer 2 traffic between the source and target environments. It is configured on the source and target sides to receive and send the incoming traffic from the extended network. This can be easily seen on the segment ports in the NSX of the HCX appliance. This is where MAC/IP bindings are exchanged between VMs. If you look at the destination side, you will see (provided that the source VMs are generating traffic) the IP/MAC bindings of the VMs on the source segment on the sink port and vice versa for VMs that have already been migrated to the destination side.</p>

<figure><a href="hcx07.png"><picture>
          <source srcset="/hcx/hcx07_hu_64f82414d9d12333.webp" type="image/webp">
          <source srcset="/hcx/hcx07_hu_e25d22050f838324.jpg" type="image/jpeg">
          <img src="/hcx/hcx07_hu_64f82414d9d12333.webp"alt="HCX Network Extension Bindings"  width="1024"  height="271" />
        </picture></a><figcaption>
            <p>HCX Network Extension Bindings (click to enlarge)</p>
          </figcaption></figure>
<p>For this to work, special port profiles are created for the segment ports of the HCX Network Extension appliance that allow MAC learning, MAC changing and unknown unicast flooding. By default, the NSX segment profile would prevent this and block it.</p>
<h2 id="migrating-vms">Migrating VMs</h2>
<p>HCX supports a wide range of migration options. Since I aim for zero downtime, I use vMotion as my migration method. For less critical VMs with a maintenance window, a bulk migration with short downtime is also an option. Here you can plan a mass migration and make a controlled switchover at a certain point in time. To do this, a replica of the VMs is created and incrementally synchronized. During the cutover, the final delta data is synchronized and the VM is switched on again. After the migration, the VM is switched on again at the destination. Of course, there are several variants and not every variant is suitable.</p>
<p>vMotion migration in VMware HCX allows me to migrate virtual machines live and without downtime from a source environment to a target environment. HCX uses the vMotion technology but extends it to include the option of migrating workloads in a scheduled manner and across geographically separate data centers.</p>
<p>To plan the migration, I go to <strong>Services</strong> &raquo; <strong>Migration</strong> and create a <strong>NEW Mobility Group</strong>. Here I can set all the relevant migration settings.</p>

<figure><a href="hcx08.png"><picture>
          <source srcset="/hcx/hcx08_hu_a68776fd1f04c796.webp" type="image/webp">
          <source srcset="/hcx/hcx08_hu_449a60d132e36065.jpg" type="image/jpeg">
          <img src="/hcx/hcx08_hu_a68776fd1f04c796.webp"alt="HCX New Mobility Group"  width="1627"  height="1157" />
        </picture></a><figcaption>
            <p>HCX New Mobility Group (click to enlarge)</p>
          </figcaption></figure>
<p>The settings are relatively self-explanatory. I select my VMs, choose the target cluster, storage and switchover time, and select my migration method. If the VM comes from a network stretched with the Network Extension, the target network is already preselected. I just have to perform the validation and the migration can start. It is also possible to perform a reverse migration.</p>

<figure><a href="hcx09.png"><picture>
          <source srcset="/hcx/hcx09_hu_b6375f23e4a41374.webp" type="image/webp">
          <source srcset="/hcx/hcx09_hu_e6a2cfed6dae1a48.jpg" type="image/jpeg">
          <img src="/hcx/hcx09_hu_b6375f23e4a41374.webp"alt="HCX Migration"  width="1445"  height="604" />
        </picture></a><figcaption>
            <p>HCX New Mobility Group (click to enlarge)</p>
          </figcaption></figure>
<p>The migration was successful and there was only one ping interruption during the entire migration. The VM was functional and accessible the whole time. Thanks to the network extension, both east/west and north/south traffic works.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">64 bytes from 10.10.20.20: icmp_seq=34 ttl=60 time=6.854 ms
</span></span><span class="line"><span class="cl">64 bytes from 10.10.20.20: icmp_seq=35 ttl=60 time=2.144 ms
</span></span><span class="line"><span class="cl">Request timeout for icmp_seq 36
</span></span><span class="line"><span class="cl">64 bytes from 10.10.20.20: icmp_seq=37 ttl=60 time=11.416 ms
</span></span><span class="line"><span class="cl">64 bytes from 10.10.20.20: icmp_seq=38 ttl=60 time=4.916 ms
</span></span><span class="line"><span class="cl">64 bytes from 10.10.20.20: icmp_seq=39 ttl=60 time=3.661 ms
</span></span><span class="line"><span class="cl">64 bytes from 10.10.20.20: icmp_seq=40 ttl=60 time=3.842 ms
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--- 10.10.20.20 ping statistics ---
</span></span><span class="line"><span class="cl">57 packets transmitted, 56 packets received, 1.8% packet loss
</span></span></code></pre></div><p>After all VMs have been migrated from the source to the target, the network extension for the network via HCX can be removed. If desired, HCX can automatically connect the segments at the target to the T1 router. The segments at the source must then be manually disconnected from the source T1. As long as the same segment subnet is connected to the source and target at the local T1, routing problems may occur. This can be successfully prevented with local preference and AS-Path prepend, by making the segments on the source side less favorable if BGP is used. This only affects north/south connectivity. East/west connectivity is not affected.</p>
<h2 id="conclusion">Conclusion</h2>
<p>I am aware that I have not even touched on all the functions of HCX. The tool is extremely powerful and you always have to look at the scenario for which you are using the right HCX use case. So I have not addressed the WAN optimization or the MON feature, nor have I gone into detail about the other migration options. The whole thing would go beyond the scope by far and I wanted to write about a scenario that I have already implemented for a customer. I can advise everyone to take a closer look at HCX. With HCX, you have a powerful migration tool that can help you out of unpleasant situations or simply simplifies mass migrations from A to B. Since HCX is now part of the VCF product portfolio, there is no reason not to use the tool.</p>
]]></content>
		</item>
		
		<item>
			<title>How Apply To works in NSX DFW</title>
			<link>https://sdn-warrior.org/posts/nsx-apply-to/</link>
			<pubDate>Sat, 11 Jan 2025 02:00:00 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/nsx-apply-to/</guid>
			<description><![CDATA[How Apply To works in NSX DFW and you can use it.]]></description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>When working with the <strong>NSX Distributed Firewall (DFW)</strong>, one feature that often goes unnoticed or misunderstood is <strong>&lsquo;Apply To&rsquo;</strong>. Despite its importance, it is frequently underestimated or even ignored. This is unfortunate, as <strong>&lsquo;Apply To&rsquo;</strong> is a powerful feature that can significantly influence how firewall rules are applied within an NSX environment.</p>
<p>In many VMware training courses, <strong>&lsquo;Apply To&rsquo;</strong> is either poorly explained or not mentioned at all. As a result, administrators and engineers might miss out on opportunities to optimize their firewall rule configurations. Misunderstanding or neglecting this feature can lead to overly complex rulesets or unexpected behavior in distributed environments.</p>
<p>In this post, I aim to demystify the <strong>&lsquo;Apply To&rsquo;</strong> feature. I will explore its functionality, demonstrate its practical use cases, and analyze how it impacts the behavior of firewall rules. By the end, you should have a solid understanding of how and when to use <strong>&lsquo;Apply To&rsquo;</strong> effectively in your NSX environment.</p>
<h2 id="questions-to-address">Questions to Address</h2>
<p>To fully understand the <strong>&lsquo;Apply To&rsquo;</strong> feature in the NSX Distributed Firewall, it is essential to examine its behavior under various scenarios. In this post, I will address the following questions:</p>
<ol>
<li>
<p><strong>What happens if we use the <code>&lt;Applied To&gt;</code> field on the policy and set the <code>&lt;Applied To&gt;</code> rule as DFW?</strong><br>
How does this configuration affect the scope and enforcement of firewall rules?</p>
</li>
<li>
<p><strong>What will happen if we use a Security Group in the <code>&lt;Applied To&gt;</code> field in the rule, while the <code>&lt;Applied To&gt;</code> field in the policy is set as DFW?</strong><br>
What interactions or overlaps should be expected between these configurations?</p>
</li>
<li>
<p><strong>What happens if we use <code>security group1</code> in the policy <code>&lt;Applied To&gt;</code> field and <code>security group2</code> in the rule <code>&lt;Applied To&gt;</code> field?</strong><br>
How do these overlapping or conflicting settings impact the rule application?</p>
</li>
<li>
<p><strong>Does the <code>&lt;Applied To&gt;</code> field in the rule or the <code>&lt;Applied To&gt;</code> field in the policy take precedence?</strong><br>
When both are defined, which one ultimately dictates the scope of rule enforcement?</p>
</li>
</ol>
<p>By exploring these scenarios, I aim to clarify the nuanced behavior of the <strong>&lsquo;Apply To&rsquo;</strong> feature and provide actionable insights for optimizing your NSX DFW configurations.</p>
<h2 id="practical-demonstrations-with-cli">Practical Demonstrations with CLI</h2>
<p>In addition to exploring the theoretical aspects of the <strong>&lsquo;Apply To&rsquo;</strong> feature, I will use practical CLI commands to demonstrate where the rules are actually enforced within the NSX infrastructure. This hands-on approach will help you visualize and verify how <strong>&lsquo;Apply To&rsquo;</strong> configurations are realized in practice.</p>
<p>By combining both conceptual explanations and practical examples, you will gain a deeper understanding of how to effectively use the <strong>&lsquo;Apply To&rsquo;</strong> feature in real-world scenarios.</p>
<h2 id="test-setup">Test Setup</h2>
<p>For this blog, I am using <strong>NSX version 4.2.2.1</strong> to demonstrate the behavior of the <strong>&lsquo;Apply To&rsquo;</strong> feature in the Distributed Firewall. The goal is to keep the setup simple yet effective for understanding how different configurations influence the enforcement of firewall rules.</p>
<h3 id="environment-overview">Environment Overview</h3>
<p>The test environment consists of three lightweight Linux virtual machines running Alpine:</p>
<ul>
<li><strong>Alpine01</strong>: <code>10.10.20.10</code></li>
<li><strong>Alpine02</strong>: <code>10.10.20.20</code></li>
<li><strong>Alpine03</strong>: <code>10.10.20.30</code> (Control VM)</li>
</ul>
<p>All VMs reside on the <strong>same NSX segment</strong>, simplifying the network to focus on rule behavior and ensuring consistent connectivity between VMs. Notably, <strong>Alpine03</strong> serves as a control VM and is not part of any NSX Security Group. This ensures it remains unaffected by specific <strong>&lsquo;Apply To&rsquo;</strong> configurations, providing a baseline for comparison.</p>
<h3 id="security-groups">Security Groups</h3>
<p>To organize and manage the test VMs, I have created the following NSX Security Groups:</p>
<ol>
<li>
<p><strong>dFG_all_Alpine</strong><br>
This group includes <strong>Alpine01</strong> and <strong>Alpine02</strong>. It represents all Alpine VMs involved in the main testing scenarios.</p>
</li>
<li>
<p><strong>dFG_Alpine01</strong><br>
A dedicated Security Group for <strong>Alpine01</strong>, enabling granular control over rules specific to this VM.</p>
</li>
<li>
<p><strong>dFG_Alpine02</strong><br>
A separate Security Group for <strong>Alpine02</strong>, allowing isolated configurations tailored to this VM.</p>
</li>
</ol>
<p><strong>Alpine03</strong> does not belong to any Security Group, making it a neutral VM for verifying how rules or configurations behave when no specific policies are applied. This provides a clear reference point to validate the impact of <strong>&lsquo;Apply To&rsquo;</strong> settings.</p>
<h3 id="why-alpine03-as-a-control-vm">Why Alpine03 as a Control VM?</h3>
<p>Having a control VM like <strong>Alpine03</strong> ensures we have a clean baseline to compare against during the tests. By keeping it outside of any Security Group, we can confirm that any observed effects are solely due to the configurations applied to <strong>Alpine01</strong> and <strong>Alpine02</strong>. This approach eliminates ambiguity and helps highlight the true behavior of the <strong>&lsquo;Apply To&rsquo;</strong> feature.</p>
<h3 id="additional-tools-for-validation">Additional Tools for Validation</h3>
<p>To analyze the behavior further, I will use CLI commands such as <strong><code>summarize-dvfilter</code></strong> and <strong><code>vsipioctl getrules</code></strong>, as well as the NSX <strong>Traceflow</strong> tool. This combination ensures an in-depth understanding of where and how rules are enforced, both at the hypervisor and the network level.</p>
<h3 id="naming-convention-a-recommended-best-practice">Naming Convention: A Recommended Best Practice</h3>
<p>As a personal convention, I prefix all custom Security Groups with <strong>dFG</strong>, which stands for Distributed Firewall Group. This prefix helps me quickly identify and differentiate groups used for NSX Distributed Firewall purposes from other objects in the environment.</p>
<p>I strongly recommend adopting a consistent and meaningful naming scheme for your NSX environment. A clear structure not only improves day-to-day management but also prevents confusion in larger setups with potentially hundreds of objects. Whether you use prefixes like <code>dFG</code> or other naming conventions, the key is consistency.</p>
<h3 id="why-use-a-single-esxi-host">Why Use a Single ESXi Host?</h3>
<p>Running both Alpine VMs on a single ESXi host is intentional. It allows me to leverage the <strong>ESXi CLI</strong> to show where and how the Distributed Firewall rules are realized during the tests. This provides deeper insights into the inner workings of the NSX DFW, bridging the gap between configuration in the NSX Manager and actual enforcement at the hypervisor level.</p>
<p>This setup offers a practical foundation to explore and analyze the <strong>&lsquo;Apply To&rsquo;</strong> feature in detail, combining theoretical explanations with real-world CLI examples.</p>
<h3 id="verification-with-cli-tools">Verification with CLI Tools</h3>
<p>To complement the theoretical understanding of the <strong>&lsquo;Apply To&rsquo;</strong> feature, I will use practical CLI tools during the tests to demonstrate where and how firewall rules are enforced. This includes inspecting the ESXi host to see how the Distributed Firewall implements the configurations. Below are the CLI commands and tools I will use:</p>
<ol>
<li>
<p><strong><code>summarize-dvfilter | grep -A16 &lt;VMName&gt;</code></strong><br>
This command retrieves detailed information about the virtual NIC (vNIC) associated with a specific VM. By identifying the correct vNIC name (e.g., <code>&lt;nic-XXXXXXX-eth0-vmware-sfw.2&gt;</code>), we can pinpoint the interface where the firewall rules are applied.</p>
</li>
<li>
<p><strong><code>vsipioctl getrules -f &lt;name from the vNIC&gt;</code></strong><br>
Once the vNIC name is identified, this command provides the complete list of firewall rules applied to that specific VM. This is a powerful way to verify the exact rules enforced at the hypervisor level.</p>
</li>
<li>
<p><strong>NSX Traceflow Tool</strong><br>
In addition to ESXi CLI commands, the NSX <strong>Traceflow</strong> tool can be used to simulate and trace packet flow through the network. This tool helps visualize the path packets take and how firewall rules affect traffic between VMs.</p>
</li>
</ol>
<h3 id="practical-workflow">Practical Workflow</h3>
<p>During the tests, the workflow will involve the following steps:</p>
<ol>
<li>Use the <strong><code>summarize-dvfilter</code></strong> command to locate the vNIC name for the VM being tested (e.g., Alpine01 or Alpine02).</li>
<li>Retrieve the enforced firewall rules using <strong><code>vsipioctl getrules</code></strong> with the vNIC name as input.</li>
<li>Validate the observed behavior using the NSX Traceflow tool to ensure that the rules are applied as expected and to simulate specific traffic flows for further analysis.</li>
</ol>
<p>These tools provide a hands-on approach to understanding how the <strong>&lsquo;Apply To&rsquo;</strong> feature works, bridging the gap between configuration and real-world enforcement.</p>
<h2 id="test-1-what-happens-if-we-use-the-applied-to-field-on-the-policy-and-set-the-applied-to-rule-as-dfw">Test 1: What Happens If We Use the <code>&lt;Applied To&gt;</code> Field on the Policy and Set the <code>&lt;Applied To&gt;</code> Rule as DFW?</h2>
<p>To begin our exploration of the <strong>&lsquo;Apply To&rsquo;</strong> feature, we start with a simple scenario. In this test, I create a policy that allows <strong>ICMP traffic</strong> from <strong>any</strong> source to the Security Group <strong>dFG_all_Alpine</strong>. The <strong>&lsquo;Apply To&rsquo;</strong> configuration is as follows:</p>
<ul>
<li>The <strong>rule&rsquo;s <code>&lt;Applied To&gt;</code> field</strong> is set to <strong>DFW (Distributed Firewall)</strong>.</li>
<li>The <strong>policy&rsquo;s <code>&lt;Applied To&gt;</code> field</strong> is set to the Security Group <strong>dFG_all_Alpine</strong>.</li>
</ul>
<h3 id="configuration-details">Configuration Details</h3>
<ol>
<li>
<p><strong>Policy</strong>:</p>
<ul>
<li>Name: <strong>ICMP Allow Test</strong></li>
<li>Source: <strong>Any</strong></li>
<li>Destination: <strong>dFG_all_Alpine</strong></li>
<li>Service: <strong>ICMP</strong></li>
<li>Action: <strong>Allow</strong></li>
<li><code>&lt;Applied To&gt;</code>: <strong>dFG_all_Alpine</strong></li>
</ul>
</li>
<li>
<p><strong>Rule</strong>:</p>
<ul>
<li><code>&lt;Applied To&gt;</code>: <strong>DFW</strong></li>
</ul>
</li>
</ol>
<h3 id="expected-behavior">Expected Behavior</h3>
<p>In this configuration, the <strong>policy&rsquo;s <code>&lt;Applied To&gt;</code> field</strong> limits the scope of the policy to the members of the <strong>dFG_all_Alpine</strong> group.</p>
<p>The expected result is that the rule is <strong>only enforced</strong> for traffic destined to the <strong>dFG_all_Alpine</strong> group (as defined in the policy&rsquo;s <code>&lt;Applied To&gt;</code>) even if the rule is set do <strong>DFW</strong>.</p>
<h3 id="test-results">Test Results</h3>
<p>Using the ESXi CLI, I collected the following details for the vNICs associated with each VM:</p>
<ul>
<li>
<p><strong>Alpine01</strong>:</p>
<ul>
<li>Port: <code>67108887</code></li>
<li>vNIC name: <code>nic-533240-eth0-vmware-sfw.2</code></li>
</ul>
</li>
<li>
<p><strong>Alpine02</strong>:</p>
<ul>
<li>Port: <code>67108888</code></li>
<li>vNIC name: <code>nic-533279-eth0-vmware-sfw.2</code></li>
</ul>
</li>
<li>
<p><strong>Alpine03 (Control VM)</strong>:</p>
<ul>
<li>Port: <code>67108889</code></li>
<li>vNIC name: <code>nic-544799-eth0-vmware-sfw.2</code></li>
</ul>
</li>
</ul>
<h4 id="firewall-rules-observed">Firewall Rules Observed</h4>
<ol>
<li><strong>Alpine01 (nic-533240-eth0-vmware-sfw.2)</strong> and <strong>Alpine02 (nic-533279-eth0-vmware-sfw.2)</strong>:<br>
Both VMs have the following rules applied:</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">ruleset mainrs {
</span></span><span class="line"><span class="cl"># PRE_FILTER rules
</span></span><span class="line"><span class="cl">rule 10216 at 1 inout protocol tcp strict from any to addrset a34212cb-acb2-49b3-b74c-7683c0345a19 port 22 accept;
</span></span><span class="line"><span class="cl"># FILTER (APP Category) rules
</span></span><span class="line"><span class="cl">rule 10217 at 1 inout protocol icmp from any to addrset a34212cb-acb2-49b3-b74c-7683c0345a19 accept;
</span></span><span class="line"><span class="cl">rule 10217 at 2 inout protocol ipv6-icmp from any to addrset a34212cb-acb2-49b3-b74c-7683c0345a19 accept;
</span></span><span class="line"><span class="cl">rule 2 at 3 inout protocol any from any to any reject with log tag &#39;debug&#39;;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>Key Observations:</p>
<p>ICMP traffic is explicitly allowed (rule 10217) for both IPv4 and IPv6 from any source to the address set associated with dFG_all_Alpine.
All other traffic is rejected (rule 2), demonstrating that the rules are scoped correctly to the policy&rsquo;s <!-- raw HTML omitted --> field.
Alpine02 (nic-533279-eth0-vmware-sfw.2):
The rules applied to Alpine02 are identical to those observed for Alpine01</p>
<ol start="2">
<li><strong>Alpine03 (Control VM, nic-544799-eth0-vmware-sfw.2)</strong>:</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">ruleset mainrs {
</span></span><span class="line"><span class="cl"># FILTER (APP Category) rules
</span></span><span class="line"><span class="cl">rule 2 at 1 inout protocol any from any to any reject with log tag &#39;debug&#39;;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>Key Observations:</p>
<p>Only the default reject rule is applied. Since Alpine03 is not a member of dFG_all_Alpine, the policy does not apply to this VM, confirming that the <!-- raw HTML omitted --> field in the policy limits enforcement to the intended scope.</p>
<p>Conclusion for Test 1
The results confirm the expected behavior:</p>
<p>The policy&rsquo;s <!-- raw HTML omitted --> field effectively limits the scope of enforcement to the Security Group dFG_all_Alpine.
Although the rule&rsquo;s <!-- raw HTML omitted --> field is set to DFW, rules are only applied to the VMs within the policy&rsquo;s scope.
The Control VM (Alpine03), which is outside the Security Group, does not have the ICMP allow rule applied, demonstrating the precision of the <!-- raw HTML omitted --> field.</p>
<h2 id="test-2-what-will-happen-if-we-use-a-security-group-in-the-applied-to-field-in-the-rule-and-the-applied-to-field-in-the-policy-is-set-as-dfw">Test 2: What Will Happen If We Use a Security Group in the <code>&lt;Applied To&gt;</code> Field in the Rule and the <code>&lt;Applied To&gt;</code> Field in the Policy Is Set as DFW?</h2>
<p>In this scenario, I configure a policy to allow <strong>ICMP traffic</strong> from <strong>any</strong> source to the <strong>dFG_all_Alpine</strong> Security Group. However, this time I modify the <strong><code>&lt;Applied To&gt;</code> field</strong> as follows:</p>
<ul>
<li>The <strong>policy’s <code>&lt;Applied To&gt;</code> field</strong> is set to <strong>DFW (Distributed Firewall)</strong>.</li>
<li>The <strong>rule’s <code>&lt;Applied To&gt;</code> field</strong> is set to the Security Group <strong>dFG_Alpine01</strong>.</li>
</ul>
<h3 id="configuration-details-1">Configuration Details</h3>
<ol>
<li>
<p><strong>Policy</strong>:</p>
<ul>
<li>Name: <strong>ICMP Allow Test 2</strong></li>
<li>Source: <strong>Any</strong></li>
<li>Destination: <strong>dFG_all_Alpine</strong></li>
<li>Service: <strong>ICMP</strong></li>
<li>Action: <strong>Allow</strong></li>
<li><code>&lt;Applied To&gt;</code>: <strong>DFW</strong></li>
</ul>
</li>
<li>
<p><strong>Rule</strong>:</p>
<ul>
<li><code>&lt;Applied To&gt;</code>: <strong>dFG_Alpine01</strong></li>
</ul>
</li>
</ol>
<h3 id="expected-behavior-1">Expected Behavior</h3>
<p>This configuration introduces a more restrictive scope at the <strong>rule</strong> level:</p>
<ul>
<li>Since the rule’s <code>&lt;Applied To&gt;</code> field is set to <strong>dFG_Alpine01</strong>, it should only be <strong>enforced on the VMs in this group</strong>.</li>
<li>The policy’s broader <code>&lt;Applied To&gt;</code> field (set to <strong>DFW</strong>) may lead you to assume that the policy and its rules are applied everywhere, but actual enforcement should be limited to <strong>dFG_Alpine01</strong> due to the rule-level restriction.</li>
</ul>
<h3 id="results">Results</h3>
<h4 id="firewall-rules-observed-1">Firewall Rules Observed</h4>
<ol>
<li><strong>Alpine01 (nic-533240-eth0-vmware-sfw.2)</strong>:<br>
The following rules were observed:</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">ruleset mainrs {
</span></span><span class="line"><span class="cl"># PRE_FILTER rules
</span></span><span class="line"><span class="cl">rule 10216 at 1 inout protocol tcp strict from any to addrset a34212cb-acb2-49b3-b74c-7683c0345a19 port 22 accept;
</span></span><span class="line"><span class="cl"># FILTER (APP Category) rules
</span></span><span class="line"><span class="cl">rule 10217 at 1 inout protocol icmp from any to addrset a34212cb-acb2-49b3-b74c-7683c0345a19 accept;
</span></span><span class="line"><span class="cl">rule 10217 at 2 inout protocol ipv6-icmp from any to addrset a34212cb-acb2-49b3-b74c-7683c0345a19 accept;
</span></span><span class="line"><span class="cl">rule 2 at 3 inout protocol any from any to any reject with log tag &#39;debug&#39;;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>Key Observations:</p>
<p>The ICMP allow rule is enforced as expected, scoped to Alpine01, which is part of dFG_Alpine01.</p>
<ol start="2">
<li><strong>Alpine02 (nic-533279-eth0-vmware-sfw.2):</strong>
The following rules were observed:</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">ruleset mainrs {
</span></span><span class="line"><span class="cl"># FILTER (APP Category) rules
</span></span><span class="line"><span class="cl"> rule 2 at 1 inout protocol any from any to any reject with log tag &#39;debug&#39;;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>Key Observations:</p>
<p>The ICMP allow rule is not applied to Alpine02, as it is not part of dFG_Alpine01.</p>
<ol start="3">
<li><strong>Alpine03 (Control VM, nic-544799-eth0-vmware-sfw.2):</strong>
The following rules were observed:</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">ruleset mainrs {
</span></span><span class="line"><span class="cl"> # FILTER (APP Category) rules
</span></span><span class="line"><span class="cl"> rule 2 at 1 inout protocol any from any to any reject with log tag &#39;debug&#39;;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>Key Observations:</p>
<p>As expected, no ICMP allow rule is applied since Alpine03 is not part of any relevant Security Group.</p>
<h2 id="test-3-what-happens-if-we-use-security-group1-in-the-policy-applied-to-field-and-group2-in-the-rule-applied-to-field">Test 3: What Happens If We Use Security <code>&lt;group1&gt;</code> in the Policy <code>&lt;Applied To&gt;</code> Field and <code>&lt;group2&gt;</code> in the Rule <code>&lt;Applied To&gt;</code> Field?</h2>
<p>In this test, I explore the interaction between the <code>&lt;Applied To&gt;</code> fields at the policy and rule levels when they reference different Security Groups. The configuration is as follows:</p>
<ul>
<li>The <strong>policy’s <code>&lt;Applied To&gt;</code> field</strong> is set to <strong>dFG_Alpine01</strong>.</li>
<li>The <strong>rule’s <code>&lt;Applied To&gt;</code> field</strong> is set to <strong>dFG_Alpine02</strong>.</li>
<li>The rule allows <strong>ICMP traffic</strong> from <strong>any</strong> source to the <strong>dFG_all_Alpine</strong> Security Group.</li>
</ul>
<h3 id="configuration-details-2">Configuration Details</h3>
<ol>
<li>
<p><strong>Policy</strong>:</p>
<ul>
<li>Name: <strong>ICMP Allow Test 3</strong></li>
<li>Source: <strong>Any</strong></li>
<li>Destination: <strong>dFG_all_Alpine</strong></li>
<li>Service: <strong>ICMP</strong></li>
<li>Action: <strong>Allow</strong></li>
<li><code>&lt;Applied To&gt;</code>: <strong>dFG_Alpine01</strong></li>
</ul>
</li>
<li>
<p><strong>Rule</strong>:</p>
<ul>
<li><code>&lt;Applied To&gt;</code>: <strong>dFG_Alpine02</strong></li>
</ul>
</li>
</ol>
<h3 id="expected-behavior-2">Expected Behavior</h3>
<p>In this configuration, the <strong>policy’s <code>&lt;Applied To&gt;</code> field</strong> restricts the scope of the policy to <strong>dFG_Alpine01</strong>, which includes only <strong>Alpine01</strong>. However, the <strong>rule’s <code>&lt;Applied To&gt;</code> field</strong> is set to <strong>dFG_Alpine02</strong>, which includes only <strong>Alpine02</strong>.</p>
<p>The expected behavior is:</p>
<ol>
<li>The policy’s <code>&lt;Applied To&gt;</code> field should dictate the overall scope, meaning the rule will only be <strong>enforced for members of dFG_Alpine01</strong>.</li>
<li>Since the rule’s <code>&lt;Applied To&gt;</code> field is set to <strong>dFG_Alpine02</strong>, the rule will not be applied to <strong>Alpine02</strong>, as it is outside the policy’s scope.</li>
<li>ICMP traffic from <strong>any source</strong> to <strong>dFG_all_Alpine</strong> will only be allowed for VMs within <strong>dFG_Alpine01</strong>.</li>
</ol>
<h3 id="test-results-1">Test Results</h3>
<h4 id="firewall-rules-observed-2">Firewall Rules Observed</h4>
<ol>
<li><strong>Alpine01 (nic-533240-eth0-vmware-sfw.2)</strong>:</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">ruleset mainrs {
</span></span><span class="line"><span class="cl"># PRE_FILTER rules
</span></span><span class="line"><span class="cl">rule 10216 at 1 inout protocol tcp strict from any to addrset a34212cb-acb2-49b3-b74c-7683c0345a19 port 22 accept;
</span></span><span class="line"><span class="cl"># FILTER (APP Category) rules
</span></span><span class="line"><span class="cl">rule 10217 at 1 inout protocol icmp from any to addrset a34212cb-acb2-49b3-b74c-7683c0345a19 accept;
</span></span><span class="line"><span class="cl">rule 10217 at 2 inout protocol ipv6-icmp from any to addrset a34212cb-acb2-49b3-b74c-7683c0345a19 accept;
</span></span><span class="line"><span class="cl">rule 2 at 3 inout protocol any from any to any reject with log tag &#39;debug&#39;;
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">ruleset mainrs_L2 {
</span></span><span class="line"><span class="cl"># FILTER rules
</span></span><span class="line"><span class="cl">rule 1 at 1 inout ethertype any stateless from any to any accept;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>Key Observations:</p>
<p>ICMP traffic (IPv4 and IPv6) is explicitly allowed (rule 10217) for Alpine01.
This behavior aligns with the policy&rsquo;s <!-- raw HTML omitted --> field, as Alpine01 is part of dFG_Alpine01.</p>
<ol start="2">
<li><strong>Alpine02 (nic-533279-eth0-vmware-sfw.2):</strong></li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">ruleset mainrs {
</span></span><span class="line"><span class="cl"># PRE_FILTER rules
</span></span><span class="line"><span class="cl">rule 10216 at 1 inout protocol tcp strict from any to addrset a34212cb-acb2-49b3-b74c-7683c0345a19 port 22 accept;
</span></span><span class="line"><span class="cl"># FILTER (APP Category) rules
</span></span><span class="line"><span class="cl">rule 2 at 1 inout protocol any from any to any reject with log tag &#39;debug&#39;;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>Key Observations:
No ICMP allow rule is present for Alpine02, as it is not part of dFG_Alpine01, which is referenced in the policy&rsquo;s <!-- raw HTML omitted --> field.
All traffic is rejected at the main ruleset level (rule 2), confirming that the rule-level <!-- raw HTML omitted --> field (set to dFG_Alpine02) does not enforce the rule here.</p>
<ol start="3">
<li><strong>Alpine03 (Control VM, nic-544799-eth0-vmware-sfw.2)</strong>:</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">ruleset mainrs {
</span></span><span class="line"><span class="cl"># FILTER (APP Category) rules
</span></span><span class="line"><span class="cl">rule 2 at 1 inout protocol any from any to any reject with log tag &#39;debug&#39;;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>Key Observations:</p>
<p>The only rule applied at the main ruleset level is a default reject rule (rule 2), which blocks all traffic. This confirms that no ICMP allow rule from the policy or rule is applied to Alpine03, as it is not part of dFG_Alpine01.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Important Note: Double Enforcement in NSX Distributed Firewall</b>
        </div>
        <div class="admonition-content"><p>Even though traffic to <strong>Alpine01</strong> is allowed from <strong>any</strong> source, <strong>Alpine02</strong> cannot ping <strong>Alpine01</strong>. This is because <strong>Alpine02</strong> does not have a corresponding firewall rule permitting ICMP traffic for outbound communication.</p>
<p>In <strong>NSX Distributed Firewall</strong>, firewall rules are evaluated <strong>twice</strong> for traffic between VMs managed by NSX:</p>
<ol>
<li><strong>At the source VM</strong>: Outbound traffic must match a rule that permits it to leave the VM.</li>
<li><strong>At the destination VM</strong>: Inbound traffic must match a rule that permits it to reach the VM.</li>
</ol>
<p>This double-enforcement model ensures precise control over traffic flow but requires careful consideration when designing firewall policies. Both source and destination rules must be configured to allow traffic for successful communication.</p>
<h3 id="using-the-nsx-traceflow-tool">Using the NSX Traceflow Tool</h3>
<p>The <strong>Traceflow Tool</strong> in NSX provides an excellent way to visualize this behavior. By tracing packets, you can observe how traffic is evaluated and where it is blocked or allowed. In this scenario, Traceflow clearly demonstrates that traffic originating from <strong>Alpine02</strong> is blocked at the source due to the absence of an ICMP allow rule, even though the destination (<strong>Alpine01</strong>) has an allow rule.</p>
<p>Understanding this double-enforcement logic is crucial for troubleshooting and optimizing NSX Distributed Firewall configurations.</p>
</div>
    </aside>

<figure><a href="traceflow.png"><picture>
          <source srcset="/nsx-apply-to/traceflow_hu_b59aaa99da4de8f8.webp" type="image/webp">
          <source srcset="/nsx-apply-to/traceflow_hu_ba67bca5ba73ad6e.jpg" type="image/jpeg">
          <img src="/nsx-apply-to/traceflow_hu_b59aaa99da4de8f8.webp"alt="Traceflow"  width="1335"  height="849" />
        </picture></a><figcaption>
            <p>NSX Traceflow (click to enlarge)</p>
          </figcaption></figure>
<h2 id="answering-question-4-does-the-rule-applied-to-field-or-the-policy-applied-to-field-take-precedence">Answering Question 4: Does the Rule <code>&lt;Applied To&gt;</code> Field or the Policy <code>&lt;Applied To&gt;</code> Field Take Precedence?</h2>
<p>Through our tests, we can confidently answer this question: <strong>The policy <code>&lt;Applied To&gt;</code> field takes precedence over the rule <code>&lt;Applied To&gt;</code> field</strong>.</p>
<h3 id="key-findings">Key Findings:</h3>
<ul>
<li>
<p>The <strong>policy’s <code>&lt;Applied To&gt;</code> field</strong> defines the overall scope of enforcement. This means that if a VM or Security Group is excluded by the policy <code>&lt;Applied To&gt;</code> field, no rules from that policy will apply to it, regardless of the rule <code>&lt;Applied To&gt;</code> field.</p>
</li>
<li>
<p>The rule&rsquo;s <code>&lt;Applied To &gt;</code> field cannot further restrict or extend enforcement within the scope defined by the policy. It simply ignored.</p>
</li>
</ul>
<h3 id="evidence">Evidence:</h3>
<ul>
<li>In <strong>Test 3</strong>, we demonstrated that even though the rule <code>&lt;Applied To&gt;</code> field was set to <strong>dFG_Alpine02</strong>, the rule was not applied to <strong>Alpine02</strong> because the policy <code>&lt;Applied To&gt;</code> field limited enforcement to <strong>dFG_Alpine01</strong>.</li>
<li>This behavior clearly shows that the policy <code>&lt;Applied To&gt;</code> field is the deciding factor in scoping firewall rule enforcement.</li>
</ul>
<p>By understanding this precedence, administrators can better design their NSX firewall policies to avoid conflicts or unintended behavior.</p>
<h2 id="why-use-applied-to-in-nsx">Why Use <code>&lt;Applied To&gt;</code> in NSX?</h2>
<p>The <strong><code>&lt;Applied To&gt;</code></strong> field in NSX Distributed Firewall is a powerful tool that enables administrators to optimize rule enforcement and improve overall performance in their environments. While it might seem optional at first glance, there are several key reasons to leverage this feature:</p>
<h3 id="1-optimizing-resource-usage">1. <strong>Optimizing Resource Usage</strong></h3>
<p>By default, Distributed Firewall rules are applied to all ESXi hosts in the cluster, even if they are irrelevant to some workloads. Using the <code>&lt;Applied To&gt;</code> field allows you to:</p>
<ul>
<li><strong>Restrict rule enforcement</strong> to specific VMs, Security Groups, or segments.</li>
<li>Reduce unnecessary rule propagation across unrelated hosts.</li>
<li>Minimize the overhead of processing firewall rules.</li>
</ul>
<h3 id="2-enhancing-rule-clarity-and-management">2. <strong>Enhancing Rule Clarity and Management</strong></h3>
<p>When <code>&lt;Applied To&gt;</code> is used correctly, it provides clear boundaries for where rules are enforced:</p>
<ul>
<li>It helps avoid confusion about which VMs are affected by specific rules.</li>
<li>It simplifies troubleshooting by narrowing down the scope of rule application.</li>
<li>It prevents accidental rule application to unintended workloads.</li>
</ul>
<h3 id="3-improving-security-posture">3. <strong>Improving Security Posture</strong></h3>
<p>Restricting the scope of firewall rules reduces the attack surface:</p>
<ul>
<li>Only the VMs, segments, or groups explicitly defined in the <code>&lt;Applied To&gt;</code> field will be impacted by the rule.</li>
<li>This minimizes the risk of unintentionally exposing unrelated workloads to less restrictive rules.</li>
</ul>
<h3 id="4-avoiding-overlap-and-rule-conflicts">4. <strong>Avoiding Overlap and Rule Conflicts</strong></h3>
<p>In complex environments, rules can overlap or conflict, leading to unexpected behavior. By carefully defining <code>&lt;Applied To&gt;</code> fields:</p>
<ul>
<li>You ensure that rules are scoped to their intended targets, reducing the risk of conflicts.</li>
<li>You can isolate specific rule sets for testing or special cases without affecting unrelated traffic.</li>
</ul>
<h3 id="conclusion">Conclusion</h3>
<p>While the <strong><code>&lt;Applied To&gt;</code></strong> field might add an extra layer of configuration, it plays a vital role in optimizing NSX Distributed Firewall performance, clarity, and security. By carefully designing and applying <code>&lt;Applied To&gt;</code> settings at both the policy and rule levels, administrators can achieve a more efficient, secure, and manageable firewall implementation.
In addition, there is a limit to the number of firewall rules that can be applied to an ESX host and to a virtual NIC. The current limits may change with the NSX version and can be looked up in the Configmax tool from Broadcom.</p>
]]></content>
		</item>
		
		<item>
			<title>More performance trough NSX Edge TEP groups?</title>
			<link>https://sdn-warrior.org/posts/nsx-tep-groups/</link>
			<pubDate>Fri, 03 Jan 2025 12:00:00 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/nsx-tep-groups/</guid>
			<description><![CDATA[How to use Edge TEP groups in NSX]]></description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>My esteemed colleague, Steven Schramm, recently published an excellent article titled <em><a href="https://sdn-techtalk.com/posts/multitep-ha/">Improving NSX Datacenter TEP Performance and Availability - Multi-TEP and TEP Group High Availability</a></em>. This inspired me to explore how TEP Groups influence performance in NSX, specifically focusing on how North/South traffic can benefit from their implementation.</p>
<h2 id="what-are-tep-groups-and-why-are-they-interesting">What Are TEP Groups and Why Are They Interesting?</h2>
<p>With NSX 4.2.1, TEP High Availability (HA) for Edge Transport Nodes was introduced. In addition to the HA feature, the load-sharing behavior was also modified.</p>
<p>Before NSX 4.2.1, each segment was bound to a single TEP interface. This limitation meant that North/South traffic could only utilize the maximum throughput of one physical adapter (ESXi where the Edge VM is realized). With TEP HA and the introduction of TEP Groups, this behavior has changed significantly.</p>
<p>It is worth noting that prior to TEP HA, a Multi-TEP implementation was already available. While this allowed for failover within the TEP network if a physical adapter lost its link, it did not address Layer 2 or Layer 3 issues. For more details on this topic, I recommend reading Steven’s article.</p>
<p>However, TEP HA is not enabled by default and, as of today, can only be activated via the API.</p>
<h2 id="lab-setup">LAB Setup</h2>
<p>For this exploration, I am running NSX 4.2.1 on three Intel NUC Pro devices, each equipped with dual 2.5 Gigabit LAN adapters. My test VMs are pinned to different hosts using DRS rules to ensure separation and accurate testing conditions.</p>
<p>Multi-TEP is configured in the setup, but TEP HA has not yet been enabled.</p>
<p>The test environment includes four Alpine Linux VMs, each connected to the same segment.</p>
<ul>
<li><strong>Alpine1</strong>: <code>10.10.20.10</code></li>
<li><strong>Alpine2</strong>: <code>10.10.20.20</code></li>
<li><strong>Alpine3</strong>: <code>10.10.20.30</code></li>
<li><strong>Alpine4</strong>: <code>10.10.20.40</code></li>
</ul>
<p>These VMs are distributed across two ESXi servers to simulate North/South traffic under real-world conditions. A third ESXi server hosts the <strong>NSX Edge VM</strong>, responsible for North/South traffic.</p>
<p>To evaluate performance, my iPerf target is located on a separate server with a <strong>10 Gb/s connection</strong>, ensuring that the network backbone does not introduce any bottlenecks. This setup provides a robust environment to test TEP HA and its impact on North/South traffic.</p>
<h2 id="baseline-tests-northsouth-capacity">Baseline Tests: North/South Capacity</h2>
<p>To measure the maximum North/South capacity of the setup, I ran iPerf tests simultaneously on all four Alpine VMs. Each VM generated traffic towards the iPerf target server with a 10 Gb/s connection. Below are the individual results:</p>
<ul>
<li><strong>Alpine1</strong>: 554 Mbps</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[ ID] Interval Transfer Bitrate Retr 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 6.45 GBytes 554 Mbits/sec 727 sender 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 6.45 GBytes 554 Mbits/sec receiver
</span></span></code></pre></div><ul>
<li><strong>Alpine2</strong>: 807 Mbps</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[ ID] Interval Transfer Bitrate Retr 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 9.40 GBytes 807 Mbits/sec 1713 sender 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 9.39 GBytes 807 Mbits/sec receiver
</span></span></code></pre></div><ul>
<li><strong>Alpine3</strong>: 465 Mbps</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[ ID] Interval Transfer Bitrate Retr 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 5.42 GBytes 465 Mbits/sec 1196 sender 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 5.41 GBytes 466 Mbits/sec receiver
</span></span></code></pre></div><ul>
<li><strong>Alpine4</strong>: 529 Mbps</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[ ID] Interval Transfer Bitrate Retr 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 6.16 GBytes 529 Mbits/sec 1010 sender 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.01 sec 6.16 GBytes 529 Mbits/sec receiver
</span></span></code></pre></div><h3 id="total-throughput">Total Throughput</h3>
<p>The combined total throughput across all four VMs was <strong>2.355 Gbps</strong>, indicating the maximum North/South capacity under the current configuration.</p>
<h2 id="validating-physical-nic-utilization">Validating Physical NIC Utilization</h2>
<p>To monitor the utilization of the Edge VM, we can use <code>esxtop</code> on the ESXi server. By pressing <strong>&ldquo;N&rdquo;</strong>, we can examine the network statistics for the physical NICs (<code>vmnic0</code> and <code>vmnic1</code>) as well as the interfaces of the Edge VM.</p>
<p>My Edge VM is configured with four Fastpath interfaces:</p>
<ul>
<li><strong>fp0-fp1</strong>: Used for TEP traffic.</li>
<li><strong>fp2-fp3</strong>: Used for BGP uplinks.</li>
</ul>
<p>Additionally, <code>esxtop</code> displays the mapping of the Edge VM&rsquo;s interfaces to the respective physical NICs (<code>vmnic</code>). This allows us to verify how traffic is distributed across the available resources and ensures that both TEP and BGP traffic are leveraging the correct network paths.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">  67108895 1054173:edge04.lab.home.eth3       vmnic0 DvsPortset-0 &lt;--(fp2)         
</span></span><span class="line"><span class="cl">  67108897 1054173:edge04.lab.home.eth1       vmnic0 DvsPortset-0 &lt;--(fp0)
</span></span><span class="line"><span class="cl">  67108898 1054173:edge04.lab.home.eth0       vmnic1 DvsPortset-0 &lt;--(MGMT)
</span></span><span class="line"><span class="cl">  67108899 1054173:edge04.lab.home.eth2       vmnic1 DvsPortset-0 &lt;--(fp1)
</span></span><span class="line"><span class="cl">  67108900 1054173:edge04.lab.home.eth4       vmnic1 DvsPortset-0 &lt;--(fp3)   
</span></span></code></pre></div><p>In addition to monitoring this in <code>esxtop</code>, I can observe the activity on my switches. By checking the switch port bandwith statistics, I can determine which physical adapter is actively handling the iPerf traffic and which one is idle. This provides an additional layer of validation for the distribution of traffic across the available pNICs.</p>
<h2 id="configuring-multi-tep-ha">Configuring Multi-TEP HA</h2>
<p>The process of enabling Multi-TEP High Availability (HA) is straightforward. It begins with creating a TEP HA Host Switch Profile. This is done through a simple API call using the <code>PUT</code> method to the following endpoint:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">PUT https://&lt;nsx-policy-manager&gt;/policy/api/v1/infra/host-switch-profiles/nsxvtepha
</span></span></code></pre></div><h3 id="json-payload">JSON Payload</h3>
<p>The following JSON payload needs to be provided in the API request:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;enabled&#34;</span><span class="p">:</span> <span class="s2">&#34;true&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;failover_timeout&#34;</span><span class="p">:</span> <span class="s2">&#34;5&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;auto_recovery&#34;</span><span class="p">:</span> <span class="s2">&#34;true&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;auto_recovery_initial_wait&#34;</span><span class="p">:</span> <span class="s2">&#34;300&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;auto_recovery_max_backoff&#34;</span><span class="p">:</span> <span class="s2">&#34;86400&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;resource_type&#34;</span><span class="p">:</span> <span class="s2">&#34;PolicyVtepHAHostSwitchProfile&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;display_name&#34;</span><span class="p">:</span> <span class="s2">&#34;nsxvtepha&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Key Parameters:</p>
<ul>
<li>enabled: Enables TEP HA functionality (true or false).</li>
<li>failover_timeout: Specifies the timeout (in seconds) for failover to occur.</li>
<li>auto_recovery: Enables automatic recovery of TEPs after a failure.</li>
<li>auto_recovery_initial_wait: Time (in seconds) before initiating the first recovery attempt.</li>
<li>auto_recovery_max_backoff: Maximum backoff time (in seconds) for recovery attempts.</li>
<li>display_name: A human-readable name for the profile.</li>
</ul>
<p>This API call creates the TEP HA Host Switch Profile, which can then be applied to the desired transport nodes to enable Multi-TEP HA functionality.</p>
<h2 id="assigning-the-tep-ha-profile">Assigning the TEP HA Profile</h2>
<p>To enable the Multi-TEP HA feature, the created TEP HA profile must be assigned to a <strong>Transport Node Profile</strong>. This assignment ensures that the specified hosts will have the Multi-TEP HA feature enabled.</p>
<p>Steps to Assign the TEP HA Profile:</p>
<ol>
<li><strong>Gather the Transport Node Profile ID</strong>:
Retrieve the ID of the transport node profile that you want to map the TEP HA profile to. Without this ID, you cannot complete the assignment.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">GET https://&lt;nsx-policy-manager&gt;/policy/api/v1/infra/host-transport-node-profiles/
</span></span></code></pre></div><ol start="2">
<li><strong>Assign the TEP HA Profile</strong>:
Use the API to update the transport node profile by linking it with the TEP HA profile. The request must specify the IDs of both the transport node profile and the TEP HA profile.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">PUT https://&lt;nsx-policy-manager&gt;/policy/api/v1/infra/host-transport-node-profiles/&lt;tnp-id&gt; 
</span></span></code></pre></div><p>Add the following entry to the transport node profile to link it with the TEP HA profile:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;key&#34;</span><span class="p">:</span> <span class="s2">&#34;VtepHAHostSwitchProfile&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;/infra/host-switch-profiles/nsxvtepha&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>The full transport node profile looks like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;host_switch_spec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;host_switches&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;host_switch_name&#34;</span><span class="p">:</span> <span class="s2">&#34;NSX_vCompute3&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;host_switch_id&#34;</span><span class="p">:</span> <span class="s2">&#34;50 27 cc 64 fe fc 4b 00-b1 af 91 5d 11 78 b9 06&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;host_switch_type&#34;</span><span class="p">:</span> <span class="s2">&#34;VDS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;host_switch_mode&#34;</span><span class="p">:</span> <span class="s2">&#34;STANDARD&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;ecmp_mode&#34;</span><span class="p">:</span> <span class="s2">&#34;L3&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;host_switch_profile_ids&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&#34;key&#34;</span><span class="p">:</span> <span class="s2">&#34;UplinkHostSwitchProfile&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;/infra/host-switch-profiles/HostUplink&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&#34;key&#34;</span><span class="p">:</span> <span class="s2">&#34;VtepHAHostSwitchProfile&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;/infra/host-switch-profiles/nsxvtepha&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">          <span class="p">],</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;uplinks&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&#34;vds_uplink_name&#34;</span><span class="p">:</span> <span class="s2">&#34;Uplink 1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&#34;uplink_name&#34;</span><span class="p">:</span> <span class="s2">&#34;Uplink1&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&#34;vds_uplink_name&#34;</span><span class="p">:</span> <span class="s2">&#34;Uplink 2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&#34;uplink_name&#34;</span><span class="p">:</span> <span class="s2">&#34;Uplink2&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">          <span class="p">],</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;is_migrate_pnics&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;ip_assignment_spec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;ip_pool_id&#34;</span><span class="p">:</span> <span class="s2">&#34;/infra/ip-pools/tep&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;resource_type&#34;</span><span class="p">:</span> <span class="s2">&#34;StaticIpPoolSpec&#34;</span>
</span></span><span class="line"><span class="cl">          <span class="p">},</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;cpu_config&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">          <span class="p">],</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;transport_zone_endpoints&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&#34;transport_zone_id&#34;</span><span class="p">:</span> <span class="s2">&#34;/infra/sites/default/enforcement-points/default/transport-zones/OVERLAYTZ&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&#34;transport_zone_profile_ids&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">              <span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&#34;transport_zone_id&#34;</span><span class="p">:</span> <span class="s2">&#34;/infra/sites/default/enforcement-points/default/transport-zones/MVLAN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&#34;transport_zone_profile_ids&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">              <span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">          <span class="p">],</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;not_ready&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;portgroup_transport_zone_id&#34;</span><span class="p">:</span> <span class="s2">&#34;/infra/sites/default/enforcement-points/default/transport-zones/eb370bd3-db11-319c-98ec-585e402bf98c&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;resource_type&#34;</span><span class="p">:</span> <span class="s2">&#34;StandardHostSwitchSpec&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;ignore_overridden_hosts&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;resource_type&#34;</span><span class="p">:</span> <span class="s2">&#34;PolicyHostTransportNodeProfile&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;45104efd-72bf-4d69-bc24-87d45b03b402&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;display_name&#34;</span><span class="p">:</span> <span class="s2">&#34;HostTNP&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;path&#34;</span><span class="p">:</span> <span class="s2">&#34;/infra/host-transport-node-profiles/45104efd-72bf-4d69-bc24-87d45b03b402&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;relative_path&#34;</span><span class="p">:</span> <span class="s2">&#34;45104efd-72bf-4d69-bc24-87d45b03b402&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;parent_path&#34;</span><span class="p">:</span> <span class="s2">&#34;/infra&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;remote_path&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;unique_id&#34;</span><span class="p">:</span> <span class="s2">&#34;45104efd-72bf-4d69-bc24-87d45b03b402&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;realization_id&#34;</span><span class="p">:</span> <span class="s2">&#34;45104efd-72bf-4d69-bc24-87d45b03b402&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;owner_id&#34;</span><span class="p">:</span> <span class="s2">&#34;1ec3eeb1-8da7-457d-bebe-a8b2b47df7de&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;marked_for_delete&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;overridden&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;_system_owned&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;_protection&#34;</span><span class="p">:</span> <span class="s2">&#34;NOT_PROTECTED&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;_create_time&#34;</span><span class="p">:</span> <span class="mi">1723569644857</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;_create_user&#34;</span><span class="p">:</span> <span class="s2">&#34;admin&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;_last_modified_time&#34;</span><span class="p">:</span> <span class="mi">1732706346575</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;_last_modified_user&#34;</span><span class="p">:</span> <span class="s2">&#34;admin&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;_revision&#34;</span><span class="p">:</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span></code></pre></div><h3 id="important-notes">Important Notes</h3>
<ul>
<li>Ensure the transport node profile is correctly assigned to the desired hosts to enable Multi-TEP HA.</li>
<li>Any misconfiguration or omission of the &ldquo;key&rdquo;: &ldquo;VtepHAHostSwitchProfile&rdquo; entry will result in the inability to activate the TEP HA functionality.</li>
<li>The value field must match the path of the created TEP HA profile.</li>
</ul>
<p>This process is crucial for leveraging the full capabilities of Multi-TEP HA in NSX environments.</p>
<h2 id="enabling-edge-tep-groups">Enabling Edge TEP Groups</h2>
<p>To enable the TEP Group feature on Edge nodes, the global connectivity configuration must be updated. This is achieved by modifying the <code>tep_group_config</code> parameter via an API call.</p>
<p>Use the following API request to enable the TEP Group feature on Edge nodes:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">PUT https://&lt;NSX manager&gt;/policy/api/v1/infra/connectivity-global-config
</span></span></code></pre></div><p>JSON Payload</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nt">&#34;tep_group_config&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;enable_tep_grouping_on_edge&#34;</span><span class="p">:</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;resource_type&#34;</span><span class="p">:</span> <span class="s2">&#34;GlobalConfig&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><p>The full global config looks like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;fips&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;lb_fips_enabled&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;tls_fips_enabled&#34;</span><span class="p">:</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">	<span class="p">},</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;l3_forwarding_mode&#34;</span><span class="p">:</span> <span class="s2">&#34;IPV4_ONLY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;uplink_mtu_threshold&#34;</span><span class="p">:</span> <span class="mi">9000</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;vdr_mac&#34;</span><span class="p">:</span> <span class="s2">&#34;02:50:56:56:44:52&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;vdr_mac_nested&#34;</span><span class="p">:</span> <span class="s2">&#34;02:50:56:56:44:53&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;allow_changing_vdr_mac_in_use&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;arp_limit_per_gateway&#34;</span><span class="p">:</span> <span class="mi">50000</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;external_gateway_bfd&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;bfd_profile_path&#34;</span><span class="p">:</span> <span class="s2">&#34;/infra/bfd-profiles/default-external-gw-bfd-profile&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;enable&#34;</span><span class="p">:</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">	<span class="p">},</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;lb_ecmp&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;remote_tunnel_physical_mtu&#34;</span><span class="p">:</span> <span class="mi">1700</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;physical_uplink_mtu&#34;</span><span class="p">:</span> <span class="mi">9000</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;global_replication_mode_enabled&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;is_inherited&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;site_infos&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">	<span class="p">],</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;tep_group_config&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;enable_tep_grouping_on_edge&#34;</span><span class="p">:</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">	<span class="p">},</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;resource_type&#34;</span><span class="p">:</span> <span class="s2">&#34;GlobalConfig&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;global-config&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;display_name&#34;</span><span class="p">:</span> <span class="s2">&#34;default&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;path&#34;</span><span class="p">:</span> <span class="s2">&#34;/infra/global-config&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;relative_path&#34;</span><span class="p">:</span> <span class="s2">&#34;global-config&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;parent_path&#34;</span><span class="p">:</span> <span class="s2">&#34;/infra&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;remote_path&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;unique_id&#34;</span><span class="p">:</span> <span class="s2">&#34;071c1408-8d73-42ea-b2ad-b85cc43c96b2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;realization_id&#34;</span><span class="p">:</span> <span class="s2">&#34;071c1408-8d73-42ea-b2ad-b85cc43c96b2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;owner_id&#34;</span><span class="p">:</span> <span class="s2">&#34;1ec3eeb1-8da7-457d-bebe-a8b2b47df7de&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;marked_for_delete&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;overridden&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_system_owned&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_protection&#34;</span><span class="p">:</span> <span class="s2">&#34;NOT_PROTECTED&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_create_time&#34;</span><span class="p">:</span> <span class="mi">1723479213559</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_create_user&#34;</span><span class="p">:</span> <span class="s2">&#34;system&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_last_modified_time&#34;</span><span class="p">:</span> <span class="mi">1735854980053</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_last_modified_user&#34;</span><span class="p">:</span> <span class="s2">&#34;admin&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_revision&#34;</span><span class="p">:</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h2 id="verifying-changes-checking-edge-node-tep-groups">Verifying Changes: Checking Edge Node TEP Groups</h2>
<p>To ensure that the changes to enable TEP Groups are effective, you can verify the configuration directly on an Edge Node using SSH. The following command provides an overview of logical switches and their associated TEP Groups:</p>
<h3 id="command">Command</h3>
<p>Log in to the Edge Node via SSH and execute:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">get logical-switches
</span></span></code></pre></div><p>Sample Output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">UUID                                   VNI          ENCAP    TEP_GROUP    NAME                                               GLOBAL_VNI(FED)
</span></span><span class="line"><span class="cl">7f7e8af0-299e-4354-a143-a6a3689db228   74753        GENEVE   293888       transit-rl-aa5420e0-3d2b-4ff7-b00e-5f234c2f7413                
</span></span><span class="line"><span class="cl">0abeab93-66ef-4b41-87b6-64164b450e8d   67587        GENEVE   293888       transit-bp-T1                                                  
</span></span><span class="line"><span class="cl">09243099-ebb7-41ae-bcf4-10e0b833cc24   68609        GENEVE   293888       inter-sr-routing-bp-T0-ECMP                                    
</span></span><span class="line"><span class="cl">6261cda0-558f-4a57-838c-d47c95945c31   71680        GENEVE   293888       T1-dhcp-ls
</span></span></code></pre></div><p>Key Parameters to Verify:</p>
<ul>
<li>TEP_GROUP: The column should display a valid TEP Group ID (e.g., 293888) for all logical switches.</li>
<li>Logical Switch Details: Ensure that all expected logical switches are listed, along with their VNI and encapsulation type (e.g., GENEVE).</li>
</ul>
<p>If the TEP_GROUP column shows values for the logical switches, it confirms that the TEP Group feature is active and functioning as expected. This verification ensures that your configuration changes are effective across the Edge Nodes.</p>
<h2 id="performance-tests-with-tep-groups">Performance Tests with TEP Groups</h2>
<p>To evaluate the impact of TEP Groups on performance, I ran simultaneous iPerf tests on all four Alpine VMs. Below are the individual results:</p>
<ul>
<li><strong>Alpine1</strong>: 1.14 Gbits/sec</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[ ID] Interval Transfer Bitrate Retr 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 13.3 GBytes 1.14 Gbits/sec 669 sender 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 13.3 GBytes 1.14 Gbits/sec receiver
</span></span></code></pre></div><ul>
<li><strong>Alpine2</strong>: 1.08 Gbits/sec</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[ ID] Interval Transfer Bitrate Retr 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 12.6 GBytes 1.08 Gbits/sec 774 sender 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 12.6 GBytes 1.08 Gbits/sec receiver
</span></span></code></pre></div><ul>
<li><strong>Alpine3</strong>: 1.10 Gbits/sec</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[ ID] Interval Transfer Bitrate Retr 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 12.8 GBytes 1.10 Gbits/sec 1002 sender 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 12.8 GBytes 1.10 Gbits/sec receiver
</span></span></code></pre></div><ul>
<li><strong>Alpine4</strong>: 1.11 Gbits/sec</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[ ID] Interval Transfer Bitrate Retr 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 12.9 GBytes 1.11 Gbits/sec 990 sender 
</span></span><span class="line"><span class="cl">[ 5] 0.00-100.00 sec 12.9 GBytes 1.11 Gbits/sec receiver
</span></span></code></pre></div><h3 id="total-throughput-1">Total Throughput</h3>
<p>The combined total throughput across all four VMs was <strong>4.43 Gbps</strong>, showing a significant improvement over the baseline tests without TEP Groups. This demonstrates the enhanced traffic distribution and performance benefits enabled by the Multi-TEP HA feature.</p>
<h2 id="cross-verification-on-the-switch">Cross-Verification on the Switch</h2>
<p>To further validate the results, I checked the physical interfaces of the ESXi server hosting the Edge VM directly on the switch. The switch statistics confirm that both physical interfaces are actively utilized during the iPerf tests.</p>
<h3 id="observations">Observations</h3>
<ul>
<li>Both physical interfaces (<code>vmnic0</code> and <code>vmnic1</code>) show significant traffic, indicating effective utilization and load balancing.</li>
<li>This behavior aligns with the expected performance of the TEP Groups feature, ensuring that traffic is distributed across multiple interfaces for maximum throughput.</li>
</ul>

<figure><picture>
          <source srcset="/nsx-tep-groups/switch_hu_1c77bd0b8863d565.webp" type="image/webp">
          <source srcset="/nsx-tep-groups/switch_hu_baae85ba4d0da563.jpg" type="image/jpeg">
          <img src="/nsx-tep-groups/switch_hu_1c77bd0b8863d565.webp"alt="Switch Port View"  width="1958"  height="184" />
        </picture><figcaption>
            <p>Switch port view</p>
          </figcaption></figure>
<p>The screenshot demonstrates how the Multi-TEP HA configuration efficiently balances the load across both physical NICs, validating the setup and confirming the improvements in traffic handling.</p>
<h2 id="final-thoughts">Final Thoughts</h2>
<p>TEP Groups can be easily integrated into any environment with a Multi-TEP setup without requiring significant modifications. The adjustments are minimal and pose a low risk to production environments.</p>
<p>In addition to the noticeable performance improvements, TEP Groups also provide significantly better High Availability (HA) handling. The performance gains are particularly impactful in environments with fewer NSX segments, where the previous load distribution method was less effective.</p>
<p>Moreover, TEP Groups can deliver higher performance for segments with high traffic loads, especially those previously constrained by the physical uplink&rsquo;s capacity. This makes TEP Groups a valuable enhancement for optimizing both performance and reliability in NSX deployments.</p>
<h2 id="further-resources">Further Resources</h2>
<p>For more details and in-depth explanations about Multi-TEP High Availability and TEP Groups, refer to the following resources:</p>
<ul>
<li><a href="https://sdn-techtalk.com/posts/multitep-ha/">Improving NSX Datacenter TEP Performance and Availability - Multi-TEP and TEP Group High Availability</a></li>
<li><a href="https://techdocs.broadcom.com/us/en/vmware-cis/nsx/vmware-nsx/4-2/administration-guide/host-switches/multi-tep-high-availability.html">VMware NSX Administration Guide: Multi-TEP High Availability</a></li>
</ul>
]]></content>
		</item>
		
		<item>
			<title>Redeploy an NSX Edge VM Appliance</title>
			<link>https://sdn-warrior.org/posts/nsx-edge-redeploy/</link>
			<pubDate>Mon, 30 Dec 2024 15:00:46 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/nsx-edge-redeploy/</guid>
			<description><![CDATA[Quicktip: Redeploy NSX Edge with API]]></description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>There are situations where you might need to redeploy an NSX Edge node. This could happen if an Edge VM becomes non-functional, or if it needs to be relocated within the datacenter—for instance, to a different datastore or compute resource. You might also redeploy to move the node to another network. Of course, the specific reasons for redeployment depend on your enviroment.</p>
<p>It’s important to note that redeployment applies exclusively to existing NSX Edge nodes and can only be performed with an NSX Edge VM appliance.</p>
<h2 id="prerequisites">Prerequisites</h2>
<p>Before redeploying an NSX Edge node, keep the following in mind:</p>
<ul>
<li>
<p>While certain configurations of the NSX Edge transport node payload can be changed, <strong>do not modify</strong> the following settings on the existing NSX Edge node being replaced:</p>
<ul>
<li>Failure domain</li>
<li>Transport node connectivity</li>
<li>Physical NIC configuration</li>
<li>Logical routers</li>
<li>Load balancer allocations</li>
</ul>
</li>
<li>
<p>If the existing NSX Edge node is a physical server or was manually deployed via the vSphere Client, ensure that its connectivity to NSX Manager is down. If connectivity remains active, NSX will prevent the replacement of the existing node with a new one.</p>
</li>
<li>
<p><strong>Autodeployed NSX Edge nodes</strong> will retain hardware version 13. However, starting with NSX 4.0.1.1, redeploying an NSX Edge VM automatically upgrades the new VM to a hardware version compatible with the ESXi host version. For a list of compatible VM hardware versions, refer to VMware KB article <a href="https://kb.vmware.com/s/article/2007240">2007240</a>.</p>
</li>
</ul>
<h2 id="procedure">Procedure</h2>
<p>To redeploy an NSX Edge node, follow these steps:</p>
<ol>
<li>
<p><strong>Check the NSX Edge node</strong></p>
<ul>
<li>Open an SSH session and connect to the NSX Edge console.</li>
<li>Verify the logical routers configured on the NSX Edge node by running the following command in the CLI console:
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">get logical-routers
</span></span></code></pre></div></li>
<li>Power off the NSX Edge node.</li>
</ul>
</li>
<li>
<p><strong>Verify disconnection from NSX Manager:</strong></p>
<ul>
<li>
<p>Use the API to confirm the NSX Edge node is disconnected:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">GET /api/v1/transport-nodes/&lt;edgenode&gt;/state
</span></span></code></pre></div><p>The <code>node_deployment_state</code> should display:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">&#34;node_deployment_state&#34;: {
</span></span><span class="line"><span class="cl">    &#34;state&#34;: &#34;MPA_Disconnected&#34;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>A state of <code>MPA_Disconnected</code> indicates that you can proceed with redeployment.</p>
</li>
<li>
<p><strong>Important:</strong> If the <code>node_deployment_state</code> is <code>Node Ready</code>, NSX Manager will block the redeployment and display error <strong>78006</strong>: <em>Manager connectivity to Edge node must be down</em>.</p>
</li>
<li>
<p>Alternatively, check the connectivity state from the Edge Transport Node page in the NSX UI. A disconnected NSX Edge node will show the system message:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">Configuration Error: Edge VM MPA Connectivity is down
</span></span></code></pre></div></li>
</ul>
</li>
<li>
<p><strong>For an auto-deployed NSX Edge node:</strong></p>
<ul>
<li>Use the following API command to retrieve the payload of the transport node:
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">GET /&lt;NSX-Manager-IPaddress&gt;/api/v1/transport-nodes/&lt;edgenode&gt;
</span></span></code></pre></div></li>
<li>Save the output payload for later use. (Output example)</li>
</ul>
</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;node_id&#34;</span><span class="p">:</span> <span class="s2">&#34;607064c6-dd8d-4576-a2d9-2a73abff38aa&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;host_switch_spec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;host_switches&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">			<span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;host_switch_name&#34;</span><span class="p">:</span> <span class="s2">&#34;nsxHostSwitch&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;host_switch_id&#34;</span><span class="p">:</span> <span class="s2">&#34;c8e3cfaf-9837-4ee2-8a6f-9055927e6009&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;host_switch_type&#34;</span><span class="p">:</span> <span class="s2">&#34;NVDS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;host_switch_mode&#34;</span><span class="p">:</span> <span class="s2">&#34;STANDARD&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;ecmp_mode&#34;</span><span class="p">:</span> <span class="s2">&#34;L3&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;host_switch_profile_ids&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">					<span class="p">{</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;key&#34;</span><span class="p">:</span> <span class="s2">&#34;UplinkHostSwitchProfile&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;1c653cda-9c95-414f-9b97-3d8f7cb192d6&#34;</span>
</span></span><span class="line"><span class="cl">					<span class="p">}</span>
</span></span><span class="line"><span class="cl">				<span class="p">],</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;pnics&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">					<span class="p">{</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;device_name&#34;</span><span class="p">:</span> <span class="s2">&#34;fp-eth0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;uplink_name&#34;</span><span class="p">:</span> <span class="s2">&#34;Uplink1&#34;</span>
</span></span><span class="line"><span class="cl">					<span class="p">},</span>
</span></span><span class="line"><span class="cl">					<span class="p">{</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;device_name&#34;</span><span class="p">:</span> <span class="s2">&#34;fp-eth1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;uplink_name&#34;</span><span class="p">:</span> <span class="s2">&#34;Uplink2&#34;</span>
</span></span><span class="line"><span class="cl">					<span class="p">}</span>
</span></span><span class="line"><span class="cl">				<span class="p">],</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;is_migrate_pnics&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;ip_assignment_spec&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">					<span class="nt">&#34;ip_pool_id&#34;</span><span class="p">:</span> <span class="s2">&#34;00743a1f-a1a8-46b8-96a7-e0ebe58d7feb&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">					<span class="nt">&#34;resource_type&#34;</span><span class="p">:</span> <span class="s2">&#34;StaticIpPoolSpec&#34;</span>
</span></span><span class="line"><span class="cl">				<span class="p">},</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;cpu_config&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">				<span class="p">],</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;transport_zone_endpoints&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">					<span class="p">{</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;transport_zone_id&#34;</span><span class="p">:</span> <span class="s2">&#34;1b3a2f36-bfd1-443e-a0f6-4de01abc963e&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;transport_zone_profile_ids&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">							<span class="p">{</span>
</span></span><span class="line"><span class="cl">								<span class="nt">&#34;resource_type&#34;</span><span class="p">:</span> <span class="s2">&#34;BfdHealthMonitoringProfile&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">								<span class="nt">&#34;profile_id&#34;</span><span class="p">:</span> <span class="s2">&#34;52035bb3-ab02-4a08-9884-18631312e50a&#34;</span>
</span></span><span class="line"><span class="cl">							<span class="p">}</span>
</span></span><span class="line"><span class="cl">						<span class="p">]</span>
</span></span><span class="line"><span class="cl">					<span class="p">},</span>
</span></span><span class="line"><span class="cl">					<span class="p">{</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;transport_zone_id&#34;</span><span class="p">:</span> <span class="s2">&#34;a95c914d-748d-497c-94ab-10d4647daeba&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;transport_zone_profile_ids&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">							<span class="p">{</span>
</span></span><span class="line"><span class="cl">								<span class="nt">&#34;resource_type&#34;</span><span class="p">:</span> <span class="s2">&#34;BfdHealthMonitoringProfile&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">								<span class="nt">&#34;profile_id&#34;</span><span class="p">:</span> <span class="s2">&#34;52035bb3-ab02-4a08-9884-18631312e50a&#34;</span>
</span></span><span class="line"><span class="cl">							<span class="p">}</span>
</span></span><span class="line"><span class="cl">						<span class="p">]</span>
</span></span><span class="line"><span class="cl">					<span class="p">}</span>
</span></span><span class="line"><span class="cl">				<span class="p">],</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;pnics_uninstall_migration&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">				<span class="p">],</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;vmk_uninstall_migration&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">				<span class="p">],</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;not_ready&#34;</span><span class="p">:</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="p">],</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;resource_type&#34;</span><span class="p">:</span> <span class="s2">&#34;StandardHostSwitchSpec&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">},</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;maintenance_mode&#34;</span><span class="p">:</span> <span class="s2">&#34;DISABLED&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;node_deployment_info&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;deployment_type&#34;</span><span class="p">:</span> <span class="s2">&#34;VIRTUAL_MACHINE&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;deployment_config&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nt">&#34;vm_deployment_config&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;vc_id&#34;</span><span class="p">:</span> <span class="s2">&#34;0adeeac2-42dc-4d5a-a4c4-1890b1174a4e&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;compute_id&#34;</span><span class="p">:</span> <span class="s2">&#34;domain-c18&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;storage_id&#34;</span><span class="p">:</span> <span class="s2">&#34;datastore-30&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;management_network_id&#34;</span><span class="p">:</span> <span class="s2">&#34;dvportgroup-29&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;ipv4_assignment_enabled&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;ipv4_assignment_disabled&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;management_port_subnets&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">					<span class="p">{</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;ip_addresses&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">							<span class="s2">&#34;192.168.12.13&#34;</span>
</span></span><span class="line"><span class="cl">						<span class="p">],</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;prefix_length&#34;</span><span class="p">:</span> <span class="mi">24</span>
</span></span><span class="line"><span class="cl">					<span class="p">}</span>
</span></span><span class="line"><span class="cl">				<span class="p">],</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;default_gateway_addresses&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">					<span class="s2">&#34;192.168.12.1&#34;</span>
</span></span><span class="line"><span class="cl">				<span class="p">],</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;data_network_ids&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">					<span class="s2">&#34;dvportgroup-1001&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">					<span class="s2">&#34;dvportgroup-1002&#34;</span>
</span></span><span class="line"><span class="cl">				<span class="p">],</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;reservation_info&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">					<span class="nt">&#34;memory_reservation&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;reservation_percentage&#34;</span><span class="p">:</span> <span class="mi">100</span>
</span></span><span class="line"><span class="cl">					<span class="p">},</span>
</span></span><span class="line"><span class="cl">					<span class="nt">&#34;cpu_reservation&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;reservation_in_shares&#34;</span><span class="p">:</span> <span class="s2">&#34;HIGH_PRIORITY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">						<span class="nt">&#34;reservation_in_mhz&#34;</span><span class="p">:</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">					<span class="p">}</span>
</span></span><span class="line"><span class="cl">				<span class="p">},</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;resource_allocation&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">					<span class="nt">&#34;cpu_count&#34;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">					<span class="nt">&#34;memory_allocation_in_mb&#34;</span><span class="p">:</span> <span class="mi">8192</span>
</span></span><span class="line"><span class="cl">				<span class="p">},</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;placement_type&#34;</span><span class="p">:</span> <span class="s2">&#34;VsphereDeploymentConfig&#34;</span>
</span></span><span class="line"><span class="cl">			<span class="p">},</span>
</span></span><span class="line"><span class="cl">			<span class="nt">&#34;form_factor&#34;</span><span class="p">:</span> <span class="s2">&#34;MEDIUM&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nt">&#34;node_user_settings&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nt">&#34;cli_username&#34;</span><span class="p">:</span> <span class="s2">&#34;admin&#34;</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="p">},</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;node_settings&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nt">&#34;hostname&#34;</span><span class="p">:</span> <span class="s2">&#34;edge01-nsx.lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nt">&#34;search_domains&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">				<span class="s2">&#34;lab.home&#34;</span>
</span></span><span class="line"><span class="cl">			<span class="p">],</span>
</span></span><span class="line"><span class="cl">			<span class="nt">&#34;ntp_servers&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">				<span class="s2">&#34;192.168.12.1&#34;</span>
</span></span><span class="line"><span class="cl">			<span class="p">],</span>
</span></span><span class="line"><span class="cl">			<span class="nt">&#34;dns_servers&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">				<span class="s2">&#34;192.168.11.2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">				<span class="s2">&#34;192.168.100.254&#34;</span>
</span></span><span class="line"><span class="cl">			<span class="p">],</span>
</span></span><span class="line"><span class="cl">			<span class="nt">&#34;enable_ssh&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nt">&#34;allow_ssh_root_login&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nt">&#34;enable_upt_mode&#34;</span><span class="p">:</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">		<span class="p">},</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;resource_type&#34;</span><span class="p">:</span> <span class="s2">&#34;EdgeNode&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;external_id&#34;</span><span class="p">:</span> <span class="s2">&#34;607064c6-dd8d-4576-a2d9-2a73abff38aa&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;ip_addresses&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">			<span class="s2">&#34;192.168.12.13&#34;</span>
</span></span><span class="line"><span class="cl">		<span class="p">],</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;607064c6-dd8d-4576-a2d9-2a73abff38aa&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;display_name&#34;</span><span class="p">:</span> <span class="s2">&#34;edge01-nsx.lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;tags&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">		<span class="p">],</span>
</span></span><span class="line"><span class="cl">		<span class="nt">&#34;_revision&#34;</span><span class="p">:</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">	<span class="p">},</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;is_overridden&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;failure_domain_id&#34;</span><span class="p">:</span> <span class="s2">&#34;4fc1e3b0-1cd4-4339-86c8-f76baddbaafb&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;resource_type&#34;</span><span class="p">:</span> <span class="s2">&#34;TransportNode&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;607064c6-dd8d-4576-a2d9-2a73abff38aa&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;display_name&#34;</span><span class="p">:</span> <span class="s2">&#34;edge01-nsx.lab.home&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;tags&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">	<span class="p">],</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_system_owned&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_protection&#34;</span><span class="p">:</span> <span class="s2">&#34;NOT_PROTECTED&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_create_time&#34;</span><span class="p">:</span> <span class="mi">1735544264171</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_create_user&#34;</span><span class="p">:</span> <span class="s2">&#34;admin&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_last_modified_time&#34;</span><span class="p">:</span> <span class="mi">1735546418835</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_last_modified_user&#34;</span><span class="p">:</span> <span class="s2">&#34;admin&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;_revision&#34;</span><span class="p">:</span> <span class="mi">2</span> 
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span></code></pre></div><ol start="4">
<li><strong>Run the redeploy API command:</strong></li>
</ol>
<p>Prepare the payload:</p>
<p>Paste the payload retrieved earlier in the body of the redeploy API.
Verify the deployment_config section contains details about the target:
Compute manager
Datastore
Network
Ensure these values align with those defined in the node_settings section.</p>
<p>NSX Manager will use the information in the deployment_config section to redeploy the NSX Edge node to the specified location and resources.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">   POST /api/v1/transport-nodes/&lt;transport-node-id&gt;?action=redeploy
</span></span></code></pre></div><h2 id="verifying-redeployment">Verifying Redeployment</h2>
<p>After successfully executing the POST command, the <code>revision_id</code> will increment by one. This indicates that the command was successfully sent to the NSX Manager.</p>
<ol>
<li>
<p><strong>Confirm the redeployment status in vCenter:</strong></p>
<ul>
<li>Log in to vCenter and navigate to the relevant cluster or host where the NSX Edge node is being redeployed.</li>
<li>Check the task and events log for deployment activity related to the NSX Edge VM.</li>
</ul>
</li>
<li>
<p><strong>Validate the NSX Edge node redeployment:</strong></p>
<ul>
<li>Verify that the NSX Edge VM is being newly deployed in the specified location, as defined in the <code>deployment_config</code> section of the API payload.</li>
</ul>
</li>
</ol>
<p>Once the redeployment process is complete, ensure the NSX Edge node is functioning correctly in your NSX environment.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">After the NSX Manager successfully deploys the new NSX Edge node, it <strong>power on the Edge VM automatically</strong>.</div>
    </aside>
]]></content>
		</item>
		
		<item>
			<title>Ansible VLAN deployment with MikroTik</title>
			<link>https://sdn-warrior.org/posts/vlan-automation/</link>
			<pubDate>Tue, 24 Dec 2024 13:00:00 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/vlan-automation/</guid>
			<description><![CDATA[Ansible VLAN deployment with MikroTik]]></description>
			<content type="html"><![CDATA[<h2 id="yet-another-ansible-post">Yet Another Ansible Post</h2>
<p>As the year comes to a close, I can&rsquo;t help but reflect on the progress I&rsquo;ve made with Ansible in the past few weeks. Looking back, there&rsquo;s a lot to be satisfied with. After automating my IPAM system and the startup/shutdown process for my lab, I decided to tackle a long-standing annoyance: deploying VLANs for new lab environments.</p>
<h2 id="goals">Goals</h2>
<p>The main goal is to have a single file that describes all the required VLANs. This file should also allow me to delete or reuse VLANs as needed. Each VLAN must be deployed across three switches and configured as a tagged VLAN on specific ports.</p>
<p>Additionally, there are the peculiarities of MikroTik hardware to consider. When creating new VLANs on my Top-of-Rack (ToR) switch, MikroTik recommends disabling the L3 Hardware Offloading feature beforehand. In the past, I’ve encountered strange issues when this wasn’t done prior to creating new networks. Therefore, the automation should also handle disabling and re-enabling this feature as part of the process.</p>
<h2 id="future-goals">Future Goals</h2>
<p>In the future, I plan to expand this setup further, integrating it with Ansible Tower or ArgoCD to enable management through pipelines.</p>
<p>A pipeline is essentially an automated workflow that takes a defined input—such as a configuration file or a code repository—and processes it through several steps to achieve a desired outcome. For example, in this context, a pipeline could validate my VLAN configuration, deploy it to the target switches, and handle any post-deployment tasks automatically.</p>
<p>My locally hosted Gitea instance will serve as the <strong>Source of Truth</strong>, housing the configuration files and acting as the central repository for all changes. This ensures consistency, version control, and a clear audit trail for every modification.</p>
<h2 id="what-ive-done">What I&rsquo;ve Done</h2>
<p>For this implementation, I approached things a bit differently compared to my last two Ansible projects—after all, learning is part of the process!</p>
<h3 id="project-structure">Project Structure</h3>
<p>I structured the project as follows:</p>
<ul>
<li><strong>INI File</strong>: Stores the credentials for the three switches.</li>
<li><strong>ansible.cfg</strong>: Manages the inventory file and SSH settings.</li>
<li><strong>Playbook</strong>: A YAML file that runs without additional parameters.</li>
<li><strong>Directories</strong>:
<ul>
<li><code>group_vars/</code>: Contains global variables shared across all devices.
<ul>
<li><code>all.yml</code>: Includes all VLANs that should exist, along with descriptions.</li>
</ul>
</li>
<li><code>host_vars/</code>: Contains per-device variables.
<ul>
<li>Each switch has its own YAML file defining interfaces and bridges.</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Here’s the project structure visualized:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">mikrotik/
</span></span><span class="line"><span class="cl">├── ansible.cfg          # Configuration file for project Ansible settings
</span></span><span class="line"><span class="cl">├── inventory.ini        # Inventory file with switch credentials
</span></span><span class="line"><span class="cl">├── vlan_esx.yml         # Main playbook
</span></span><span class="line"><span class="cl">├── group_vars/
</span></span><span class="line"><span class="cl">│   └── all.yml          # Global VLAN definitions and descriptions
</span></span><span class="line"><span class="cl">└── host_vars/
</span></span><span class="line"><span class="cl">    ├── 192.168.0.1.yml      # Variables for Switch 1 (interfaces, bridges)
</span></span><span class="line"><span class="cl">    ├── 192.168.0.5.yml      # Variables for Switch 2 (interfaces, bridges)
</span></span><span class="line"><span class="cl">    └── 192.168.0.7.yml      # Variables for Switch 3 (interfaces, bridges)
</span></span></code></pre></div><h3 id="advantages-of-this-structure">Advantages of This Structure</h3>
<p>One major advantage of this structure is its scalability. Adding another MikroTik switch is straightforward: I only need to create a new <code>host_var</code> file for the switch and update the <code>inventory.ini</code> file with its credentials.</p>
<p>Additionally, since the playbook runs without requiring extra parameters, it simplifies the GitOps approach I plan to implement later. This means the entire process becomes more streamlined and easily automatable through pipelines, reducing complexity and potential for errors.</p>
<h2 id="project-files">Project Files</h2>
<p>Here are the files I created as part of this project:</p>
<h3 id="ansiblecfg">ansible.cfg</h3>
<p>This file configures Ansible with the necessary inventory and SSH settings.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="line"><span class="cl"><span class="k">[defaults]</span>
</span></span><span class="line"><span class="cl"><span class="na">host_key_checking</span> <span class="o">=</span> <span class="s">False</span>
</span></span><span class="line"><span class="cl"><span class="na">transport</span> <span class="o">=</span> <span class="s">ssh</span>
</span></span><span class="line"><span class="cl"><span class="na">inventory</span> <span class="o">=</span> <span class="s">mikrotik.ini</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">[ssh_connection]</span>
</span></span><span class="line"><span class="cl"><span class="na">ssh_type</span> <span class="o">=</span> <span class="s">libssh</span>
</span></span><span class="line"><span class="cl"><span class="na">timeout</span> <span class="o">=</span> <span class="s">60</span>
</span></span></code></pre></div><h3 id="inventoryini">inventory.ini</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="line"><span class="cl"><span class="k">[mikrotik]</span>
</span></span><span class="line"><span class="cl"><span class="na">192.168.0.1 ansible_user</span><span class="o">=</span><span class="s">admin ansible_password=&#34;xxx&#34; ansible_connection=network_cli ansible_network_os=community.network.routeros</span>
</span></span><span class="line"><span class="cl"><span class="na">192.168.0.5 ansible_user</span><span class="o">=</span><span class="s">admin ansible_password=&#34;xxx&#34; ansible_connection=network_cli ansible_network_os=community.network.routeros </span>
</span></span><span class="line"><span class="cl"><span class="na">192.168.0.7 ansible_user</span><span class="o">=</span><span class="s">admin ansible_password=&#34;xxx&#34; ansible_connection=network_cli ansible_network_os=community.network.routeros</span>
</span></span></code></pre></div><h3 id="vlan_esxyml">vlan_esx.yml</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Manage VLANs with delete option</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">mikrotik</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gather_facts</span><span class="p">:</span><span class="w"> </span><span class="kc">no</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">collections</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">community.network</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tasks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Disable L3 HW Offloading</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">community.network.routeros_command</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">commands</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="s2">&#34;/interface ethernet switch set [find name=switch1] l3-hw-offloading=no&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="l">ansible_host == &#39;192.168.0.1&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">hw_offload_result</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Delete VLANs marked for deletion</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">community.network.routeros_command</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">commands</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="s2">&#34;/interface bridge vlan remove [find vlan-ids={{ item.id }}]&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">with_items</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ vlans }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="l">item.delete | bool</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Configure VLANs on the bridge</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">community.network.routeros_command</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">commands</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="s2">&#34;/interface bridge vlan remove [find vlan-ids={{ item.id }}]&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="s2">&#34;/interface bridge vlan add bridge={{ bridge }} vlan-ids={{ item.id }} tagged={{ interfaces | join(&#39;,&#39;) }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">with_items</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ vlans }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="l">not item.delete | bool</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Set description for each VLAN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">community.network.routeros_command</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">commands</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="s2">&#34;/interface bridge vlan comment [find vlan-ids={{ item.id }}] comment=\&#34;{{ item.description }}\&#34;&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">with_items</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ vlans }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="l">not item.delete | bool</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Enable L3 HW Offloading</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">community.network.routeros_command</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">commands</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="s2">&#34;/interface ethernet switch set [find name=switch1] l3-hw-offloading=yes&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="l">ansible_host == &#39;192.168.0.1&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">hw_offload_result</span><span class="w">
</span></span></span></code></pre></div><h3 id="group_varsallyml">group_vars/all.yml</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">vlans</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">4</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;vMotion&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">12</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;ESXi MGMT&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">14</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;NSXB Host Tep&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;NSXB Edge Tep&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">20</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;K3s&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">31</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;NSXB Uplink1&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">41</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;NSXB Uplink2&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">50</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;RTEP NSX Federation&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">69</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;vSAN&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;VCF VM MGMT&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;VCF MGMT&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">202</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;VCF vSAN&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">203</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;VCF vSAN&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">204</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;VCF HostTEP&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">205</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;VCF EdgeTEP&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">206</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34; &#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">207</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34; &#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">208</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34; &#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">209</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34; &#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">211</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34; &#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="m">212</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34; &#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">delete</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span></code></pre></div><h3 id="host_varsswitch1yml">host_vars/switch1.yml</h3>
<p>Each file defines the specific interfaces and bridges for a switch. Example for 192.168.0.5.yml</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">interfaces</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">10_bonding_SWA02</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">00_bonding_CoreRouter</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">01_ether1_ESX01_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">01_ether2_ESX01_2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">02_qsfpplus1-1_ESX02_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">03_qsfpplus1-2_ESX03_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">04_qsfpplus1-3_ESX04_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">05_qsfpplus1-4_ESX05_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">07_ether3_ESX07_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">07_ether4_ESX07_2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">08_ether5_ESX08_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">08_ether6_ESX08_2 </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">09_ether7_ESX09_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">09_ether8_ESX09_2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">bridge</span><span class="p">:</span><span class="w"> </span><span class="l">bridge</span><span class="w">
</span></span></span></code></pre></div><h2 id="what-does-the-playbook-do">What Does the Playbook Do?</h2>
<p>This playbook is designed to manage VLANs on MikroTik switches, including the ability to delete or configure VLANs. It uses the <code>community.network</code> collection and skips fact-gathering since it only executes specific commands on the devices.</p>
<h3 id="step-by-step-breakdown">Step-by-Step Breakdown</h3>
<ol>
<li>
<p><strong>Disable L3 Hardware Offloading</strong><br>
The playbook begins by disabling the L3 Hardware Offloading feature on the switch named <code>Tor Switch</code>. This step is necessary because MikroTik recommends turning off this feature before making VLAN configuration changes. The command is executed only if the host IP is <code>192.168.0.1</code>. The result is stored in the variable <code>hw_offload_result</code>.</p>
</li>
<li>
<p><strong>Delete VLANs Marked for Deletion</strong><br>
VLANs that are marked for deletion in the <code>vlans</code> variable (<code>delete: true</code>) are removed. The playbook iterates through the list of VLANs and executes the removal command for each VLAN marked as deleted.</p>
</li>
<li>
<p><strong>Configure VLANs</strong><br>
For VLANs that are not marked for deletion, the playbook configures them as follows:</p>
<ul>
<li>Removes any existing VLAN with the same ID to avoid conflicts.</li>
<li>Adds the VLAN to the specified bridge and assigns it to the interfaces defined as <code>tagged</code>. This ensures a clean and consistent configuration.</li>
</ul>
</li>
<li>
<p><strong>Set VLAN Descriptions</strong><br>
The playbook adds a description to each VLAN that is not marked for deletion. It uses the <code>comment</code> function in MikroTik and sets the description based on the variables provided.</p>
</li>
<li>
<p><strong>Enable L3 Hardware Offloading</strong><br>
Finally, the playbook re-enables the L3 Hardware Offloading feature on <code>ToR Switch</code>, but only if the host IP is <code>192.168.0.1</code>. The result of this step is also stored in the <code>hw_offload_result</code> variable.</p>
</li>
</ol>
<h2 id="summary">Summary</h2>
<p>This playbook automates the entire VLAN management process:</p>
<ul>
<li>Disables the L3 offloading feature when required.</li>
<li>Deletes VLANs marked for removal.</li>
<li>Configures new VLANs, ensuring no conflicts.</li>
<li>Sets descriptions for the VLANs.</li>
<li>Re-enables the L3 offloading feature after the configuration.</li>
</ul>
<p>The structure ensures reliability and consistency, handling edge cases such as existing VLANs and hardware offloading quirks automatically.</p>
<h2 id="whats-left-to-do">What&rsquo;s Left to Do</h2>
<p>There are several improvements I plan to make to this playbook in the future:</p>
<ol>
<li>
<p><strong>Clean Up Variables</strong><br>
Currently, there are some unused variables in the playbook that I need to clean up to keep the codebase tidy and maintainable.</p>
</li>
<li>
<p><strong>Enhanced Logic for VLAN Checks</strong><br>
I want to extend the logic to verify if a VLAN already matches the desired target configuration. This would prevent unnecessary deletion and re-creation of VLANs, reducing downtime and ensuring a smoother operation.</p>
</li>
<li>
<p><strong>Improved Error Handling</strong><br>
Better error handling is a priority to ensure the playbook gracefully recovers from unexpected issues, such as failed commands or unreachable devices.</p>
</li>
<li>
<p><strong>Pipeline Integration</strong><br>
The ultimate goal is to integrate the playbook into a pipeline, enabling automated execution through tools like Ansible Tower or ArgoCD. This would streamline the entire process and align it with a GitOps approach.</p>
</li>
<li>
<p><strong>Distributed Switch Integration</strong><br>
It’s also conceivable to extend the functionality by adding new VLANs directly to the distributed switch in my vSphere environment. However, this would be handled in a separate playbook to maintain modularity. The pipeline would then orchestrate both playbooks to ensure a seamless configuration process.</p>
</li>
</ol>
<p>By addressing these points, the project will become more robust, scalable, and aligned with modern automation practices.</p>
]]></content>
		</item>
		
		<item>
			<title>IPAM Automation with NetBox, Ansible, and Microsoft Windows DNS Server</title>
			<link>https://sdn-warrior.org/posts/ipam-automation/</link>
			<pubDate>Fri, 20 Dec 2024 02:00:04 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/ipam-automation/</guid>
			<description><![CDATA[IPAM Automation with Netbox and Ansible]]></description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>Managing IP addresses and DNS records manually can be a daunting task, especially in dynamic IT environments. This blog post demonstrates how to leverage NetBox, Ansible, and Microsoft Windows DNS Server to automate IP Address Management (IPAM) and DNS record updates, making your infrastructure more efficient and reliable.</p>
<h2 id="why-automate-ipam-and-dns">Why Automate IPAM and DNS?</h2>
<ul>
<li>Consistency: Automation minimizes human errors and ensures uniformity.</li>
<li>Efficiency: Automating repetitive tasks saves time and allows teams to focus on strategic activities.</li>
<li>Scalability: As networks grow, automated solutions adapt more easily than manual processes.</li>
</ul>
<h2 id="my-goal">My goal</h2>
<ul>
<li>Get a free IP address is dynamically fetched from a defined subnet in NetBox.</li>
<li>The IP address is immediately assigned to the specified FQDN in NetBox.</li>
<li>A corresponding Host A record is created in your Windows DNS Server.</li>
</ul>
<h2 id="prerequisites">Prerequisites</h2>
<p>Before diving into the implementation, ensure the following:</p>
<ul>
<li>A functional NetBox instance configured with appropriate IPAM data.</li>
<li>A Microsoft Windows DNS Server with administrative access.</li>
<li>Ansible installed and configured on a control node.</li>
<li>API access credentials for NetBox.</li>
<li>pywinrm Python module</li>
<li>PowerShell Remoting</li>
</ul>
<h2 id="ansible-project">Ansible Project</h2>
<p>For this automation project, I structured my workflow into multiple steps to keep it organized and modular. I use an ansible.cfg file to integrate and manage my inventory. At the core of the setup is a master playbook, which orchestrates the entire automation process.</p>
<p>To simplify and separate concerns, I divided the tasks into two sub-playbooks:</p>
<p>NetBox playbook: Handles all interactions with NetBox, such as fetching available IPs or updating DNS-related metadata.
DNS playbook: Focuses on managing DNS records on my Microsoft Windows DNS Server.
This approach not only makes the automation workflow easier to manage but also allows me to test and modify individual components independently while maintaining a clear overview of the entire process through the master playbook.</p>
<h2 id="getting-started">Getting Started</h2>
<p>To begin, I will list the files and their roles in this automation project. While these files are currently stored in my local Gitea instance, I’m considering creating a public Git repository for future projects to make them more accessible and easier to share.</p>
<h3 id="inventoryyml">inventory.yml</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">all</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">dnsserver.lab.home</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ansible_host</span><span class="p">:</span><span class="w"> </span><span class="l">dc.lab.home </span><span class="w"> </span><span class="c"># IP-Adresse or Hostname of Windows-DNS-Servers</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ansible_user</span><span class="p">:</span><span class="w"> </span><span class="l">administrator </span><span class="w"> </span><span class="c"># Username </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ansible_password</span><span class="p">:</span><span class="w"> </span><span class="l">xxx </span><span class="w"> </span><span class="c"># Password</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ansible_connection</span><span class="p">:</span><span class="w"> </span><span class="l">winrm </span><span class="w"> </span><span class="c"># connection</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ansible_winrm_transport</span><span class="p">:</span><span class="w"> </span><span class="l">basic </span><span class="w"> </span><span class="c"># auth</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ansible_winr_server_cert_validation</span><span class="p">:</span><span class="w"> </span><span class="l">ignore</span><span class="w"> </span><span class="c">#don&#39;t check the certificate</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ansible_port</span><span class="p">:</span><span class="w"> </span><span class="m">5986</span><span class="w"> </span><span class="c">#winrm https port</span><span class="w">
</span></span></span></code></pre></div><h3 id="ansiblecfg">ansible.cfg</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="line"><span class="cl"><span class="k">[defaults]</span>
</span></span><span class="line"><span class="cl"><span class="na">inventory</span> <span class="o">=</span> <span class="s">inventory.yml</span>
</span></span></code></pre></div><h3 id="register_ipyml">register_ip.yml</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Validate input variables</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">fail</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">msg</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;You must provide &#39;netbox_token&#39;, &#39;prefix&#39;, and &#39;dns_name&#39; as extra-vars.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="l">netbox_token == &#34;&#34; or prefix == &#34;&#34; or dns_name == &#34;&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Get the prefix ID from NetBox</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">uri</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ netbox_url }}/api/ipam/prefixes/?prefix={{ prefix }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">method</span><span class="p">:</span><span class="w"> </span><span class="l">GET</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">headers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">Authorization</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Token {{ netbox_token }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">Accept</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;application/json&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">return_content</span><span class="p">:</span><span class="w"> </span><span class="kc">yes</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">prefix_data</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Fail if the prefix does not exist</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">fail</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">msg</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Prefix {{ prefix }} does not exist in NetBox.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="l">prefix_data.json.results | length == 0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Get available IPs in the prefix</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">uri</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ netbox_url }}/api/ipam/prefixes/{{ prefix_data.json.results[0].id }}/available-ips/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">method</span><span class="p">:</span><span class="w"> </span><span class="l">GET</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">headers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">Authorization</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Token {{ netbox_token }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">Accept</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;application/json&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">return_content</span><span class="p">:</span><span class="w"> </span><span class="kc">yes</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">available_ips</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Fail if no available IPs are found</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">fail</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">msg</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;No available IPs found in prefix {{ prefix }}.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="l">available_ips.json | length == 0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Assign the first available IP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">uri</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ netbox_url }}/api/ipam/ip-addresses/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">method</span><span class="p">:</span><span class="w"> </span><span class="l">POST</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">headers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">Authorization</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Token {{ netbox_token }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">Accept</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;application/json&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">Content-Type</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;application/json&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">body</span><span class="p">:</span><span class="w"> </span><span class="p">&gt;</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      {
</span></span></span><span class="line"><span class="cl"><span class="sd">        &#34;address&#34;: &#34;{{ available_ips.json[0].address }}&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sd">        &#34;status&#34;: &#34;active&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sd">        &#34;description&#34;: &#34;Created by Ansible&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sd">        &#34;dns_name&#34;: &#34;{{ dns_name }}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">      }</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">body_format</span><span class="p">:</span><span class="w"> </span><span class="l">json</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">status_code</span><span class="p">:</span><span class="w"> </span><span class="m">201</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">return_content</span><span class="p">:</span><span class="w"> </span><span class="kc">yes</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">ip_assignment</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Extract host and zone from DNS name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">set_fact</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">dns_host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ dns_name.split(&#39;.&#39;)[0] }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">dns_zone</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ dns_name.split(&#39;.&#39;, 1)[1] }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">assigned_ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ ip_assignment.json.address.split(&#39;/&#39;)[0] }}&#34;</span><span class="w">
</span></span></span></code></pre></div><h3 id="add_dns_recordyml">add_dns_record.yml</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Add DNS A Record</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">win_shell</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">    Add-DnsServerResourceRecordA -Name &#34;{{ zdns_host }}&#34; -ZoneName &#34;{{ zdns_zone }}&#34; -IPv4Address &#34;{{ zassigned_ip }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">args</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">executable</span><span class="p">:</span><span class="w"> </span><span class="l">powershell</span><span class="w">
</span></span></span></code></pre></div><h3 id="mp_dnsyml-my-masterplaybook">mp_dns.yml (my masterplaybook)</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Register IP in NetBox</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">localhost</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gather_facts</span><span class="p">:</span><span class="w"> </span><span class="kc">no</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">vars</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ prefix }}&#34;</span><span class="w">  </span><span class="c"># variables</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">dns_name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ dns_name }}&#34;</span><span class="w">  </span><span class="c"># variables</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">netbox_url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http://netbox.lab.home&#34;</span><span class="w">  </span><span class="c">#NetBox-URL</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">netbox_token</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;xxx&#34;</span><span class="w">  </span><span class="c"># Ntebox API token</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tasks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Run NetBox IP Registration Playbook</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">include_tasks</span><span class="p">:</span><span class="w"> </span><span class="l">register_ip.yml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">vars</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">prefix</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ prefix }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">dns_name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ dns_name }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        
</span></span></span><span class="line"><span class="cl"><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Add DNS A Record</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">dnsserver.lab.home</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gather_facts</span><span class="p">:</span><span class="w"> </span><span class="kc">no</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">vars</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ansible_winrm_server_cert_validation</span><span class="p">:</span><span class="w"> </span><span class="l">ignore</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">zassigned_ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ hostvars[&#39;localhost&#39;][&#39;sip&#39;] }}&#34;</span><span class="w"> </span><span class="c"># variables</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">zdns_host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ hostvars[&#39;localhost&#39;][&#39;sdns&#39;] }}&#34;</span><span class="w">   </span><span class="c"># variables</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">zdns_zone</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ hostvars[&#39;localhost&#39;][&#39;szone&#39;] }}&#34;</span><span class="w">  </span><span class="c"># variables</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tasks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Include DNS Record Playbook</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">include_tasks</span><span class="p">:</span><span class="w"> </span><span class="l">add_dns_record.yml</span><span class="w">
</span></span></span></code></pre></div><h2 id="how-the-playbooks-work">How the Playbooks Work</h2>
<p>The process is coordinated by a master playbook (mp_dns.yml) and relies on sub-playbooks for discrete tasks.</p>
<h3 id="master-playbook-mp_dnsyml">Master Playbook (mp_dns.yml)</h3>
<p>The master playbook serves as the central control file. It performs the following steps:</p>
<p>Registers an IP Address in NetBox: This step invokes the register_ip.yml sub-playbook to allocate an available IP address within a specified prefix and associate it with the given DNS name in NetBox.</p>
<ul>
<li>
<p>Sets Facts:
After obtaining the IP address and DNS details from NetBox, it uses set_fact to store these values in variables (sip, sdns, szone) for use in the next task.</p>
</li>
<li>
<p>Adds a DNS A Record:
The second phase connects to the DNS server and calls the add_dns_record.yml sub-playbook to create a DNS A record using the information retrieved from NetBox.</p>
</li>
</ul>
<h3 id="sub-playbook-register_ipyml">Sub-Playbook: register_ip.yml</h3>
<p>This playbook interacts with NetBox&rsquo;s API to:</p>
<ul>
<li>Validate input variables like the NetBox token, prefix, and DNS name.</li>
<li>Retrieve the prefix and find available IPs.</li>
<li>Assign the first available IP to the provided DNS name and register it in NetBox.</li>
</ul>
<p>The playbook sends a POST request to the NetBox API to assign an available IP address to the provided DNS name. The response is returned in JSON format and parsed to extract the necessary variables for the DNS record creation.</p>
<p>The JSON response is parsed to extract key values:</p>
<ul>
<li>dns_host and dns_zone are derived by splitting the FQDN.</li>
<li>assigned_ip captures the raw IP address, omitting the CIDR notation.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="w">  </span><span class="nt">dns_host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ dns_name.split(&#39;.&#39;)[0] }}&#34;</span><span class="w">  </span><span class="c"># Extracts the hostname (e.g., &#34;myhost&#34; from &#34;myhost.lab.local&#34;)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">dns_zone</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ dns_name.split(&#39;.&#39;, 1)[1] }}&#34;</span><span class="w">  </span><span class="c"># Extracts the zone (e.g., &#34;lab.local&#34;)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">assigned_ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ ip_assignment.json.address.split(&#39;/&#39;)[0] }}&#34;</span><span class="w">  </span><span class="c"># Removes the subnet mask (e.g., &#34;192.168.1.10/24&#34; to &#34;192.168.1.10&#34;)</span><span class="w">
</span></span></span></code></pre></div><p>This parsing ensures the required details are extracted for creating the DNS record in subsequent tasks, linking NetBox&rsquo;s IP allocation to the DNS configuration seamlessly.</p>
<h3 id="sub-playbook-add_dns_recordyml">Sub-Playbook: add_dns_record.yml</h3>
<p>This playbook uses PowerShell (win_shell) to execute the Add-DnsServerResourceRecordA cmdlet on the Windows DNS server. It creates a DNS A record with the assigned IP, host, and zone.</p>
<h3 id="why-use-host_vars">Why Use host_vars?</h3>
<p>hostvars is a built-in Ansible variable that provides access to variables from other hosts in the inventory. This is particularly useful when you need to share or reference facts or variables gathered from one host on another host.
The NetBox-related tasks (e.g., registering IP addresses and extracting DNS details) are performed on localhost since they interact with external APIs and don’t require remote server execution.
Variables like sip, sdns, and szone are set as facts on localhost during the first phase of the playbook execution.
The <em><strong>hostvars[&rsquo;localhost&rsquo;]</strong></em> construct is used to retrieve these facts and make them available to the subsequent tasks running on the DNS server (dnsserver.lab.home).</p>
<h3 id="variable-assignments">Variable Assignments:</h3>
<ul>
<li>zassigned_ip: This retrieves the IP address (sip) assigned to the host from the NetBox interaction on localhost.</li>
<li>zdns_host: This extracts the host portion of the DNS name (sdns) derived from the FQDN split.</li>
<li>zdns_zone: This fetches the DNS zone (szone), also derived from the FQDN split.</li>
</ul>
<p>This approach ensures that:</p>
<ul>
<li>Data derived or computed in one phase (NetBox-related tasks) is seamlessly passed to the next phase (DNS-related tasks).</li>
<li>sThe DNS playbook (add_dns_record.yml) running on the DNS server has access to the correct IP, host, and zone information without redundant processing.</li>
</ul>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content"><p>One of the biggest challenges I faced in this project was understanding why I couldn’t directly use the variables returned from NetBox in the DNS-related tasks. I initially tried to pass these variables directly, but the playbook failed because the DNS tasks were executed on a different host (dnsserver.lab.home) than the one that retrieved the data (localhost).</p>
<p>The solution involved using hostvars to reference the facts set on localhost. This took the most time to figure out, as I didn’t immediately realize that variables gathered on one host are not automatically accessible on another. Once I understood how hostvars works, everything started to fall into place.</p>
</div>
    </aside>
<h2 id="ok-enough-code-and-explanations-lets-see-it-in-action">Ok, Enough Code and Explanations, Let’s See It in Action</h2>
<p>Starting the playbook:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">ansible-playbook mp_dns.yml -e &#34;prefix=192.168.2.0/24 dns_name=hello-world.lab.home&#34;
</span></span></code></pre></div>
<figure><a href="output.png"><picture>
          <source srcset="/ipam-automation/output_hu_7752d8d5f03c91dd.webp" type="image/webp">
          <source srcset="/ipam-automation/output_hu_ea47df4f16963352.jpg" type="image/jpeg">
          <img src="/ipam-automation/output_hu_7752d8d5f03c91dd.webp"alt="Ansible output"  width="1003"  height="610" />
        </picture></a><figcaption>
            <p>Ansible output (click to enlarge)</p>
          </figcaption></figure>

<figure><a href="netbox.png"><picture>
          <source srcset="/ipam-automation/netbox_hu_5a9c655f60b501f3.webp" type="image/webp">
          <source srcset="/ipam-automation/netbox_hu_f33cf96e3a093cc5.jpg" type="image/jpeg">
          <img src="/ipam-automation/netbox_hu_5a9c655f60b501f3.webp"alt="Netbox"  width="1447"  height="489" />
        </picture></a><figcaption>
            <p>Netbox (click to enlarge)</p>
          </figcaption></figure>

<figure><a href="dns.png"><picture>
          <source srcset="/ipam-automation/dns_hu_f5c8b68f5084f99d.webp" type="image/webp">
          <source srcset="/ipam-automation/dns_hu_7952122eb13af7fa.jpg" type="image/jpeg">
          <img src="/ipam-automation/dns_hu_f5c8b68f5084f99d.webp"alt="DNS"  width="404"  height="455" />
        </picture></a><figcaption>
            <p>DNS (click to enlarge)</p>
          </figcaption></figure>
<h2 id="conclusion">Conclusion</h2>
<p>This project represents just the first step toward a fully automated IPAM and DNS management workflow. While the current solution works well in my lab environment, there is plenty of room for improvement and expansion.</p>
<p>Key Takeaways:</p>
<ul>
<li>
<p>Modular Design: Starting with a modular playbook structure ensures flexibility for future enhancements and easier debugging.</p>
</li>
<li>
<p>Lab vs. Production: This setup is tailored for a lab environment. For production systems, avoid using highly privileged accounts like the local administrator on the DNS server. A more secure approach with role-based access control (RBAC) should be implemented in future iterations.</p>
</li>
<li>
<p>Continuous Improvement: I acknowledge that the playbook is not perfect. Over time, I plan to refine and optimize it, addressing any current shortcomings and making it more robust for complex workflows.</p>
</li>
</ul>
<p><em><strong>Automation is a journey</strong></em>, and I’m excited to see how this project evolves. Stay tuned for updates and new features in future versions!</p>
<h2 id="update--automatic-ptr-creation">Update:  automatic PTR creation</h2>
<p>Here’s a quick update to my blog: With the adjusted code, you can automatically create a PTR record when adding a Host A record. Note: The Reverse Lookup Zone must already exist.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Add DNS A Record</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">win_shell</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">    $ip = &#34;{{ zassigned_ip }}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">    $hostname = &#34;{{ zdns_host }}.{{ zdns_zone }}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">    $reverseZone = (&#34;{0}.{1}.{2}.in-addr.arpa&#34; -f $ip.Split(&#34;.&#34;)[2], $ip.Split(&#34;.&#34;)[1], $ip.Split(&#34;.&#34;)[0])
</span></span></span><span class="line"><span class="cl"><span class="sd">    Add-DnsServerResourceRecordA -Name &#34;{{ zdns_host }}&#34; -ZoneName &#34;{{ zdns_zone }}&#34; -IPv4Address &#34;{{ zassigned_ip }}&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">    Add-DnsServerResourceRecordPtr -ZoneName $reverseZone -Name ($ip.Split(&#34;.&#34;)[3]) -PtrDomainName &#34;$hostname.$zoneName&#34; </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">args</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">executable</span><span class="p">:</span><span class="w"> </span><span class="l">powershell</span><span class="w">
</span></span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>From Zero to Automation: How I Used ChatGPT to Create My First Ansible Playbook</title>
			<link>https://sdn-warrior.org/posts/first-steps-ansible/</link>
			<pubDate>Tue, 17 Dec 2024 22:36:18 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/first-steps-ansible/</guid>
			<description><![CDATA[How I Used ChatGPT to Create My First Ansible Playbook]]></description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>I recently decided to automate the startup and shutdown of my lab environments—both standard and nested labs. While the idea sounded simple, it quickly turned into an interesting challenge. Having never written an Ansible Playbook before, I turned to ChatGPT for help.</p>
<h2 id="why-chatgpt">Why ChatGPT?</h2>
<p>Let’s be honest: starting with Ansible can feel overwhelming, especially if you&rsquo;re new to it. My last experience with something remotely similar was years ago, working with PowerShell scripts or even earlier with .NET 3 (yes, I’m &ldquo;that old&rdquo;).</p>
<p>The task itself seemed straightforward at first:</p>
<ul>
<li>Write a playbook to power VMs on and off in a controlled manner.</li>
<li>Integrate both my standard lab and nested lab (e.g., my VCF setup with its own vCenter).</li>
</ul>
<p>However, the challenge revealed itself quickly:</p>
<ul>
<li>Controlling VMs via my main vCenter is relatively easy.</li>
<li>But what about nested labs where each nested setup has its own vCenter?</li>
</ul>
<p>This is where ChatGPT became a game changer.</p>
<h2 id="the-approach">The Approach</h2>
<h3 id="starting-from-zero">Starting from Zero</h3>
<p>I described my setup and goals to ChatGPT:</p>
<p>Automate VM startup/shutdown.
Handle dependencies like nested vCenters that control their own VMs.
ChatGPT provided a clear starting point, explaining how to structure an Ansible playbook. Step by step, it introduced me to tasks, loops, and the required VMware modules.</p>
<h3 id="iterating-through-challenges">Iterating Through Challenges</h3>
<p>The major challenge was managing nested environments:</p>
<p>Powering on the parent vCenter first.
Waiting until it’s responsive.
Then triggering the startup sequence for the nested VMs managed by that vCenter.
Through multiple iterations, ChatGPT helped refine the logic.</p>
<h3 id="not-always-smooth-sailing">Not Always Smooth Sailing</h3>
<p>To be honest, ChatGPT’s suggestions weren’t always perfect. More than once, I found myself in a dead end. I had to point out repeatedly that the same solution, presented for the third time, simply didn’t work. This is the reality of working with AI: it doesn’t replace expertise, but it certainly accelerates the process.</p>
<p>While ChatGPT couldn’t solve everything on its own, it significantly simplified finding the right solution. Instead of starting from scratch or digging through documentation for hours, I could focus on testing and refining the playbook.</p>
<h2 id="current-progress-what-i-achieved-in-two-evenings">Current Progress: What I Achieved in Two Evenings</h2>
<p>After a couple of evenings, with a few hours of experimenting and iterating with ChatGPT, I managed to create four modular Ansible playbooks. These playbooks are designed to handle two key scenarios for starting and stopping VMs:</p>
<p>Two Playbooks for Environments with vCenter</p>
<p>These playbooks are for my standard (non-nested) lab environments, where I can rely on vCenter to manage the VMs.
With vCenter in place, controlling VMs is relatively straightforward, as vCenter provides a central interface to handle power states.
Two Playbooks for Environments without vCenter</p>
<p>These playbooks handle environments where no vCenter is available, such as nested labs or standalone ESXi hosts.
In nested labs, the challenge arises because VMs and their dependencies are controlled individually, without the convenience of a central management interface.
By separating the logic into modular playbooks, I ensured flexibility and reusability across my different lab setups. Whether I’m dealing with my regular homelab VMs or complex nested environments like my VCF setup, I can now efficiently start and stop VMs with a single command.</p>
<h3 id="inventory-files-the-backbone-of-the-setup">Inventory Files: The Backbone of the Setup</h3>
<p>To make the playbooks flexible and reusable, I created inventory YAML files for each lab. Out of habit, I named them something like vcfvm_vars.yml or vcfesx_vars.yml. These files act as the variable storage for each lab environment.</p>
<p>There are two types of inventory files:</p>
<p>For Nested VMs:</p>
<p>Includes variables specific to nested lab setups, such as nested vCenter credentials, VM names, and their dependencies.
For Non-Nested VMs:</p>
<p>Stores details for standard VMs managed directly via the main vCenter.</p>
<h3 id="nested-vcf-example-controlled-boot-and-shutdown">Nested VCF Example: Controlled Boot and Shutdown</h3>
<p>In my VCF setup, which is fully nested, the playbook must follow a strict sequence:</p>
<p>Startup:</p>
<p>Start the nested ESXi hosts first.
Wait for their availability.
Then start the nested management VMs, such as NSX Manager, SDDC Manager, and vCenter.
Shutdown:</p>
<p>Stop the management VMs first.
Once the management layer is powered down, shut down the nested ESXi hosts.
This controlled sequence ensures the nested environment behaves predictably.</p>
<h3 id="inventory-file-for-esxi-hosts">Inventory File for ESXi Hosts</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl"># vcfesx_vars.yml
</span></span><span class="line"><span class="cl">vcenter_hostname: &#34;vcsa.lab.home&#34;
</span></span><span class="line"><span class="cl">vcenter_username: &#34;administrator@vsphere.local&#34;
</span></span><span class="line"><span class="cl">vcenter_password: &#34;your_pw&#34;
</span></span><span class="line"><span class="cl">vcenter_datacenter: &#34;Homelab&#34;
</span></span><span class="line"><span class="cl">validate_certs: false
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">vm_names:
</span></span><span class="line"><span class="cl">  - &#34;sfo01-m01-esx01&#34;
</span></span><span class="line"><span class="cl">  - &#34;sfo01-m01-esx02&#34;
</span></span><span class="line"><span class="cl">  - &#34;sfo01-m01-esx03&#34;
</span></span></code></pre></div><h3 id="inventory-file-for-nested-vms">Inventory File for Nested VMs</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl"># vcfvm_vars.yml
</span></span><span class="line"><span class="cl">validate_certs: false
</span></span><span class="line"><span class="cl">esxi_hosts:
</span></span><span class="line"><span class="cl">  - &#34;sfo01-m01-esx01.lab.home&#34;
</span></span><span class="line"><span class="cl">  - &#34;sfo01-m01-esx02.lab.home&#34;
</span></span><span class="line"><span class="cl">  - &#34;sfo01-m01-esx03.lab.home&#34;
</span></span><span class="line"><span class="cl">esxi_username: &#34;root&#34;
</span></span><span class="line"><span class="cl">esxi_password: &#34;your_pw&#34;
</span></span><span class="line"><span class="cl">esxi_datacenter: &#34;sfo-m01-dc01&#34;
</span></span><span class="line"><span class="cl">vm_names:
</span></span><span class="line"><span class="cl">  - &#34;vcfvcsa&#34;
</span></span><span class="line"><span class="cl">  - &#34;vcfnsx01a&#34;
</span></span><span class="line"><span class="cl">  - &#34;vcf01&#34;
</span></span></code></pre></div><h3 id="power-on-playbook-for-non-nested-vms">Power-On Playbook for Non-Nested VMs</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">- name: Start specific VMs in vCenter
</span></span><span class="line"><span class="cl">  hosts: localhost
</span></span><span class="line"><span class="cl">  gather_facts: no
</span></span><span class="line"><span class="cl">  collections:
</span></span><span class="line"><span class="cl">    - community.vmware
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  tasks:
</span></span><span class="line"><span class="cl">    - name: Load variables from file
</span></span><span class="line"><span class="cl">      include_vars: &#34;{{ vars_file }}&#34;
</span></span><span class="line"><span class="cl">    - name: Connect to vCenter and start VMs
</span></span><span class="line"><span class="cl">      community.vmware.vmware_guest_powerstate:
</span></span><span class="line"><span class="cl">        hostname: &#34;{{ vcenter_hostname }}&#34;
</span></span><span class="line"><span class="cl">        username: &#34;{{ vcenter_username }}&#34;
</span></span><span class="line"><span class="cl">        password: &#34;{{ vcenter_password }}&#34;
</span></span><span class="line"><span class="cl">        validate_certs: &#34;{{ validate_certs }}&#34;
</span></span><span class="line"><span class="cl">        name: &#34;{{ item }}&#34;
</span></span><span class="line"><span class="cl">        state: powered-on
</span></span><span class="line"><span class="cl">      loop: &#34;{{ vm_names }}&#34;
</span></span><span class="line"><span class="cl">      register: power_state_result
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    - name: Display power state result
</span></span><span class="line"><span class="cl">      debug:
</span></span><span class="line"><span class="cl">        msg: &#34;VM {{ item.item }} wurde erfolgreich gestartet.&#34;
</span></span><span class="line"><span class="cl">      when: item.instance.hw_power_status == &#34;poweredOn&#34;
</span></span><span class="line"><span class="cl">      loop: &#34;{{ power_state_result.results }}&#34;
</span></span><span class="line"><span class="cl">      loop_control:
</span></span><span class="line"><span class="cl">        label: &#34;{{ item.item }}&#34;
</span></span></code></pre></div><ol>
<li>
<p><em><strong>include_vars:</strong></em> Loads a variable file, such as vcfvm_vars.yml, which makes the playbook modular and reusable.</p>
</li>
<li>
<p><em><strong>community.vmware.vmware_guest_powerstate:</strong></em> Uses the <em><strong>vmware_guest_powerstate</strong></em> module to control the power state of VMs in a vCenter-managed environment.</p>
</li>
<li>
<p><em><strong>The state:</strong></em> powered-on option ensures VMs are powered on.</p>
</li>
<li>
<p><em><strong>register: power_state_result:</strong></em> Captures the result of the task execution for each VM, including its power state.</p>
</li>
<li>
<p><em><strong>debug with when:</strong></em> Checks the power state of each VM and displays a success message if the VM was successfully powered on.</p>
</li>
</ol>
<h3 id="power-on-playbook-for-nested-vms-on-multiple-esxi-hosts">Power-On Playbook for Nested VMs on Multiple ESXi Hosts</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">- name: Power on multiple VMs on multiple ESXi hosts
</span></span><span class="line"><span class="cl">  hosts: localhost
</span></span><span class="line"><span class="cl">  gather_facts: no
</span></span><span class="line"><span class="cl">  collections:
</span></span><span class="line"><span class="cl">    - community.vmware
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  tasks:
</span></span><span class="line"><span class="cl">    - name: Load variables from file
</span></span><span class="line"><span class="cl">      include_vars: &#34;{{ vars_file }}&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    - name: Get VM power status for each VM on each ESXi host
</span></span><span class="line"><span class="cl">      community.vmware.vmware_guest_info:
</span></span><span class="line"><span class="cl">        hostname: &#34;{{ item.0 }}&#34;
</span></span><span class="line"><span class="cl">        username: &#34;{{ esxi_username }}&#34;
</span></span><span class="line"><span class="cl">        password: &#34;{{ esxi_password }}&#34;
</span></span><span class="line"><span class="cl">        datacenter: &#34;{{ esxi_datacenter }}&#34;
</span></span><span class="line"><span class="cl">        validate_certs: &#34;{{ validate_certs }}&#34;
</span></span><span class="line"><span class="cl">        name: &#34;{{ item.1 }}&#34;
</span></span><span class="line"><span class="cl">      with_nested:
</span></span><span class="line"><span class="cl">        - &#34;{{ esxi_hosts }}&#34;
</span></span><span class="line"><span class="cl">        - &#34;{{ vm_names }}&#34;
</span></span><span class="line"><span class="cl">      register: vm_info_results
</span></span><span class="line"><span class="cl">      ignore_errors: true
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    - name: Filter VMs that are poweredOff
</span></span><span class="line"><span class="cl">      set_fact:
</span></span><span class="line"><span class="cl">        powered_off_vms: &#34;{{ vm_info_results.results | selectattr(&#39;failed&#39;, &#39;equalto&#39;, false)
</span></span><span class="line"><span class="cl">                           | selectattr(&#39;instance.hw_power_status&#39;, &#39;equalto&#39;, &#39;poweredOff&#39;) }}&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    - name: Power on VMs if they are poweredOff
</span></span><span class="line"><span class="cl">      community.vmware.vmware_guest_powerstate:
</span></span><span class="line"><span class="cl">        hostname: &#34;{{ item.item.0 }}&#34;
</span></span><span class="line"><span class="cl">        username: &#34;{{ esxi_username }}&#34;
</span></span><span class="line"><span class="cl">        password: &#34;{{ esxi_password }}&#34;
</span></span><span class="line"><span class="cl">        datacenter: &#34;{{ esxi_datacenter }}&#34;
</span></span><span class="line"><span class="cl">        validate_certs: &#34;{{ validate_certs }}&#34;
</span></span><span class="line"><span class="cl">        name: &#34;{{ item.item.1 }}&#34;
</span></span><span class="line"><span class="cl">        state: powered-on
</span></span><span class="line"><span class="cl">      loop: &#34;{{ powered_off_vms }}&#34;
</span></span><span class="line"><span class="cl">      loop_control:
</span></span><span class="line"><span class="cl">        label: &#34;Host: {{ item.item.0 }} | VM: {{ item.item.1 }}&#34;
</span></span><span class="line"><span class="cl">      register: poweron_results
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    - name: Wait for VMs to be powered on
</span></span><span class="line"><span class="cl">      community.vmware.vmware_guest_info:
</span></span><span class="line"><span class="cl">        hostname: &#34;{{ item.item.item.0 }}&#34;
</span></span><span class="line"><span class="cl">        username: &#34;{{ esxi_username }}&#34;
</span></span><span class="line"><span class="cl">        password: &#34;{{ esxi_password }}&#34;
</span></span><span class="line"><span class="cl">        datacenter: &#34;{{ esxi_datacenter }}&#34;
</span></span><span class="line"><span class="cl">        validate_certs: &#34;{{ validate_certs }}&#34;
</span></span><span class="line"><span class="cl">        name: &#34;{{ item.item.item.1 }}&#34;
</span></span><span class="line"><span class="cl">      loop: &#34;{{ poweron_results.results }}&#34;
</span></span><span class="line"><span class="cl">      loop_control:
</span></span><span class="line"><span class="cl">        label: &#34;Host: {{ item.item.item.0 }} | VM: {{ item.item.item.1 }}&#34;
</span></span><span class="line"><span class="cl">      register: vm_status
</span></span><span class="line"><span class="cl">      until: vm_status.instance.hw_power_status == &#34;poweredOn&#34;
</span></span><span class="line"><span class="cl">      retries: 20
</span></span><span class="line"><span class="cl">      delay: 15
</span></span><span class="line"><span class="cl">      when: item.failed == false
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    - name: Display power on result
</span></span><span class="line"><span class="cl">      debug:
</span></span><span class="line"><span class="cl">        msg: &#34;VM {{ item.item.item.1 }} on Host {{ item.item.item.0 }} has been successfully powered on.&#34;
</span></span><span class="line"><span class="cl">      loop: &#34;{{ poweron_results.results }}&#34;
</span></span><span class="line"><span class="cl">      loop_control:
</span></span><span class="line"><span class="cl">        label: &#34;Host: {{ item.item.item.0 }} | VM: {{ item.item.item.1 }}&#34;
</span></span></code></pre></div><ol>
<li>
<p><em><strong>vmware_guest_info</strong></em> Retrieves the power state of each VM on each ESXi host.</p>
</li>
<li>
<p><em><strong>set_fact</strong></em> Filters out only those VMs that are powered off.</p>
</li>
<li>
<p><em><strong>vmware_guest_powerstate</strong></em> Powers on each VM that is in a &ldquo;poweredOff&rdquo; state.</p>
</li>
<li>
<p><em><strong>wait_for with retries</strong></em> Ensures that the VMs are fully powered on before proceeding.</p>
</li>
<li>
<p><em><strong>debug</strong></em> Displays a confirmation message for each successfully powered-on VM.</p>
</li>
</ol>
<h3 id="master-playbook">Master Playbook</h3>
<p>to orchestrate the two Power-On playbooks in the correct order. I kept your current 60-second pause timer as a placeholder for checking ESXi server readiness but structured everything neatly for clarity. A 60-second pause ensures that the ESXi hosts have enough time to initialize. Why a Pause? Without an active feedback mechanism to confirm the ESXi servers are ready, this static wait acts as a temporary workaround and will replaced later.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">- name: Power on Nested ESXi Hosts
</span></span><span class="line"><span class="cl">  import_playbook: poweron_vcsa.yml
</span></span><span class="line"><span class="cl">  vars:
</span></span><span class="line"><span class="cl">    vars_file: &#34;vcfesx_vars.yml&#34;
</span></span><span class="line"><span class="cl">  # Executes the playbook to power on the nested ESXi hosts.
</span></span><span class="line"><span class="cl">  # Variables specific to ESXi servers are loaded from &#34;vcfesx_vars.yml&#34;.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">- name: Wait for 60 seconds before powering on nested VMs
</span></span><span class="line"><span class="cl">  hosts: localhost
</span></span><span class="line"><span class="cl">  gather_facts: no
</span></span><span class="line"><span class="cl">  tasks:
</span></span><span class="line"><span class="cl">    - name: Pause for 60 seconds
</span></span><span class="line"><span class="cl">      pause:
</span></span><span class="line"><span class="cl">        seconds: 60
</span></span><span class="line"><span class="cl">      # A static wait time to ensure ESXi hosts are ready.
</span></span><span class="line"><span class="cl">      # This will be improved in the future with dynamic checks.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">- name: Power on Nested Management VMs
</span></span><span class="line"><span class="cl">  import_playbook: poweron_esx.yml
</span></span><span class="line"><span class="cl">  vars:
</span></span><span class="line"><span class="cl">    vars_file: &#34;vcfvm_vars.yml&#34;
</span></span><span class="line"><span class="cl">  # Executes the playbook to power on nested VMs like NSX Manager, SDDC Manager, and vCenter.
</span></span><span class="line"><span class="cl">  # Variables specific to management VMs are loaded from &#34;vcfvm_vars.yml&#34;.
</span></span></code></pre></div><h3 id="starting-the-vms-via-the-ansible-master-playbook">Starting the VMs via the Ansible Master Playbook</h3>
<p>Starting my VCF nested lab has never been easier. With the Ansible Master Playbook, it’s as simple as running a single command on my Ansible server:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">ansible-playbook mp_poweron_vcf.yml
</span></span></code></pre></div><p>Within approximately 5-10 minutes (depending on the overall load on my lab), the entire VCF environment is up and ready to use—without any further manual intervention.</p>
<p>The beauty of this setup lies in its flexibility:</p>
<p>New labs can be easily added by simply creating a new inventory file and a customized master playbook.
The core logic remains untouched, making it a scalable and modular solution for automating additional environments.
This approach not only saves time but also ensures consistency when starting up complex nested labs like my VCF setup.</p>

<figure><a href="ansible.png"><picture>
          <source srcset="/first-steps-ansible/ansible_hu_78fe14230757b772.webp" type="image/webp">
          <source srcset="/first-steps-ansible/ansible_hu_16a87a118d679d12.jpg" type="image/jpeg">
          <img src="/first-steps-ansible/ansible_hu_78fe14230757b772.webp"alt="Ansible Log"  width="1718"  height="1056" />
        </picture></a><figcaption>
            <p>Ansible Output (click to enlarge)</p>
          </figcaption></figure>
<p>The log output of my Ansible playbook contains failed messages during the task: Get VM power status for each VM on each ESXi host
These failures occur because each ESXi host is queried for specific VMs (like vcf01) that may not exist on that particular host. This is both normal and expected behavior.</p>
<p>Why?
Due to DRS (Distributed Resource Scheduler), I can never be certain which nested ESXi host a particular VM was last running on. By iterating through all ESXi hosts, the playbook ensures that the power status of every VM is eventually retrieved, regardless of where it was previously located.</p>
<h3 id="shutdown-playbook-graceful-power-off-of-vms">Shutdown Playbook: Graceful Power-Off of VMs</h3>
<p>The shutdown process follows the same principles as the power-on playbook but in reverse order. Instead of starting VMs, it ensures a graceful shutdown while verifying their power state. I won&rsquo;t describe every task in detail, but here’s a quick overview:</p>
<p>Logic Similar to Power-On:</p>
<ul>
<li>VMs are iterated across multiple ESXi hosts.</li>
<li>Only VMs that are currently powered on are gracefully shut down.</li>
</ul>
<p>Graceful Shutdown with Validation:</p>
<ul>
<li>VMs are shut down using shutdown-guest to trigger the guest OS shutdown process.</li>
<li>A retry loop with retries: 20 and delay: 15 ensures that the playbook actively checks until the VMs reach the poweredOff state.</li>
</ul>
<p>Harmless Errors Handled:</p>
<ul>
<li>As with the power-on playbook, the ignore_errors: true directive handles expected failures gracefully (e.g., querying for VMs on ESXi hosts where they are not located).</li>
</ul>
<h3 id="shutdown-nested-vms">Shutdown Nested VMs</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">- name: Graceful shutdown of multiple VMs on multiple ESXi hosts
</span></span><span class="line"><span class="cl">  hosts: localhost
</span></span><span class="line"><span class="cl">  gather_facts: no
</span></span><span class="line"><span class="cl">  collections:
</span></span><span class="line"><span class="cl">    - community.vmware
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  tasks:
</span></span><span class="line"><span class="cl">    - name: Load variables from file
</span></span><span class="line"><span class="cl">      include_vars: &#34;{{ vars_file }}&#34;
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">    - name: Get VM power status for each VM on each ESXi host
</span></span><span class="line"><span class="cl">      community.vmware.vmware_guest_info:
</span></span><span class="line"><span class="cl">        hostname: &#34;{{ item.0 }}&#34;
</span></span><span class="line"><span class="cl">        username: &#34;{{ esxi_username }}&#34;
</span></span><span class="line"><span class="cl">        password: &#34;{{ esxi_password }}&#34;
</span></span><span class="line"><span class="cl">        datacenter: &#34;{{ esxi_datacenter }}&#34;
</span></span><span class="line"><span class="cl">        validate_certs: &#34;{{ validate_certs }}&#34;
</span></span><span class="line"><span class="cl">        name: &#34;{{ item.1 }}&#34;
</span></span><span class="line"><span class="cl">      with_nested:
</span></span><span class="line"><span class="cl">        - &#34;{{ esxi_hosts }}&#34;
</span></span><span class="line"><span class="cl">        - &#34;{{ vm_names }}&#34;
</span></span><span class="line"><span class="cl">      register: vm_info_results
</span></span><span class="line"><span class="cl">      ignore_errors: true
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    - name: Filter VMs that are poweredOn
</span></span><span class="line"><span class="cl">      set_fact:
</span></span><span class="line"><span class="cl">        powered_on_vms: &#34;{{ vm_info_results.results | selectattr(&#39;failed&#39;, &#39;equalto&#39;, false)
</span></span><span class="line"><span class="cl">                           | selectattr(&#39;instance.hw_power_status&#39;, &#39;equalto&#39;, &#39;poweredOn&#39;) }}&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    - name: Shut down VMs if they are poweredOn
</span></span><span class="line"><span class="cl">      community.vmware.vmware_guest_powerstate:
</span></span><span class="line"><span class="cl">        hostname: &#34;{{ item.item.0 }}&#34;
</span></span><span class="line"><span class="cl">        username: &#34;{{ esxi_username }}&#34;
</span></span><span class="line"><span class="cl">        password: &#34;{{ esxi_password }}&#34;
</span></span><span class="line"><span class="cl">        datacenter: &#34;{{ esxi_datacenter }}&#34;
</span></span><span class="line"><span class="cl">        validate_certs: &#34;{{ validate_certs }}&#34;
</span></span><span class="line"><span class="cl">        name: &#34;{{ item.item.1 }}&#34;
</span></span><span class="line"><span class="cl">        state: shutdown-guest
</span></span><span class="line"><span class="cl">        force: false
</span></span><span class="line"><span class="cl">      loop: &#34;{{ powered_on_vms }}&#34;
</span></span><span class="line"><span class="cl">      loop_control:
</span></span><span class="line"><span class="cl">        label: &#34;Host: {{ item.item.0 }} | VM: {{ item.item.1 }}&#34;
</span></span><span class="line"><span class="cl">      register: shutdown_results
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    - name: Wait for VMs to be powered off
</span></span><span class="line"><span class="cl">      community.vmware.vmware_guest_info:
</span></span><span class="line"><span class="cl">        hostname: &#34;{{ item.item.item.0 }}&#34;
</span></span><span class="line"><span class="cl">        username: &#34;{{ esxi_username }}&#34;
</span></span><span class="line"><span class="cl">        password: &#34;{{ esxi_password }}&#34;
</span></span><span class="line"><span class="cl">        datacenter: &#34;{{ esxi_datacenter }}&#34;
</span></span><span class="line"><span class="cl">        validate_certs: &#34;{{ validate_certs }}&#34;
</span></span><span class="line"><span class="cl">        name: &#34;{{ item.item.item.1 }}&#34;
</span></span><span class="line"><span class="cl">      loop: &#34;{{ shutdown_results.results }}&#34;
</span></span><span class="line"><span class="cl">      loop_control:
</span></span><span class="line"><span class="cl">        label: &#34;Host: {{ item.item.item.0 }} | VM: {{ item.item.item.1 }}&#34;
</span></span><span class="line"><span class="cl">      register: vm_status
</span></span><span class="line"><span class="cl">      until: vm_status.instance.hw_power_status == &#34;poweredOff&#34;
</span></span><span class="line"><span class="cl">      retries: 20
</span></span><span class="line"><span class="cl">      delay: 15
</span></span><span class="line"><span class="cl">      when: item.failed == false
</span></span></code></pre></div><h3 id="shutdown-playbook-for-virtual-esxi-servers-using-vcenter">Shutdown Playbook for Virtual ESXi Servers Using vCenter</h3>
<p>This playbook is very similar to the nested VM shutdown playbook, but since I can rely on the vCenter, I don’t need to iterate through all ESXi servers. This simplifies the process and improves efficiency.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">- name: Graceful shutdown of specific VMs if powered on
</span></span><span class="line"><span class="cl">  hosts: localhost
</span></span><span class="line"><span class="cl">  gather_facts: no
</span></span><span class="line"><span class="cl">  collections:
</span></span><span class="line"><span class="cl">    - community.vmware
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  tasks:
</span></span><span class="line"><span class="cl">    - name: Load variables from file
</span></span><span class="line"><span class="cl">      include_vars: &#34;{{ vars_file }}&#34;
</span></span><span class="line"><span class="cl">    - name: Get VM information
</span></span><span class="line"><span class="cl">      community.vmware.vmware_guest_info:
</span></span><span class="line"><span class="cl">        hostname: &#34;{{ vcenter_hostname }}&#34;
</span></span><span class="line"><span class="cl">        username: &#34;{{ vcenter_username }}&#34;
</span></span><span class="line"><span class="cl">        password: &#34;{{ vcenter_password }}&#34;
</span></span><span class="line"><span class="cl">        datacenter: &#34;{{ vcenter_datacenter }}&#34;
</span></span><span class="line"><span class="cl">        validate_certs: &#34;{{ validate_certs }}&#34;
</span></span><span class="line"><span class="cl">        name: &#34;{{ item }}&#34;
</span></span><span class="line"><span class="cl">      loop: &#34;{{ vm_names }}&#34;
</span></span><span class="line"><span class="cl">      register: vm_info_results
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    - name: Shut down VMs gracefully if powered on
</span></span><span class="line"><span class="cl">      community.vmware.vmware_guest_powerstate:
</span></span><span class="line"><span class="cl">        hostname: &#34;{{ vcenter_hostname }}&#34;
</span></span><span class="line"><span class="cl">        username: &#34;{{ vcenter_username }}&#34;
</span></span><span class="line"><span class="cl">        password: &#34;{{ vcenter_password }}&#34;
</span></span><span class="line"><span class="cl">        validate_certs: &#34;{{ validate_certs }}&#34;
</span></span><span class="line"><span class="cl">        name: &#34;{{ item.item }}&#34;
</span></span><span class="line"><span class="cl">        state: shutdown-guest
</span></span><span class="line"><span class="cl">        force: false
</span></span><span class="line"><span class="cl">      when: item.instance.hw_power_status == &#34;poweredOn&#34;
</span></span><span class="line"><span class="cl">      loop: &#34;{{ vm_info_results.results }}&#34;
</span></span><span class="line"><span class="cl">      register: shutdown_results
</span></span><span class="line"><span class="cl">      loop_control:
</span></span><span class="line"><span class="cl">        label: &#34;{{ item.item }}&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    - name: Wait for VMs to be powered off
</span></span><span class="line"><span class="cl">      community.vmware.vmware_guest_info:
</span></span><span class="line"><span class="cl">        hostname: &#34;{{ vcenter_hostname }}&#34;
</span></span><span class="line"><span class="cl">        username: &#34;{{ vcenter_username }}&#34;
</span></span><span class="line"><span class="cl">        password: &#34;{{ vcenter_password }}&#34;
</span></span><span class="line"><span class="cl">        datacenter: &#34;{{ vcenter_datacenter }}&#34;
</span></span><span class="line"><span class="cl">        validate_certs: &#34;{{ validate_certs }}&#34;
</span></span><span class="line"><span class="cl">        name: &#34;{{ item.item }}&#34;
</span></span><span class="line"><span class="cl">      register: vm_status
</span></span><span class="line"><span class="cl">      until: vm_status.instance.hw_power_status == &#34;poweredOff&#34;
</span></span><span class="line"><span class="cl">      retries: 20
</span></span><span class="line"><span class="cl">      delay: 15
</span></span><span class="line"><span class="cl">      loop: &#34;{{ vm_info_results.results }}&#34;
</span></span><span class="line"><span class="cl">      when: item.instance.hw_power_status == &#34;poweredOn&#34;
</span></span><span class="line"><span class="cl">      loop_control:
</span></span><span class="line"><span class="cl">        label: &#34;{{ item.item }}&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    - name: Display shutdown result
</span></span><span class="line"><span class="cl">      debug:
</span></span><span class="line"><span class="cl">        msg: &#34;VM {{ item.item }} ist erfolgreich heruntergefahren oder war bereits ausgeschaltet.&#34;
</span></span><span class="line"><span class="cl">      loop: &#34;{{ vm_info_results.results }}&#34;
</span></span><span class="line"><span class="cl">      loop_control:
</span></span><span class="line"><span class="cl">        label: &#34;{{ item.item }}&#34;
</span></span></code></pre></div><p>Use of vCenter:</p>
<ul>
<li>
<p>The playbook uses vCenter directly to manage the shutdown process, which avoids manually iterating through all ESXi hosts.
Graceful Shutdown:</p>
</li>
<li>
<p>The shutdown-guest option triggers a clean shutdown of the guest operating system running on the virtual ESXi servers.
Dynamic Verification:</p>
</li>
<li>
<p>The playbook dynamically filters the powered-on ESXi VMs and waits until their power state is confirmed as poweredOff.
Efficiency:</p>
</li>
<li>
<p>By leveraging vCenter and a loop with retries, the process is both clean and efficient.</p>
</li>
</ul>
<h3 id="master-shutdown-playbook">Master Shutdown Playbook</h3>
<p>To orchestrate the shutdown of the nested VCF lab and its virtual ESXi servers, we’ll create a master playbook similar to the Power-On master playbook. The inventory files remain the same as those used for the Power-On process, ensuring consistency and avoiding duplication.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">- name: Poweroff Nested VMs   
</span></span><span class="line"><span class="cl">  import_playbook: shutdown_esx.yml
</span></span><span class="line"><span class="cl">  vars:
</span></span><span class="line"><span class="cl">    vars_file: &#34;vcfvm_vars.yml&#34;
</span></span><span class="line"><span class="cl">- name: Poweroff Nested ESXi
</span></span><span class="line"><span class="cl">  import_playbook: shutdown_vcsa.yml
</span></span><span class="line"><span class="cl">  vars:
</span></span><span class="line"><span class="cl">    vars_file: &#34;vcfesx_vars.yml&#34;
</span></span></code></pre></div><p>Unlike the Power-On master playbook, the shutdown process does not require a pause or workaround. This is because during the shutdown, we can actively check if the respective VMs have already powered off using a loop. This makes the process cleaner and more efficient.</p>

    <aside class="admonition attention">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" class="feather feather-link" width="24" height="24" viewBox="0 0 24 24"
      fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
   </svg></div><b>Attention</b>
        </div>
        <div class="admonition-content"><p>The playbooks presented in this article were generated with the help of AI and subsequently adjusted to work in my specific environment. While they function as intended for my use case, I strongly recommend exercising caution and thoroughly testing these playbooks in your own environment before implementing or relying on them.</p>
<p>Automation can be powerful, but every infrastructure is unique—always test in a controlled setting first!</p>
</div>
    </aside>
<h2 id="conclusion-is-chatgpt-useful-for-ansible">Conclusion: Is ChatGPT Useful for Ansible?</h2>
<p>From my perspective, the answer is both yes and no.</p>
<p>ChatGPT gave me a solid starting point and explained a lot of the foundational concepts, which was extremely helpful as a beginner with Ansible. However, it wasn’t perfect—there were several significant errors in the generated playbooks, and more than once, the AI proposed the same incorrect solution repeatedly.</p>
<p>Despite these challenges, I still found the process enjoyable. With some manual corrections and adjustments, I was able to create playbooks that worked for my specific environment. Within just a few hours, I achieved a usable result—something that would have taken considerably longer without ChatGPT&rsquo;s assistance.</p>
<p>Ultimately, while ChatGPT cannot replace expertise or thorough testing, it’s a powerful tool to accelerate development and simplify learning, especially when working with automation tools like Ansible.</p>
]]></content>
		</item>
		
		<item>
			<title>Homelab V5</title>
			<link>https://sdn-warrior.org/posts/homelab-v5/</link>
			<pubDate>Sat, 14 Dec 2024 02:00:26 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/homelab-v5/</guid>
			<description><![CDATA[My Homelab Journey: From Unraid Beginnings to Version 5]]></description>
			<content type="html"><![CDATA[<h2 id="my-homelab-journey-from-unraid-beginnings-to-version-5">My Homelab Journey: From Unraid Beginnings to Version 5</h2>
<p>Building and optimizing a homelab has always been a passion of mine. Since its inception, my homelab has gone through several iterations, constantly evolving to meet my goals of achieving maximum performance while minimizing power consumption, noise, and physical space requirements. Here is a snapshot of my journey, culminating in the current Version 5 of my homelab.</p>
<h2 id="the-beginning-unraid-with-custom-hardware">The Beginning: Unraid with Custom Hardware</h2>
<p>My homelab journey began with a custom-built Unraid server featuring an Intel i3 11th Generation processor and 64 GB of RAM. This setup acted as an all-in-one solution for storage, virtualization, and container workloads. I even conducted simple nested vSphere tests on this server during its early days. Today, the server is still in use as a storage and Docker host, although I have replaced the underlying hardware four times to keep up with evolving requirements.</p>

<figure><picture>
          <source srcset="/labv5/unraid_hu_3b56dc1d373b61c2.webp" type="image/webp">
          <source srcset="/labv5/unraid_hu_2163339cfc68cf4b.jpeg" type="image/jpeg">
          <img src="/labv5/unraid_hu_3b56dc1d373b61c2.webp"alt="Homelab v1"  width="960"  height="1280" />
        </picture><figcaption>
            <p>My first Homelab</p>
          </figcaption></figure>
<p>The rack that I used from Version 1 through Version 4 of my homelab housed only 2 switches, a Pi3 and an old HP Elitedesk Client in V1, but it had to be replaced to accommodate the changes in Version 5.</p>
<h2 id="evolution-to-version-5">Evolution to Version 5</h2>
<p>Over the years, I continuously refined and upgraded the homelab. With my role at Evoila GmbH, my expectations for both myself and my homelab grew significantly. It quickly became clear that I needed different hardware to meet these new demands, especially as I aimed to conduct more extensive labs with NSX.</p>
<p>To start, I added a simple 3-node NUC cluster using 11th Generation Intel i5 processors. Additionally, I replaced the switches in my setup with multiple multispeed switches from Zyxel and QNAP. At the time, there were limited options on the market for 2.5 Gbps switches with management capabilities, resulting in a somewhat heterogeneous configuration.</p>
<p>Each iteration brought new hardware, better software configurations, and more ambitious goals. Over time, more technologies found their way into my lab, including a Fortinet FortiGate F40, BGP routing, and 10G switches. These advancements eventually culminated in Version 4 of my lab. However, as the lab grew, the rack ran out of space for further development, prompting the need for a complete rebuild, which led to the creation of Version 5. Now, in its fifth version, the lab has transformed into a powerful and efficient setup comprising.</p>
<h2 id="my-lab-philosophy">My Lab Philosophy</h2>
<p>My primary goal has always been to achieve the best possible performance with minimal power consumption, noise, and space requirements. To this end, I have standardized my homelab on Intel’s 13th Generation CPUs, which strike a great balance between power efficiency and computational capability.</p>
<h2 id="lab-overview">Lab Overview</h2>
<p>In Lab Version 5, I have three clusters:</p>
<h3 id="management-cluster">Management Cluster:</h3>
<p>This cluster is powered by an Intel NUC i3 13th Generation, which serves as the always-on management node. The ESXi server in this cluster hosts several key VMs:</p>
<ul>
<li>A Windows 11 VM with tools like Hugo, Go, and GitHub for managing this blog.</li>
<li>LogInsight and FortiAnalyzer.</li>
<li>A vCenter server.</li>
<li>An mDNS Repeater for Smart Home integration.</li>
<li>Homebridge for managing smart devices.</li>
<li>NetBox for network documentation.</li>
<li>A Veeam server for backups.</li>
</ul>
<p>Additionally, two VMs on my Unraid server contribute to the management cluster:</p>
<ul>
<li>A Root CA.</li>
<li>A Domain Controller, which primarily supports the labs.</li>
</ul>
<p>The Unraid server also runs several containers, including:</p>
<ul>
<li>DNS servers.</li>
<li>An Excalidraw instance.</li>
<li>Various other tools.</li>
</ul>
<p>For redundancy, I run a backup DNS server on a Raspberry Pi 3 to ensure DNS functionality during storage maintenance. I use AdGuard Home as my primary DNS server, which blocks ads and forwards DNS queries to my lab.home domain managed by the Active Directory server.</p>
<h3 id="compute-cluster">Compute Cluster:</h3>
<p>My compute cluster consists of three Intel NUCs of the 13th Generation, each equipped with 64 GB of RAM and a 2TB NVMe drive. Due to the P/E core architecture, these NUCs do not support Hyperthreading but offer 12 cores (4P + 8E). Based on my experience, the performance with E cores enabled is better than using 4 P cores with Hyperthreading. Each NUC features dual 2.5G network interfaces and is connected to my iSCSI storage. This cluster runs standard nested labs, such as my NSX lab and AVI load balancer labs. The performance is sufficient for many labs, making it a reliable and frequently used part of my setup.</p>
<p>The Compute Cluster in Lab Version 5 has the following total resources:</p>
<ul>
<li>192 GB RAM across 3 NUCs</li>
<li>6 TB NVMe storage (2 TB per NUC)</li>
<li>8 TB shared storage</li>
<li>36 CPU cores (12 cores per NUC)</li>
</ul>
<h3 id="performance-cluster">Performance Cluster:</h3>
<p>My performance cluster consists of four MinisForum MS-01 units, each featuring an Intel i9 processor with 14 cores (6P + 8E), 64 GB of physical RAM, and a 400% memory tiering configuration. Each MS-01 includes 2 TB of local NVMe storage and an additional 1 TB PCIe4 NVMe drive for memory tiering. With onboard dual 10GbE networking, the MS-01 units are ideal for demanding labs, such as a complete VCF deployment including an HCX proof of concept where I live-migrated VMs between my NSX lab and the VCF lab. The MS-01 units are also used for vSAN labs. Additionally, Intel vPro support allows for efficient remote management. This cluster provides:</p>
<ul>
<li>56 CPU cores (14 cores per MS-01).</li>
<li>1280 GB of RAM (64 GB physical per unit with memory tiering).</li>
<li>8 TB of local NVMe storage (2 TB per unit).</li>
<li>4 TB of NVMe storage for memory tiering (1 TB per unit).</li>
<li>8 TB shared Storage</li>
</ul>
<h3 id="network">Network</h3>
<p>My network consists of multiple MikroTik switches. The centerpiece is my ToR (Top of Rack) switch, the MikroTik CRS309, which can route at line speed thanks to hardware offloading. This switch hosts all lab-relevant gateways and networks, ensuring they don&rsquo;t need to be routed through my Fortinet FortiGate F40. The servers themselves are connected to two access switches: the NUCs via dual 2.5Gbps connections, and the MS-01 units via 10Gbps connections per switch.
I also have a service router (RB5009) that establishes a VPN tunnel to a fellow homelabber. Through this connection, I can utilize his Kubernetes resources, and we&rsquo;ve even tested the NSX Application Platform (NAPP) together. <a href="https://marschall.systems/">Visit marschall.systems</a></p>

<figure><a href="plan.png"><picture>
          <source srcset="/labv5/plan_hu_a7586a40ccd6bc0f.webp" type="image/webp">
          <source srcset="/labv5/plan_hu_287211eb00b9e711.jpg" type="image/jpeg">
          <img src="/labv5/plan_hu_a7586a40ccd6bc0f.webp"alt="Network setup"  width="6206"  height="3968" />
        </picture></a><figcaption>
            <p>Network setup (click to enlarge)</p>
          </figcaption></figure>
<p>My network employs dynamic routing, with eBGP as the primary protocol peering all critical components. My BGP NSX lab peers directly with my ToR switch, ensuring high efficiency and seamless integration with the rest of the network. For my labs, I utilize both OSPF and BGP. My OSPF lab runs on two virtual ArubaCX switches and a VyOS router, which has an IP in my standard client network and provides internet access to the OSPF lab via NAT.</p>

<figure><a href="bgp.png"><picture>
          <source srcset="/labv5/bgp_hu_e6ba1cd0bb433346.webp" type="image/webp">
          <source srcset="/labv5/bgp_hu_4dad477f5cdf1286.jpg" type="image/jpeg">
          <img src="/labv5/bgp_hu_e6ba1cd0bb433346.webp"alt="Network bgp setup"  width="3111"  height="2917" />
        </picture></a><figcaption>
            <p>BGP setup (click to enlarge)</p>
          </figcaption></figure>
<h3 id="storage">Storage</h3>
<p>As my primary storage solution, I use my Unraid server. After implementing several iSCSI optimizations <a href="https://sdn-warrior.org/posts/iscsi-tuning/">(my iSCSI Blog post)</a> and installing the iSCSI Target plugin <a href="https://sdn-warrior.org/posts/unraid-storage/">(my Unraid Blog post)</a>, the server provides a performant iSCSI storage capable of achieving around 2000 MB/s for both read and write operations.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">An iSCSI Target in Linux refers to a service or daemon that enables a Linux server to present storage devices over the network using the iSCSI protocol. This allows other machines, known as iSCSI Initiators, to connect to and use these storage devices as if they were local drives.</div>
    </aside>
<h2 id="firewall">Firewall</h2>
<p>As my firewall, I use a Fortinet FortiGate F40, which I’ve had for two years. I am fortunate to have access to an NFR/LAB license through my employer at an affordable price. The FortiGate F40 handles both firewalling and IDS/IPS functionality. Additionally, I operate it in a dual-stack configuration and leverage its SD-WAN feature to load balance two WAN connections: 5G and DSL.</p>
<h2 id="lessons-learned-and-future-goals">Lessons Learned and Future Goals</h2>
<ul>
<li>
<p>Performance vs. Efficiency: Achieving the right balance between performance and efficiency requires meticulous planning and experimentation. Each hardware choice and configuration tweak contributes to the overall success of the setup.</p>
</li>
<li>
<p>Automation: In the future, I plan to incorporate more automation into my homelab. To achieve this, I have started experimenting with Terraform to streamline deployments and configurations.</p>
</li>
<li>
<p>Scaling Smartly: As my lab has grown, managing power, cooling, and network configurations has become increasingly important.</p>
</li>
<li>
<p>Continuous Improvement: My homelab is a perpetual work in progress. With each iteration, I discover new ways to optimize and expand its capabilities.</p>
</li>
</ul>
<h2 id="current-setup-bill-of-materials-bom">Current Setup: Bill of Materials (BOM)</h2>
<table>
  <thead>
      <tr>
          <th>Quantity</th>
          <th>Component</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>Server</strong></td>
          <td></td>
      </tr>
      <tr>
          <td>4</td>
          <td>Minisforum MS-01 i9 13.Gen</td>
      </tr>
      <tr>
          <td>3</td>
          <td>Asus NUC Pro i7 13.Gen</td>
      </tr>
      <tr>
          <td>1</td>
          <td>Asus NUC Pro i3 13.Gen</td>
      </tr>
      <tr>
          <td><strong>Network</strong></td>
          <td></td>
      </tr>
      <tr>
          <td>2</td>
          <td>Mikrotik CRS309-1G-8S+IN</td>
      </tr>
      <tr>
          <td>1</td>
          <td>MikroTik L009UiGS-RM</td>
      </tr>
      <tr>
          <td>1</td>
          <td>Mikrotik CRS326-4C +20G+2Q</td>
      </tr>
      <tr>
          <td>1</td>
          <td>Mikrotik RB5009UG+S+IN</td>
      </tr>
      <tr>
          <td><strong>Storage</strong></td>
          <td></td>
      </tr>
      <tr>
          <td>1</td>
          <td>Intel NUC Extreme i7 11.Gen</td>
      </tr>
      <tr>
          <td><strong>USV</strong></td>
          <td></td>
      </tr>
      <tr>
          <td>1</td>
          <td>APC Back-UPS Pro 1300VA BR1300MI</td>
      </tr>
      <tr>
          <td><strong>Firewall</strong></td>
          <td></td>
      </tr>
      <tr>
          <td>1</td>
          <td>Fortinet Fortigate F40</td>
      </tr>
      <tr>
          <td><strong>Other</strong></td>
          <td></td>
      </tr>
      <tr>
          <td>1</td>
          <td>21U Rack</td>
      </tr>
      <tr>
          <td>1</td>
          <td>DAC Cable / Ethernet Cable</td>
      </tr>
      <tr>
          <td>2</td>
          <td>Cable Management</td>
      </tr>
      <tr>
          <td>2</td>
          <td>Rack Mount MS-01</td>
      </tr>
      <tr>
          <td>1</td>
          <td>Rack Mount NUC</td>
      </tr>
      <tr>
          <td>2</td>
          <td>Air Vent</td>
      </tr>
      <tr>
          <td>4</td>
          <td>Rack PSU</td>
      </tr>
  </tbody>
</table>
<p>You can also find the detailed BOM with prices <a href="https://docs.google.com/spreadsheets/d/1XK32KJWiLBMlKLlPSKNDwBaX2mg4fmGFN2aEA3SIsEc/edit?pli=1&amp;gid=0#gid=0">here</a>, which I update regularly to reflect any changes in my setup.</p>
<h2 id="final-result">Final result</h2>
<p>
<figure><picture>
          <source srcset="/labv5/rackmount_hu_49c1b570dcd3bd1c.webp" type="image/webp">
          <source srcset="/labv5/rackmount_hu_c80f174cbaf8e9e9.jpg" type="image/jpeg">
          <img src="/labv5/rackmount_hu_49c1b570dcd3bd1c.webp"alt="Rackmount"  width="1600"  height="1200" />
        </picture><figcaption>
            <p>Rackmount MS-01</p>
          </figcaption></figure>

<figure><picture>
          <source srcset="/labv5/rackmount2_hu_4f548a9d2d8e2795.webp" type="image/webp">
          <source srcset="/labv5/rackmount2_hu_16a627291faaa860.jpg" type="image/jpeg">
          <img src="/labv5/rackmount2_hu_4f548a9d2d8e2795.webp"alt="Rackmount2"  width="2250"  height="1500" />
        </picture><figcaption>
            <p>Rackmount MS-01</p>
          </figcaption></figure>

<figure><picture>
          <source srcset="/labv5/cable_hu_8ffcc0f1c2200354.webp" type="image/webp">
          <source srcset="/labv5/cable_hu_eca5e9ae630ffa30.jpg" type="image/jpeg">
          <img src="/labv5/cable_hu_8ffcc0f1c2200354.webp"alt="Rack"  width="1500"  height="1000" />
        </picture><figcaption>
            <p>Rack view top</p>
          </figcaption></figure>

<figure><picture>
          <source srcset="/labv5/rack_hu_c79dd32b10192ad8.webp" type="image/webp">
          <source srcset="/labv5/rack_hu_68a7ec6316e9f53.jpg" type="image/jpeg">
          <img src="/labv5/rack_hu_c79dd32b10192ad8.webp"alt="Rack"  width="1200"  height="1600" />
        </picture><figcaption>
            <p>Rack view</p>
          </figcaption></figure></p>
]]></content>
		</item>
		
		<item>
			<title>How to use QoS in NSX</title>
			<link>https://sdn-warrior.org/posts/nsx-qos/</link>
			<pubDate>Tue, 10 Dec 2024 02:00:40 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/nsx-qos/</guid>
			<description><![CDATA[How to use QoS in NSX]]></description>
			<content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>Quality of Service (QoS) is a critical aspect of network performance management, especially in complex environments where NSX is deployed. NSX provides powerful QoS capabilities at both the gateway and segment levels, enabling fine-grained control over traffic prioritization and bandwidth allocation. However, understanding the differences between these two levels of QoS implementation is essential for optimizing network performance.</p>
<p>In this article, we’ll delve into how QoS functions on the gateway versus the segment in NSX, explore their respective use cases, and provide insights into selecting the right approach for your network needs. Whether you&rsquo;re managing inter-tenant traffic or fine-tuning internal traffic flows, mastering these distinctions will empower you to make informed decisions and maximize the efficiency of your NSX deployment.</p>
<h2 id="qos-on-an-nsx-segment">QoS on an NSX Segment</h2>
<p>Quality of Service (QoS) on an NSX segment focuses on managing traffic flows within a specific segment, providing comprehensive control over bandwidth and traffic priorities. Unlike gateway-level QoS, which typically manages north-south traffic at the boundary of the network, segment-level QoS applies to all traffic associated with virtual machines (VMs) on the segment, regardless of direction.</p>
<p>To implement QoS at this level, you must first create a Segment Profile, which defines the QoS policies. This includes settings such as ingress and egress traffic shaping, bandwidth guarantees, and DSCP marking. Once configured, this profile is attached to the segment, ensuring that the specified QoS policies are applied consistently to all VMs on that segment.</p>

<figure><a href="qos1.png"><picture>
          <source srcset="/nsx-qos/qos1_hu_5fc90009db4a1cbe.webp" type="image/webp">
          <source srcset="/nsx-qos/qos1_hu_48d5bbd64918e44c.jpg" type="image/jpeg">
          <img src="/nsx-qos/qos1_hu_5fc90009db4a1cbe.webp"alt="QoS Profile"  width="1157"  height="466" />
        </picture></a><figcaption>
            <p>QoS Profile</p>
          </figcaption></figure>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">A crucial aspect of segment-level QoS is that it impacts all traffic originating from or destined for VMs on the segment. For example, if a Segment Profile specifies a guaranteed bandwidth of 30 Mbps, each VM on that segment will have this guarantee for all traffic, whether it is east-west within the same data center or north-south to external networks.</div>
    </aside>
<h2 id="explanation-of-segment-qos-profile-parameters-in-nsx">Explanation of Segment QoS Profile Parameters in NSX</h2>
<h3 id="mode"><strong>Mode</strong></h3>
<p>Defines how DSCP (Differentiated Services Code Point) values are handled for traffic originating from or destined for a logical port.</p>
<ul>
<li>
<p><strong>Trusted Mode</strong>:</p>
<ul>
<li>The DSCP value from the <strong>inner packet header</strong> (original header) is copied to the <strong>outer IP header</strong> (tunnel header) for IP/IPv6 traffic.</li>
<li>For non-IP/IPv6 traffic, the default DSCP value (0) is used for the outer IP header.</li>
<li>Supported only on <strong>overlay-based logical ports</strong>.</li>
</ul>
</li>
<li>
<p><strong>Untrusted Mode</strong>:</p>
<ul>
<li>For <strong>overlay-based logical ports</strong>, the configured DSCP value is applied to the outer IP header, regardless of the inner packet type.</li>
<li>For <strong>VLAN-based logical ports</strong>, the configured DSCP value is applied to the IP/IPv6 packets&rsquo; outer IP header.</li>
<li>DSCP values can range from 0 to 63.</li>
</ul>
</li>
</ul>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">DSCP settings affect only tunneled traffic and do not apply to traffic within the same hypervisor.</div>
    </aside>
<h3 id="priority"><strong>Priority</strong></h3>
<p>Specifies the <strong>DSCP priority value</strong>, which determines the level of importance for packets. The DSCP priority values range from <strong>0 to 63</strong>, with higher values indicating higher priority traffic.</p>
<h3 id="class-of-service-cos"><strong>Class of Service (CoS)</strong></h3>
<p>Defines the <strong>CoS value</strong>, applicable to VLAN-based logical ports.</p>
<ul>
<li>CoS groups similar traffic types and assigns a service priority level for each type.</li>
<li>Lower-priority traffic may experience reduced throughput or be dropped to ensure better performance for higher-priority traffic.</li>
<li>CoS can also be configured for VLAN ID 0 packets.</li>
<li>The CoS value ranges from <strong>0 to 7</strong>, where <strong>0</strong> indicates best-effort service.</li>
</ul>
<h3 id="ingress">Ingress</h3>
<p>Configures traffic shaping for <strong>outbound traffic</strong> from the VM to the logical network.</p>
<ul>
<li><strong>Average Bandwidth</strong>: The average rate of outbound traffic to prevent network congestion.</li>
<li><strong>Peak Bandwidth</strong>: The maximum traffic rate allowed to support bursts.</li>
<li><strong>Burst Size</strong>: Defines the maximum data size for a traffic burst, calculated as:</li>
</ul>
$$
\frac{\text{Peak Bandwidth (in bits per second)} \times \text{Burst Duration (in seconds)}}{8} = \text{Burst Size (in Bytes)}
$$<p>For example, with an average bandwidth of 30 Mbps, a peak of 60 Mbps, and a burst duration of 0.1 seconds, the burst size would be:</p>
$$
\frac{{60000000} \text{(bits per second)} \times {0.1} \text{(seconds)}}{8} = 750000 \text{ bytes}
$$<p>Default value is 0, which disables rate limiting.</p>
<h3 id="ingress-broadcast">Ingress Broadcast</h3>
<p>Configures traffic shaping for broadcast traffic sent from the VM to the logical network.
Works similarly to the general ingress settings, allowing custom limits for average bandwidth, peak bandwidth, and burst size for broadcast traffic.
Default value is 0, which disables rate limiting for ingress broadcast traffic.</p>
<h3 id="egress">Egress</h3>
<p>Configures traffic shaping for inbound traffic from the logical network to the VM.
Allows setting limits on the average bandwidth, peak bandwidth, and burst size for inbound traffic.
Default value is 0, which disables rate limiting on egress traffic.
By configuring these parameters effectively, you can ensure traffic prioritization, manage congestion, and optimize bandwidth usage for both overlay-based and VLAN-based logical ports in NSX environments.</p>
<h2 id="test-scenario-evaluating-qos-at-the-segment-level">Test Scenario: Evaluating QoS at the segment level</h2>
<p>To demonstrate the differences between a setup with and without QoS, I have created a test environment consisting of two T1 routers, each connected to its own segment and hosting VMs for testing. Both T1 routers are connected to the same Tier-0 (T0) router, providing a shared Internet connection for testing north-south traffic scenarios.</p>

<figure><a href="topo.png"><picture>
          <source srcset="/nsx-qos/topo_hu_66f9e2e50535e68a.webp" type="image/webp">
          <source srcset="/nsx-qos/topo_hu_cc2a617033dd4a62.jpg" type="image/jpeg">
          <img src="/nsx-qos/topo_hu_66f9e2e50535e68a.webp"alt="NSX Enviroment"  width="912"  height="936" />
        </picture></a><figcaption>
            <p>NSX Test Enviroment</p>
          </figcaption></figure>
<p>This test specifically focuses on <strong>QoS at the segment level</strong>, with the primary goal of limiting the VMs on the segment <code>LS-10.10.20.1</code> to a maximum bandwidth of <strong>30 Mbps</strong> using a QoS profile.</p>
<h3 id="t1-router-1-t1-bgp-no-qos"><strong>T1 Router 1: T1-BGP No QoS</strong></h3>
<ul>
<li><strong>Segment</strong>: <code>LS-10.10.10.1</code></li>
<li><strong>QoS Policy</strong>: None applied</li>
<li><strong>VM</strong>: <code>Alpine01</code> IP Adress <code>10.10.10.10</code>
<ul>
<li>Running an instance of iPerf to act as a traffic generator and receiver.</li>
</ul>
</li>
</ul>
<p>This router and segment represent a baseline configuration without any QoS policies, allowing for a comparison of unshaped and unprioritized traffic.</p>
<h3 id="t1-router-2-t1-bgp-qos"><strong>T1 Router 2: T1-BGP QoS</strong></h3>
<ul>
<li><strong>Segment</strong>: <code>LS-10.10.20.1</code></li>
<li><strong>QoS Policy</strong>: A custom QoS profile is applied to this segment, specifically configured to limit bandwidth to 30 Mbps for all associated VMs.</li>
<li><strong>VM</strong>: <code>Alpine02</code> IP Adresse <code>10.10.20.10</code>
<ul>
<li>Equipped with iPerf for traffic generation and reception.</li>
<li>Includes a browser for additional testing and validation purposes.</li>
</ul>
</li>
</ul>
<h3 id="purpose-of-the-test"><strong>Purpose of the Test</strong></h3>
<p>The primary goal of this test is to validate <strong>QoS at the segment level</strong>, focusing on the following:</p>
<ul>
<li>Verifying that VMs connected to <code>LS-10.10.20.1</code> are effectively limited to a bandwidth of 30 Mbps for egress traffic.</li>
<li>Demonstrating that the QoS profile, configured as ingress-only, limits traffic originating from <code>Alpine02</code> to other VMs or the Internet, while traffic from <code>Alpine01</code> to <code>Alpine02</code> remains unrestricted.</li>
<li>Comparing traffic behavior between a segment with and without an applied QoS profile.</li>
<li>Assessing performance consistency under traffic shaping policies.</li>
<li>Measuring the impact of the 30 Mbps limit on both east-west and north-south traffic.</li>
</ul>
<p>These behaviors will be demonstrated using iPerf measurements, highlighting the effectiveness and boundaries of the configured QoS profile.
By analyzing the test results, we can confirm the effectiveness of the QoS profile in limiting segment-level bandwidth and understand its implications for overall network performance.</p>
<h3 id="first-test-iperf-test-from-alpine02-to-alpine03">First Test: iPerf Test from Alpine02 to Alpine03</h3>
<h4 id="test-configuration"><strong>Test Configuration</strong></h4>
<ul>
<li><strong>Source</strong>: Alpine02 (<code>10.10.20.10</code>) connected to the segment <code>LS-10.10.20.1</code> with the QoS profile applied (ingress limited to 30 Mbps).</li>
<li><strong>Destination</strong>: Alpine03 (<code>10.10.10.10</code>) connected to the segment <code>LS-10.10.10.1</code> with no QoS policy applied.</li>
<li><strong>Tool</strong>: iPerf3</li>
<li><strong>Command</strong>: <code>iperf3 -c 10.10.10.10</code></li>
</ul>
<h4 id="result-summary"><strong>Result Summary</strong></h4>
<ul>
<li><strong>Average Sender Bitrate</strong>: 32.6 Mbps</li>
<li><strong>Average Receiver Bitrate</strong>: 30.2 Mbps</li>
<li><strong>Key Observation</strong>: The sender&rsquo;s bitrate fluctuates around the 30 Mbps mark, as expected due to the QoS ingress limitation applied to the LS-10.10.20.1 segment. Receiver bitrate is consistent with the QoS configuration, confirming that the profile effectively limits traffic from Alpine02 to Alpine03.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">alpine02:~# iperf3 -c 10.10.10.10
</span></span><span class="line"><span class="cl">Connecting to host 10.10.10.10, port 5201
</span></span><span class="line"><span class="cl">[  5] local 10.10.20.10 port 40468 connected to 10.10.10.10 port 5201
</span></span><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
</span></span><span class="line"><span class="cl">[  5]   0.00-1.00   sec  6.12 MBytes  51.3 Mbits/sec    0    522 KBytes       
</span></span><span class="line"><span class="cl">[  5]   1.00-2.00   sec  4.25 MBytes  35.7 Mbits/sec    0    522 KBytes       
</span></span><span class="line"><span class="cl">[  5]   2.00-3.00   sec  3.25 MBytes  27.3 Mbits/sec    0    522 KBytes       
</span></span><span class="line"><span class="cl">[  5]   3.00-4.00   sec  3.12 MBytes  26.2 Mbits/sec    0    522 KBytes       
</span></span><span class="line"><span class="cl">[  5]   4.00-5.00   sec  4.25 MBytes  35.7 Mbits/sec    0    522 KBytes       
</span></span><span class="line"><span class="cl">[  5]   5.00-6.00   sec  3.12 MBytes  26.2 Mbits/sec    0    522 KBytes       
</span></span><span class="line"><span class="cl">[  5]   6.00-7.00   sec  4.25 MBytes  35.6 Mbits/sec    0    522 KBytes       
</span></span><span class="line"><span class="cl">[  5]   7.00-8.00   sec  3.12 MBytes  26.2 Mbits/sec    2    365 KBytes       
</span></span><span class="line"><span class="cl">[  5]   8.00-9.00   sec  3.25 MBytes  27.3 Mbits/sec    0    365 KBytes       
</span></span><span class="line"><span class="cl">[  5]   9.00-10.00  sec  4.12 MBytes  34.6 Mbits/sec    0    365 KBytes       
</span></span><span class="line"><span class="cl">- - - - - - - - - - - - - - - - - - - - - - - - -
</span></span><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  38.9 MBytes  32.6 Mbits/sec    2        sender
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  36.0 MBytes  30.2 Mbits/sec             receiver
</span></span></code></pre></div><h3 id="second-test-iperf-test-from-alpine01-to-alpine02">Second Test: iPerf Test from Alpine01 to Alpine02</h3>
<h4 id="test-configuration-1"><strong>Test Configuration</strong></h4>
<ul>
<li><strong>Source</strong>: Alpine01 (<code>10.10.10.10</code>) connected to the segment <code>LS-10.10.10.1</code> with no QoS policy applied.</li>
<li><strong>Destination</strong>: Alpine02 (<code>10.10.20.10</code>) connected to the segment <code>LS-10.10.20.1</code> with the QoS profile applied (ingress limited to 30 Mbps).</li>
<li><strong>Tool</strong>: iPerf3</li>
<li><strong>Command</strong>: <code>iperf3 -c 10.10.20.10</code></li>
</ul>
<h4 id="result-summary-1"><strong>Result Summary</strong></h4>
<ul>
<li><strong>Average Sender Bitrate</strong>: 2.25 Gbps</li>
<li><strong>Average Receiver Bitrate</strong>: 2.25 Gbps</li>
<li><strong>Key Observation</strong>: The traffic from Alpine01 to Alpine02 is not limited by the QoS profile, as expected. This confirms the QoS profile applies only to ingress traffic on the <code>LS-10.10.20.1</code> segment.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">alpine01:~# iperf3 -c 10.10.20.10
</span></span><span class="line"><span class="cl">Connecting to host 10.10.20.10, port 5201
</span></span><span class="line"><span class="cl">[  5] local 10.10.10.10 port 50482 connected to 10.10.20.10 port 5201
</span></span><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
</span></span><span class="line"><span class="cl">[  5]   0.00-1.00   sec   269 MBytes  2.25 Gbits/sec  150   2.08 MBytes       
</span></span><span class="line"><span class="cl">[  5]   1.00-2.00   sec   268 MBytes  2.25 Gbits/sec    0   2.19 MBytes       
</span></span><span class="line"><span class="cl">[  5]   2.00-3.00   sec   268 MBytes  2.25 Gbits/sec  172   1.21 MBytes       
</span></span><span class="line"><span class="cl">[  5]   3.00-4.00   sec   267 MBytes  2.24 Gbits/sec  150    997 KBytes       
</span></span><span class="line"><span class="cl">[  5]   4.00-5.00   sec   267 MBytes  2.24 Gbits/sec   11    673 KBytes       
</span></span><span class="line"><span class="cl">[  5]   5.00-6.00   sec   268 MBytes  2.24 Gbits/sec    0    928 KBytes       
</span></span><span class="line"><span class="cl">[  5]   6.00-7.00   sec   268 MBytes  2.25 Gbits/sec    0   1.10 MBytes       
</span></span><span class="line"><span class="cl">[  5]   7.00-8.00   sec   268 MBytes  2.25 Gbits/sec    0   1.27 MBytes       
</span></span><span class="line"><span class="cl">[  5]   8.00-9.00   sec   269 MBytes  2.25 Gbits/sec    0   1.42 MBytes       
</span></span><span class="line"><span class="cl">[  5]   9.00-10.00  sec   268 MBytes  2.25 Gbits/sec    6   1.11 MBytes       
</span></span><span class="line"><span class="cl">- - - - - - - - - - - - - - - - - - - - - - - - -
</span></span><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  2.62 GBytes  2.25 Gbits/sec  489             sender
</span></span><span class="line"><span class="cl">[  5]   0.00-10.01  sec  2.62 GBytes  2.25 Gbits/sec                  receiver
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">iperf Done.
</span></span></code></pre></div>
    <aside class="admonition attention">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" class="feather feather-link" width="24" height="24" viewBox="0 0 24 24"
      fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
   </svg></div><b>Note on QoS Profiles and Perspective</b>
        </div>
        <div class="admonition-content"><p>When working with QoS profiles on a segment, it is important to understand that the traffic shaping perspective is always <strong>from the segment&rsquo;s point of view</strong>. For example:</p>
<ul>
<li>A profile that shapes <strong>ingress traffic</strong> is applied to traffic <strong>entering the segment</strong>.</li>
<li>From the VM&rsquo;s perspective, this same traffic is considered <strong>egress traffic</strong> (leaving the VM).
This distinction can initially be confusing but is crucial for correctly interpreting and configuring QoS policies in NSX environments.</li>
</ul></div>
    </aside>
<h4 id="qos-profiles-apply-to-all-vms-on-the-segment"><strong>QoS Profiles Apply to All VMs on the Segment</strong></h4>
<p>QoS profiles applied at the segment level are effective for <strong>all VMs connected to that segment</strong>. In our example, this means:</p>
<ul>
<li>Every VM connected to the segment <code>LS-10.10.20.1</code> is limited to a maximum <strong>outgoing traffic rate of 30 Mbps</strong>.</li>
<li>The QoS profile ensures this bandwidth limit is enforced uniformly, regardless of the specific VM or traffic destination.</li>
</ul>
<p>This behavior highlights the segment-wide scope of QoS policies, making them a powerful tool for managing traffic flow consistently across all connected VMs.</p>
<h2 id="qos-on-t1-gateway-level">QoS on T1 Gateway Level</h2>
<p>To evaluate QoS at the Tier-1 Gateway level, the test conditions remain the same as in the segment-level QoS tests. However, the QoS profile will now be applied directly to the T1 Gateway. Before proceeding, the QoS profile is removed from the segment <code>LS-10.10.20.1</code>.</p>
<h2 id="qos-profile-configuration-on-t1-gateway"><strong>QoS Profile Configuration on T1 Gateway</strong></h2>
<p>For the T1 Gateway, the QoS profile is applied with the following characteristics:</p>
<ul>
<li><strong>Type</strong>: Ingress</li>
<li><strong>Committed Bandwidth</strong>: 30 Mbps</li>
<li><strong>Burst Size</strong>: Configured based on constraints (explained below).</li>
</ul>
<p>Unlike segment-level QoS, the T1 Gateway QoS profile allows only the configuration of <strong>Committed Bandwidth</strong> and <strong>Burst Size</strong> in bytes. The direction (Ingress or Egress) is explicitly specified when applying the profile to the gateway.</p>
<h3 id="limitations-of-gateway-qos-profiles"><strong>Limitations of Gateway QoS Profiles</strong></h3>
<ul>
<li><strong>Supported only on Tier-1 Gateways</strong>:
<ul>
<li>QoS profiles can only be applied to T1 Gateways, not to Tier-0 Gateways or any other components.</li>
</ul>
</li>
<li><strong>Applies only to North-South Traffic</strong>:
<ul>
<li>QoS policies on Tier-1 Gateways are limited to north-south traffic and do not affect overlay segments or service interfaces connected to the gateway.</li>
</ul>
</li>
<li><strong>Requires Active-Standby Mode</strong>:
<ul>
<li>The T1 Gateway must be in active-standby mode with an NSX Edge cluster for the QoS profile to function.</li>
</ul>
</li>
<li><strong>Not Supported for Distributed Routing</strong>:
<ul>
<li>Gateways configured for distributed routing cannot have QoS profiles applied.</li>
</ul>
</li>
</ul>
<h3 id="burst-size-calculation"><strong>Burst Size Calculation</strong></h3>
<p>The calculation of the <strong>Burst Size</strong> for a T1 Gateway is more complex due to additional constraints. The Burst Size must satisfy the following:</p>
<ol>
<li>
<p><strong>Token Refill per Interval</strong>:</p>
\[B \geq \frac{R \times 1000000 \times I}{1000 \times 8} \]<p>
Where:</p>
</li>
</ol>
<ul>
<li>\( B \): Burst Size in Bytes</li>
<li>\( R \): Committed Bandwidth in Mbps</li>
<li>\( I \): Refill Interval in milliseconds (e.g., 1 ms)</li>
</ul>
<ol start="2">
<li><strong>Minimum Refill Interval</strong>:
\[ B \geq \frac{R \times 1000000 \times 1}{1,000 \times 8} \]</li>
</ol>
<ul>
<li>The minimum interval \( I \) is 1 ms to account for dataplane CPU usage.</li>
</ul>
<ol start="3">
<li><strong>MTU Constraint</strong>:
\[ B \geq MTU \] of the Service Router (SR) port.</li>
</ol>
<ul>
<li>The Burst Size must accommodate at least one full MTU-size packet.</li>
</ul>
<p>The effective Burst Size must satisfy all three constraints. Therefore, the configured Burst Size is determined as:</p>
\[
B = \text{Max} \left( \frac{R \times 1000000 \times I}{1000 \times 8}, \frac{R \times 1000000 \times 1}{1000 \times 8}, MTU \right)
\]<h3 id="burst-size-calculation-example">Burst Size Calculation Example</h3>
<h4 id="parameters"><strong>Parameters</strong></h4>
<ul>
<li>\( R \): <strong>Committed Bandwidth</strong> = 30 Mbps</li>
<li>\( I \): <strong>Refill Interval</strong> = 1000 ms (1 second)</li>
<li>\( MTU \): <strong>Maximum Transmission Unit</strong> = 1500 bytes</li>
</ul>
<p>The Burst Size \( B \) must satisfy the following constraints:</p>
<h4 id="1-token-refill-per-interval"><strong>1. Token Refill per Interval</strong></h4>
\[
B \geq \frac{R \times 1000000 \times I}{1000 \times 8}
\]<p>
Substitute the values:
</p>
\[
B \geq \frac{30 \times 1000000 \times 1000}{1000 \times 8}
\]<p>
</p>
\[
B \geq \frac{30000000000}{8000}
\]<p>
</p>
\[
B \geq 3750000 \, \text{bytes}
\]<h4 id="2-minimum-refill-interval"><strong>2. Minimum Refill Interval</strong></h4>
\[
B \geq \frac{R \times 1000000 \times 1000}{1000 \times 8}
\]<p>
This calculation remains the same as in the previous case since \( I = 1000 \, \text{ms} \):
</p>
\[
B \geq 3750000 \, \text{bytes}
\]<h4 id="3-mtu-constraint"><strong>3. MTU Constraint</strong></h4>
\[
B \geq MTU
\]<p>
</p>
\[
B \geq 1500 \, \text{bytes}
\]<h4 id="final-burst-size"><strong>Final Burst Size</strong></h4>
<p>The Burst Size \( B \) must satisfy <strong>all three constraints</strong>, so:
</p>
\[
B = \text{Max}(3750000, 3750000, 1500)
\]<p>
</p>
\[
B = 3750000 \, \text{bytes}
\]<h3 id="result"><strong>Result</strong></h3>
<p>The minimum Burst Size required is <strong>3750000 bytes</strong> to satisfy all constraints with the given parameters.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Minimum Refill Interval</b>
        </div>
        <div class="admonition-content">Use the <code>get dataplane</code> command from the NSX Edge CLI to retrieve the time interval, Qos_wakeup_interval_ms. The default value for Qos_wakeup_interval_ms is 50ms. However, this value is automatically adjusted by the dataplane based on the QoS configuration. In my lab, the QoS_wakeup_interval is relatively high, which is partly due to my hardware and the fact that it is a nested lab. In production environments, this value is typically lower.</div>
    </aside>
<h3 id="implementation-for-this-test"><strong>Implementation for This Test</strong></h3>
<ul>
<li>The T1 Gateway is configured with a 30 Mbps Committed Bandwidth and a Burst Size that satisfies the constraints above.</li>
<li>The profile is applied in <strong>Ingress</strong> mode to test incoming north-south traffic through the T1 Gateway.</li>
</ul>

<figure><a href="t1qos.png"><picture>
          <source srcset="/nsx-qos/t1qos_hu_a27ad2036624afc9.webp" type="image/webp">
          <source srcset="/nsx-qos/t1qos_hu_17dabf25afe7b7f2.jpg" type="image/jpeg">
          <img src="/nsx-qos/t1qos_hu_a27ad2036624afc9.webp"alt="T1 Qos Profile"  width="1433"  height="821" />
        </picture></a><figcaption>
            <p>T1 Qos Profile</p>
          </figcaption></figure>
<p>This setup will help analyze how traffic shaping and rate limiting function at the T1 Gateway level compared to the segment-level QoS.</p>
<h2 id="first-test-iperf-test-from-alpine01-to-alpine02-t1-gateway-qos">First Test: iPerf Test from Alpine01 to Alpine02 (T1 Gateway QoS)</h2>
<h3 id="test-configuration-2"><strong>Test Configuration</strong></h3>
<ul>
<li><strong>Source</strong>: Alpine01 (<code>10.10.10.10</code>) connected to the segment <code>LS-10.10.10.1</code> with no QoS profile applied.</li>
<li><strong>Destination</strong>: Alpine02 (<code>10.10.20.10</code>) connected to the segment <code>LS-10.10.20.1</code>.</li>
<li><strong>QoS Profile</strong>: Applied to the T1 Gateway with:
<ul>
<li><strong>Type</strong>: Ingress</li>
<li><strong>Committed Bandwidth</strong>: 30 Mbps</li>
<li><strong>Burst Size</strong>: Configured according to the calculated constraints.</li>
</ul>
</li>
<li><strong>Tool</strong>: iPerf3</li>
<li><strong>Command</strong>: <code>iperf3 -c 10.10.20.10</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">alpine01:~# iperf3 -c 10.10.20.10 
</span></span><span class="line"><span class="cl">Connecting to host 10.10.20.10, port 5201
</span></span><span class="line"><span class="cl">[  5] local 10.10.10.10 port 33292 connected to 10.10.20.10 port 5201
</span></span><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
</span></span><span class="line"><span class="cl">[  5]   0.00-1.00   sec  7.25 MBytes  60.8 Mbits/sec  283   5.66 KBytes       
</span></span><span class="line"><span class="cl">[  5]   1.00-2.00   sec  3.25 MBytes  27.3 Mbits/sec  369   5.66 KBytes       
</span></span><span class="line"><span class="cl">[  5]   2.00-3.00   sec  3.00 MBytes  25.2 Mbits/sec  233   52.3 KBytes       
</span></span><span class="line"><span class="cl">[  5]   3.00-4.00   sec  3.75 MBytes  31.5 Mbits/sec  392   7.07 KBytes       
</span></span><span class="line"><span class="cl">[  5]   4.00-5.00   sec  3.12 MBytes  26.2 Mbits/sec  284   41.0 KBytes       
</span></span><span class="line"><span class="cl">[  5]   5.00-6.00   sec  3.88 MBytes  32.5 Mbits/sec  356   8.48 KBytes       
</span></span><span class="line"><span class="cl">[  5]   6.00-7.00   sec  3.25 MBytes  27.3 Mbits/sec  270   7.07 KBytes       
</span></span><span class="line"><span class="cl">[  5]   7.00-8.00   sec  3.62 MBytes  30.4 Mbits/sec  315    110 KBytes       
</span></span><span class="line"><span class="cl">[  5]   8.00-9.00   sec  3.50 MBytes  29.4 Mbits/sec  407   7.07 KBytes       
</span></span><span class="line"><span class="cl">[  5]   9.00-10.00  sec  3.00 MBytes  25.2 Mbits/sec  245   12.7 KBytes       
</span></span><span class="line"><span class="cl">- - - - - - - - - - - - - - - - - - - - - - - - -
</span></span><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  37.6 MBytes  31.6 Mbits/sec  3154             sender
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  37.1 MBytes  31.1 Mbits/sec                  receiver
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">iperf Done.
</span></span></code></pre></div><h3 id="result-summary-2">Result Summary</h3>
<ul>
<li>Average Sender Bitrate: 31.6 Mbps</li>
<li>Average Receiver Bitrate: 31.1 Mbps</li>
<li>Total Retransmissions: 3154</li>
</ul>
<h2 id="second-test-iperf-test-from-alpine02-to-alpine03-t1-gateway-qos">Second Test: iPerf Test from Alpine02 to Alpine03 (T1 Gateway QoS)</h2>
<h3 id="test-configuration-3"><strong>Test Configuration</strong></h3>
<ul>
<li><strong>Source</strong>: Alpine02 (<code>10.10.20.10</code>) connected to the segment <code>LS-10.10.20.1</code> with no QoS profile applied.</li>
<li><strong>Destination</strong>: Alpine03 (<code>10.10.10.10</code>) connected to the segment <code>LS-10.10.10.1</code> with no QoS profile applied.</li>
<li><strong>QoS Profile</strong>: Applied to the T1 Gateway in <strong>Ingress</strong> mode, limiting traffic to 30 Mbps for ingress traffic  from T0 to the T1 gateway.</li>
<li><strong>Tool</strong>: iPerf3</li>
<li><strong>Command</strong>: <code>iperf3 -c 10.10.10.10</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">alpine02:~# iperf3 -c 10.10.10.10
</span></span><span class="line"><span class="cl">Connecting to host 10.10.10.10, port 5201
</span></span><span class="line"><span class="cl">[  5] local 10.10.20.10 port 50200 connected to 10.10.10.10 port 5201
</span></span><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
</span></span><span class="line"><span class="cl">[  5]   0.00-1.00   sec   249 MBytes  2.09 Gbits/sec    5    615 KBytes       
</span></span><span class="line"><span class="cl">[  5]   1.00-2.00   sec   267 MBytes  2.24 Gbits/sec    0    885 KBytes       
</span></span><span class="line"><span class="cl">[  5]   2.00-3.00   sec   159 MBytes  1.34 Gbits/sec   73    290 KBytes       
</span></span><span class="line"><span class="cl">[  5]   3.00-4.00   sec   248 MBytes  2.08 Gbits/sec    0    677 KBytes       
</span></span><span class="line"><span class="cl">[  5]   4.00-5.00   sec   261 MBytes  2.19 Gbits/sec    0    928 KBytes       
</span></span><span class="line"><span class="cl">[  5]   5.00-6.00   sec   264 MBytes  2.22 Gbits/sec    1    792 KBytes       
</span></span><span class="line"><span class="cl">[  5]   6.00-7.00   sec   260 MBytes  2.18 Gbits/sec   26    441 KBytes       
</span></span><span class="line"><span class="cl">[  5]   7.00-8.00   sec   257 MBytes  2.16 Gbits/sec    0    766 KBytes       
</span></span><span class="line"><span class="cl">[  5]   8.00-9.00   sec   262 MBytes  2.20 Gbits/sec    7    585 KBytes       
</span></span><span class="line"><span class="cl">[  5]   9.00-10.00  sec   262 MBytes  2.19 Gbits/sec    0    858 KBytes       
</span></span><span class="line"><span class="cl">- - - - - - - - - - - - - - - - - - - - - - - - -
</span></span><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  2.43 GBytes  2.09 Gbits/sec  112             sender
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  2.43 GBytes  2.09 Gbits/sec                  receiver
</span></span></code></pre></div><h3 id="result-summary-3">Result Summary</h3>
<ul>
<li>Average Sender Bitrate: 2.09 Gbps</li>
<li>Average Receiver Bitrate: 2.09 Gbps</li>
<li>Total Retransmissions: 112</li>
</ul>
<h2 id="third-test-iperf-test-from-alpine01-to-alpine02-concurrent-traffic">Third Test: iPerf Test from Alpine01 to Alpine02 (Concurrent Traffic)</h2>
<h3 id="test-configuration-4"><strong>Test Configuration</strong></h3>
<ul>
<li><strong>Source</strong>: Alpine01 (<code>10.10.10.10</code>) connected to the segment <code>LS-10.10.10.1</code> with no QoS profile applied.</li>
<li><strong>Destination</strong>: Alpine02 (<code>10.10.20.10</code>) connected to the segment <code>LS-10.10.20.1</code>.</li>
<li><strong>Additional Traffic</strong>: A second VM, connected to the same T1 Gateway as Alpine02, is concurrently receiving data to simulate shared bandwidth conditions.</li>
<li><strong>QoS Profile</strong>: Applied to the T1 Gateway in <strong>Ingress</strong> mode, limiting traffic to 30 Mbps for ingress traffic to the gateway.</li>
<li><strong>Tool</strong>: iPerf3</li>
<li><strong>Command</strong>: <code>iperf3 -c 10.10.20.10</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">alpine01:~# iperf3 -c 10.10.20.10 
</span></span><span class="line"><span class="cl">Connecting to host 10.10.20.10, port 5201
</span></span><span class="line"><span class="cl">[  5] local 10.10.10.10 port 40898 connected to 10.10.20.10 port 5201
</span></span><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
</span></span><span class="line"><span class="cl">[  5]   0.00-1.00   sec  2.88 MBytes  24.1 Mbits/sec  475   8.48 KBytes       
</span></span><span class="line"><span class="cl">[  5]   1.00-2.00   sec  2.50 MBytes  21.0 Mbits/sec  212   53.7 KBytes       
</span></span><span class="line"><span class="cl">[  5]   2.00-3.00   sec  2.12 MBytes  17.8 Mbits/sec  233   9.90 KBytes       
</span></span><span class="line"><span class="cl">[  5]   3.00-4.00   sec  2.12 MBytes  17.8 Mbits/sec  145   1.41 KBytes       
</span></span><span class="line"><span class="cl">[  5]   4.00-5.00   sec  2.50 MBytes  21.0 Mbits/sec  237   14.1 KBytes       
</span></span><span class="line"><span class="cl">[  5]   5.00-6.00   sec  1.62 MBytes  13.6 Mbits/sec  145   22.6 KBytes       
</span></span><span class="line"><span class="cl">[  5]   6.00-7.00   sec  3.12 MBytes  26.2 Mbits/sec  331   5.66 KBytes       
</span></span><span class="line"><span class="cl">[  5]   7.00-8.00   sec  1.00 MBytes  8.39 Mbits/sec  155   7.07 KBytes       
</span></span><span class="line"><span class="cl">[  5]   8.00-9.00   sec  2.62 MBytes  22.0 Mbits/sec  142   86.3 KBytes       
</span></span><span class="line"><span class="cl">[  5]   9.00-10.00  sec  3.12 MBytes  26.2 Mbits/sec  349   22.6 KBytes       
</span></span><span class="line"><span class="cl">- - - - - - - - - - - - - - - - - - - - - - - - -
</span></span><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  23.6 MBytes  19.8 Mbits/sec  2424             sender
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  22.4 MBytes  18.8 Mbits/sec                  receiver
</span></span></code></pre></div><h3 id="result-summary-4">Result Summary</h3>
<ul>
<li>Average Sender Bitrate: 19.8 Mbps</li>
<li>Average Receiver Bitrate: 18.8 Mbps</li>
<li>Total Retransmissions: 2424</li>
<li>The QoS profile at the T1 Gateway effectively limits total ingress bandwidth to 30 Mbps. However, the concurrent traffic from the second VM reduces the available bandwidth for Alpine01.</li>
</ul>

    <aside class="admonition attention">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" class="feather feather-link" width="24" height="24" viewBox="0 0 24 24"
      fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
   </svg></div><b>Note on QoS Profiles and Perspective</b>
        </div>
        <div class="admonition-content"><p>For a QoS profile applied at the gateway level, the <strong>Ingress</strong> direction refers to traffic entering the Tier-1 (T1) Gateway from the Tier-0 (T0) Gateway. This means:</p>
<ul>
<li>From the perspective of a VM, this is indeed <strong>ingress traffic</strong>, as it refers to traffic arriving at the VM via the T1 Gateway.</li>
<li>The <strong>egress traffic</strong> of a VM (traffic leaving the VM) is not affected by an ingress QoS profile applied at the T1 Gateway.
This distinction ensures that the QoS profile at the gateway level is only applied to traffic coming from the T0 to the T1, without influencing outgoing traffic generated by the VM.</li>
</ul></div>
    </aside>
<h2 id="summary">Summary</h2>
<p>When working with QoS profiles in NSX, it is important to understand the key differences and use cases for <strong>Gateway QoS Profiles</strong> and <strong>Segment QoS Profiles</strong>:</p>
<h3 id="gateway-qos-profiles"><strong>Gateway QoS Profiles</strong></h3>
<ul>
<li><strong>Shared Bandwidth</strong>: The configured bandwidth applies to the <strong>total traffic</strong> for all VMs connected to the same T1 Gateway. This includes all segments attached to that gateway.</li>
<li><strong>Practical Use Case</strong>: Gateway QoS profiles are ideal for scenarios like test environments, where you want to limit the total available bandwidth across all VMs and segments.</li>
<li><strong>Traffic Direction</strong>: The QoS direction is critical:
<ul>
<li><strong>Ingress QoS</strong>: Limits traffic entering the T1 Gateway (from T0 to T1), affecting ingress traffic from the VM&rsquo;s perspective.</li>
<li><strong>Egress QoS</strong>: Limits traffic leaving the T1 Gateway (from T1 to T0), affecting egress traffic from the VM&rsquo;s perspective.</li>
</ul>
</li>
</ul>
<h3 id="segment-qos-profiles"><strong>Segment QoS Profiles</strong></h3>
<ul>
<li><strong>Individual Bandwidth Allocation</strong>: Each VM connected to the segment receives the bandwidth specified in the profile. VMs do <strong>not share</strong> the bandwidth; they each receive the assigned limit (assuming the total environment can provide the required bandwidth).</li>
<li><strong>Flexibility</strong>: Segment QoS profiles offer more granular control and can be used for more than just rate limiting. For example, they can prioritize or shape specific types of traffic.</li>
<li><strong>Traffic Direction</strong>: The direction in the profile (Ingress or Egress) must be carefully considered based on what you want to achieve.</li>
</ul>
<h3 id="key-considerations"><strong>Key Considerations</strong></h3>
<ul>
<li><strong>Shared vs. Dedicated Bandwidth</strong>: Use Gateway QoS Profiles when you want to manage total bandwidth collectively for all VMs. Use Segment QoS Profiles when you need to allocate specific bandwidth to individual VMs.</li>
<li><strong>Performance Impact</strong>: Avoid using Gateway QoS Profiles in scenarios requiring high performance and scalability. The active/standby limitation can create bottlenecks, making distributed T1 Gateways the better choice for performance-critical environments.</li>
</ul>
<p>By understanding these differences, you can effectively apply QoS profiles to achieve desired traffic shaping and bandwidth management goals in your NSX environment.</p>
]]></content>
		</item>
		
		<item>
			<title>NSX 4.2.1.1 Hotfix Update</title>
			<link>https://sdn-warrior.org/posts/nsx4_2_1_1/</link>
			<pubDate>Mon, 09 Dec 2024 14:55:00 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/nsx4_2_1_1/</guid>
			<description><![CDATA[short summary of the NSX update 4.2.1.1]]></description>
			<content type="html"><![CDATA[<p>The latest NSX update delivers a comprehensive set of fixes to enhance stability, performance, and security. Here’s a summary of the resolved issues and their impact:</p>
<h2 id="1-enhanced-stability-for-virtual-environments">1. Enhanced Stability for Virtual Environments</h2>
<ul>
<li>Loss of IP Bindings after VMotion (Issue 3453866): Addressed the removal of IP bindings and logical ports associated with VMs during vMotion events.</li>
<li>Critical ESXi Errors with UENS (Issue 3456283): Fixed intermittent PSODs caused by control priority filter lookups, ensuring smoother ESXi operations.</li>
<li>Portgroup Creation Issue (Issue 3458111): Resolved the creation of additional portgroups during full sync, preventing potential vCenter crashes.</li>
<li>Transport Zone Reference Issue (Issue 3454291): Fixed transport zone profile mismatches, restoring vMotion and service functionality.</li>
</ul>
<h2 id="2-improved-network-performance">2. Improved Network Performance</h2>
<ul>
<li>TCP Packet Drops in EDP (Issue 3457047): Resolved issues causing TCP connection drops when using Enhanced Datapath configurations.</li>
<li>Packet Reordering with LRO (Issue 3456533): Fixed packet reordering issues when HW Large Receive Offload is enabled, improving TCP throughput.</li>
<li>Reduced Traffic Performance with UENS and LRO (Issue 3456289): Addressed performance degradation in VSAN workloads.</li>
</ul>
<h2 id="3-robust-security-and-monitoring">3. Robust Security and Monitoring</h2>
<ul>
<li>NSX UI Alarm for Metrics Delivery Failure (Issue 3456663): Fixed authentication issues following certificate changes to restore metrics delivery.</li>
<li>IDPS and TLS Prevention (Issue 3458040): Enhanced malicious traffic prevention by resolving decryption issues with IDPS.</li>
<li>IDPS Events and Certificate Verification (Issue 3458038): Restored the flow of IDPS events to Security Intelligence by fixing Kafka channel errors.</li>
</ul>
<h2 id="4-stability-in-upgrades-and-configurations">4. Stability in Upgrades and Configurations</h2>
<ul>
<li>NSX Manager Slowness (Issue 3453882): Resolved slowness and instability in NSX Manager post-upgrade.</li>
<li>Edge Node IP Table Rules (Issue 3452795): Ensured proper application of IP table rules on Edge nodes.</li>
<li>NSX Configuration Realization (Issue 3452794): Fixed issues preventing configuration realization on Transport Nodes.</li>
</ul>
<h2 id="5-enhancements-in-distributed-firewall-and-flow-management">5. Enhancements in Distributed Firewall and Flow Management</h2>
<ul>
<li>DFW Rules During Upgrade (Issue 3450247): Mitigated periods where DFW rules were disabled during the upgrade process.</li>
<li>Flow Exporter Alarms (Issues 3429787, 3456644): Fixed alarms and restored flow export functionality for Security Intelligence.</li>
</ul>
<h2 id="6-overlay-and-connectivity-improvements">6. Overlay and Connectivity Improvements</h2>
<ul>
<li>Overlay Segment Connectivity (Issue 3450019): Addressed connectivity loss in Overlay Segments when Edge TEP groups were enabled.</li>
</ul>
<h2 id="conclusion">Conclusion</h2>
<p>This NSX update resolves critical issues to improve operational reliability, security, and performance in virtual environments. For a seamless experience, upgrading to this release is highly recommended. As always, thorough testing in a staging environment before deployment in production is advised.</p>
]]></content>
		</item>
		
		<item>
			<title>iSCSI Tuning</title>
			<link>https://sdn-warrior.org/posts/iscsi-tuning/</link>
			<pubDate>Sun, 08 Dec 2024 12:21:20 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/iscsi-tuning/</guid>
			<description><![CDATA[Optimizing iSCSI Performance in an Unraid Environment]]></description>
			<content type="html"><![CDATA[<p>In my setup, I use iSCSI in combination with Unraid to create a DIY block storage solution. Unraid, with its flexibility, serves as the foundation, and I utilize the Linux iSCSI implementation installed via a plugin to enable block-level storage.</p>
<p>For my setup, I use an Intel NUC of the 13th generation, equipped with two 2.5G network adapters. These provide the necessary connectivity for storage traffic. I configured two VMkernel (VMK) adapters specifically for iSCSI traffic, ensuring redundancy and optimized throughput.</p>
<p>To further enhance performance, I’ve implemented several optimizations, including fine-tuning settings on my ESXi servers.</p>
<h2 id="optimize-maxiosizekb">Optimize MaxIoSizeKB</h2>
<p>One such optimization involves adjusting the maximum I/O size for iSCSI traffic.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">By default, VMware ESXi uses a <em><strong>MaxIoSizeKB</strong></em> value of 128 KB.</div>
    </aside>
<p>While this is sufficient for many setups, it may not be optimal for environments
like mine, where jumbo frames are enabled across the network. Larger packets perform better in such a configuration, reducing overhead and increasing throughput.</p>
<p>To take advantage of my network&rsquo;s capabilities, I increased the <em><strong>MaxIoSizeKB</strong></em> parameter to 512 KB</p>
<p>To configure this, I ran the following command on my ESXi host:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">esxcli system settings advanced set -o /ISCSI/MaxIoSizeKB -i 512
</span></span></code></pre></div><p>This change allows the iSCSI initiator to send larger I/O requests, improving data transfer efficiency in my jumbo-frame-enabled network. With this configuration, I noticed a significant improvement in performance, as the network could handle larger blocks of data more effectively.</p>

    <aside class="admonition attention">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" class="feather feather-link" width="24" height="24" viewBox="0 0 24 24"
      fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
   </svg></div><b>Attention</b>
        </div>
        <div class="admonition-content">For this change to take effect, a host reboot is required. After restarting the ESXi server, the new value will be applied, enabling the iSCSI initiator to send larger I/O requests.</div>
    </aside>
<p>After the reboot, you can verify that the change has been successfully applied by running the following command:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">esxcli system settings advanced list -o /ISCSI/MaxIoSizeKB
</span></span></code></pre></div><p>The output should look like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[root@esxnuc1:~] esxcli system settings advanced list -o /ISCSI/MaxIoSizeKB
</span></span><span class="line"><span class="cl">   Path: /ISCSI/MaxIoSizeKB
</span></span><span class="line"><span class="cl">   Type: integer
</span></span><span class="line"><span class="cl">   Int Value: 512
</span></span><span class="line"><span class="cl">   Default Int Value: 128
</span></span><span class="line"><span class="cl">   Min Value: 128
</span></span><span class="line"><span class="cl">   Max Value: 512
</span></span><span class="line"><span class="cl">   String Value: 
</span></span><span class="line"><span class="cl">   Default String Value: 
</span></span><span class="line"><span class="cl">   Valid Characters: 
</span></span><span class="line"><span class="cl">   Description: Maximum Software iSCSI I/O size (in KB) (REQUIRES REBOOT!)
</span></span><span class="line"><span class="cl">   Host Specific: false
</span></span><span class="line"><span class="cl">   Impact: reboot
</span></span></code></pre></div><h2 id="optimize-multipathing">Optimize multipathing</h2>
<p>To optimize performance, I configured Round Robin as the multipathing policy for my iSCSI volumes on the ESXi server. This ensures better load distribution and failover capabilities. The configuration can be applied via the ESXi CLI as follows:</p>
<ul>
<li>List all connected storage devices to identify the target naa or eui identifier:</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">esxcli storage nmp device list
</span></span></code></pre></div><ul>
<li>Output</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">naa.60014058f1117188efe49cb8b5de2273
</span></span><span class="line"><span class="cl">   Device Display Name: LIO-ORG iSCSI Disk (naa.60014058f1117188efe49cb8b5de2273)
</span></span><span class="line"><span class="cl">   Storage Array Type: VMW_SATP_ALUA
</span></span><span class="line"><span class="cl">   Storage Array Type Device Config: {implicit_support=on; explicit_support=on; explicit_allow=on; alua_followover=on; action_OnRetryErrors=on; {TPG_id=0,TPG_state=AO}}
</span></span><span class="line"><span class="cl">   Path Selection Policy: VMW_PSP_MRU
</span></span><span class="line"><span class="cl">   Path Selection Policy Device Config: {policy=iops,iops=1000,bytes=10485760,useANO=0; lastPathIndex=0: NumIOsPending=0,numBytesPending=0}
</span></span><span class="line"><span class="cl">   Path Selection Policy Device Custom Config: policy=iops;iops=1000;bytes=10485760;samplingCycles=16;latencyEvalTime=180000;useANO=0;
</span></span><span class="line"><span class="cl">   Working Paths: vmhba64:C1:T0:L1, vmhba64:C0:T0:L1
</span></span><span class="line"><span class="cl">   Is USB: false
</span></span></code></pre></div>
    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content"><!-- raw HTML omitted --> The default multipath policy is &ldquo;Most Recently Used&rdquo; (VM_PSP_MRU).</div>
    </aside>
<ul>
<li>Set the multipathing policy for the desired iSCSI device to RoundRobin:</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">esxcli storage nmp device set --device &lt;DeviceIdentifier&gt; --psp VMW_PSP_RR
</span></span></code></pre></div><ul>
<li>Verify that the policy has been successfully applied:</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">esxcli storage nmp device list | grep &lt;DeviceIdentifier&gt;
</span></span></code></pre></div>
    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">Replace <!-- raw HTML omitted --> with the actual identifier of your iSCSI device (naa.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx).&quot;</div>
    </aside>
<ul>
<li>Output after chages</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">naa.60014058f1117188efe49cb8b5de2273
</span></span><span class="line"><span class="cl">   Device Display Name: LIO-ORG iSCSI Disk (naa.60014058f1117188efe49cb8b5de2273)
</span></span><span class="line"><span class="cl">   Storage Array Type: VMW_SATP_ALUA
</span></span><span class="line"><span class="cl">   Storage Array Type Device Config: {implicit_support=on; explicit_support=on; explicit_allow=on; alua_followover=on; action_OnRetryErrors=on; {TPG_id=0,TPG_state=AO}}
</span></span><span class="line"><span class="cl">   Path Selection Policy: VMW_PSP_RR
</span></span><span class="line"><span class="cl">   Path Selection Policy Device Config: {policy=iops,iops=1000,bytes=10485760,useANO=0; lastPathIndex=0: NumIOsPending=0,numBytesPending=0}
</span></span><span class="line"><span class="cl">   Path Selection Policy Device Custom Config: policy=iops;iops=1000;bytes=10485760;samplingCycles=16;latencyEvalTime=180000;useANO=0;
</span></span><span class="line"><span class="cl">   Working Paths: vmhba64:C1:T0:L1, vmhba64:C0:T0:L1
</span></span><span class="line"><span class="cl">   Is USB: false
</span></span></code></pre></div>
    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Info</b>
        </div>
        <div class="admonition-content">the multipath policy must now be VMW_PSP_RR</div>
    </aside>
<p>To further optimize path usage and load distribution, I adjusted the IOPS parameter for the Round Robin policy. By default, ESXi switches storage paths after 1000 I/O operations, but I used the following command snippet to change this behavior to switch after every single I/O:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">for i in `esxcfg-scsidevs -c |awk &#39;{print $1}&#39; | grep naa.xxxx`; do 
</span></span><span class="line"><span class="cl">   esxcli storage nmp psp roundrobin deviceconfig set --type=iops --iops=1 --device=$i
</span></span><span class="line"><span class="cl">done
</span></span></code></pre></div><p>Where .xxxx matches the first few characters of your NAA IDs. Reducing the IOPS value from 1000 to 1 means the ESXi host will alternate between available paths much more frequently. In practice, this can help evenly distribute the workload across all paths, potentially improving overall responsiveness and performance.</p>
<p>However, when combined with changes like increasing MaxIoSizeKB, the outcome can vary. In some cases, this adjustment may yield better results, while in others it could degrade performance. Therefore, it’s crucial to test these parameters individually for each storage environment to determine the most effective configuration.</p>
<h2 id="why-jumbo-frames-matter-bonus">Why Jumbo Frames Matter (bonus)</h2>
<p>Jumbo frames allow Ethernet frames larger than the standard 1500 bytes to be transmitted, reducing the total number of frames required to send the same amount of data. This results in lower CPU overhead and better performance, particularly in high-bandwidth and storage-intensive environments. However, it’s essential to ensure that every device in the network path—NICs, switches, and storage systems—supports and is configured for jumbo frames for optimal performance.</p>
<p>To verify that jumbo frames are functioning correctly in your environment, you can use the <em><strong>vmkping</strong></em> command on your ESXi host:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">vmkping -I vmk1 -s 8973 -d 192.168.67.250
</span></span></code></pre></div>
    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b> vmkping parameters</b>
        </div>
        <div class="admonition-content"><ul>
<li>Replace <em><strong>vmk1</strong></em> with the VMkernel adapter used for iSCSI.</li>
<li><em><strong>-s 8972</strong></em> sets the packet size to match the jumbo frame size (8972 bytes, including headers).</li>
<li><em><strong>-d</strong></em> enables the Don&rsquo;t Fragment flag to ensure the packet isn&rsquo;t fragmented along the way.</li>
</ul>
</div>
    </aside>
<p>If you see the error:  <em><strong>sendto() failed (Message too long)</strong></em> this indicates that the packet size is too large to be transmitted without fragmentation. For a setup with an MTU of 9000 configured on the distributed or standard switch, a packet size of 8972 bytes should work correctly. If the error occurs, check your vswitch settings, your physical switches and your iSCSI target.</p>
<h2 id="conclusion">Conclusion</h2>
<p>By increasing the MaxIoSizeKB to 512 KB, verifying jumbo frame functionality with vmkping, and enabling Round Robin, I optimized my iSCSI setup to leverage the full potential of my 2.5G network.</p>

<figure><picture>
          <source srcset="/iscsi-tuning/test_hu_473aa978cea8695.webp" type="image/webp">
          <source srcset="/iscsi-tuning/test_hu_2d7abdfcba70dd1.jpg" type="image/jpeg">
          <img src="/iscsi-tuning/test_hu_473aa978cea8695.webp"alt="CriytalDiskMark Benchmark"  width="479"  height="351" />
        </picture><figcaption>
            <p>CriytalDiskMark Benchmark</p>
          </figcaption></figure>
<p>In my tests with CrystalDiskMark, I observed that both network adapters showed significant performance improvements as a result of these optimizations. These adjustments allow my Unraid and iSCSI configuration to deliver a robust and high-performance block storage solution tailored to my workloads.</p>
<h2 id="disclaimer">Disclaimer</h2>
<p>The settings and configurations described in this article are specific to my environment and were tested extensively within my setup. While these adjustments significantly improved performance for my use case, they may not be universally applicable. It’s essential to test these settings in your environment before implementing them, as results may vary depending on hardware, network, and workload specifics. These optimizations are not intended as a blanket recommendation.</p>
]]></content>
		</item>
		
		<item>
			<title>MAC Learning is your friend</title>
			<link>https://sdn-warrior.org/posts/mac-learning/</link>
			<pubDate>Wed, 27 Nov 2024 19:54:18 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/mac-learning/</guid>
			<description><![CDATA[Why you should use MAC Learning]]></description>
			<content type="html"><![CDATA[<h2 id="intro">Intro</h2>
<p>When working with nested ESXi environments, understanding the interplay between MAC Learning, Promiscuous Mode, and Forged Transmits is critical. These settings significantly affect how traffic flows in virtualized networks, especially in scenarios involving virtualized hypervisors or advanced network configurations.</p>
<ul>
<li>
<p>MAC Learning: Think of it as a switch-like behavior in your virtual environment. It optimizes network traffic by ensuring that each virtual machine (VM) receives only the packets meant for its MAC address.
Without MAC learning, when the ESXi VM&rsquo;s vNIC connects to a switch port, it only contains a static MAC address.
<a href="https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-networking/GUID-E0246B3D-9FB1-4976-8217-5C085863EA9A.html">(more Information about MAC learning)</a></p>
</li>
<li>
<p>Promiscuous Mode: On the other hand, this allows a VM or virtual switch to capture all traffic on a port group, whether addressed to it or not. It&rsquo;s a useful feature for troubleshooting and monitoring but comes with potential security and performance implications.</p>
</li>
<li>
<p>Forged Transmits: Forged Transmits plays a complementary role in this configuration. It ensures that traffic originating from a VM with a source MAC address different from its assigned MAC address is allowed to leave the virtual switch. This is crucial in nested environments.</p>
</li>
</ul>
<h2 id="lab-environment">Lab environment</h2>
<p>In this lab environment, I am using two Minisforum MS-01 workstations, each equipped with ESXi 8.0.3 as the hypervisor. These compact systems provide a balance of performance and energy efficiency, fitting perfectly into my goal of maintaining a powerful yet quiet setup.</p>
<p>Each workstation is interconnected via dual 10 Gb/s network links, ensuring high-speed communication with minimal latency. This setup is particularly advantageous for simulating complex network scenarios and nested virtualization environments.</p>
<p>On each workstation, a nested ESXi host is deployed. These nested hosts act as virtualized hypervisors for a future VCF deployment.</p>
<h2 id="the-problems-ive-caused">The problems I&rsquo;ve caused</h2>
<p>In my previous lab setups, Promiscuous Mode was my go-to solution for nested virtualization. It was reliable, simple to configure, and worked flawlessly for years. While I was aware of the security risks associated with it, in a controlled homelab environment, those risks were not a significant concern.</p>
<p>However, everything changed when I upgraded my lab to dual 10 Gb/s network links and, powered by the i9 CPU, gained the ability to run multiple nested ESXi hosts on a single physical machine.
One of the first challenges I encountered was during the configuration of a vSAN port group for my nested ESXi hosts. This port group was configured to use Active/Active load balancing across both 10 Gb/s uplinks on the MS-01 workstations.
Almost immediately, I noticed unexpected performance issues. Nested VMs were experiencing slow network speeds, and vSAN operations were significantly hindered. Initially, I struggled to pinpoint the root cause. Given my past success with Promiscuous Mode, I didn’t suspect it could be contributing to the problem.</p>
<p><a href="https://cybernils.net/2024/11/26/the-effect-of-using-mac-learning-in-esxi-nested-labs/">This article</a> by my fellow vExpert colleague Nils Kristiansen inspired me to delve deeper into the topic.</p>
<h2 id="why-promiscuous-mode-became-a-problem">Why Promiscuous Mode Became a Problem</h2>
<p>The performance degradation stemmed from how traffic was handled with Promiscuous Mode in a dual-uplink, Active/Active configuration:</p>
<ul>
<li>
<p>Broadcasting Traffic Across Both Uplinks: Promiscuous Mode caused the virtual switch to deliver all traffic to every uplink, regardless of the destination. With two high-speed uplinks in an Active/Active configuration, this created excessive overhead, saturating the uplinks and causing packet drops.</p>
</li>
<li>
<p>vSAN’s High Sensitivity to Latency: vSAN traffic is highly dependent on low latency and consistent performance. The unnecessary broadcast of packets interfered with its ability to operate efficiently.</p>
</li>
<li>
<p>Nested Virtualization Amplified the Problem: Nested ESXi hosts added another layer of complexity. The inner VMs were sending and receiving traffic that the parent ESXi host’s virtual switch struggled to handle efficiently under Promiscuous Mode.</p>
</li>
</ul>
<h2 id="ok-but-how-bad-is-the-performance">OK, but how bad is the performance?</h2>
<p>To quantify the performance issues, I turned to iPerf3, a reliable tool for measuring network throughput that is conveniently included in ESXi 8. Using iPerf3, I conducted a series of tests to better understand the extent of the performance degradation.</p>
<h3 id="performance-measurement-1-both-physical-nics-active-nested-hosts-on-the-same-physical-host">Performance Measurement 1: Both Physical NICs Active, Nested Hosts on the Same Physical Host</h3>
<p>For the first test, I configured both pNICs (10 Gb/s) as active in an Active/Active load balancing setup and placed both nested ESXi hosts on the same physical host. Additionally, Promiscuous Mode was enabled on the port group to ensure traffic could flow properly between the nested hosts.</p>
<p><img src="test1.png" alt="Test 1"></p>
<h3 id="results">Results</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  1.35 GBytes  1.16 Gbits/sec    0            sender  
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  1.35 GBytes  1.16 Gbits/sec                 receiver 
</span></span></code></pre></div><h3 id="performance-measurement-2-single-nic-active-nested-hosts-on-the-same-physical-host">Performance Measurement 2: Single NIC Active, Nested Hosts on the Same Physical Host</h3>
<p>For the second test, I modified the setup to use only one physical NIC (pNIC) while keeping both nested ESXi hosts on the same physical host. Promiscuous Mode was still enabled on the port group to ensure traffic routing between the nested hosts. By disabling the second uplink, the traffic path was simplified, reducing potential conflicts.</p>
<p><img src="test2.png" alt="Test 2"></p>
<h3 id="results-1">Results</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  11.4 GBytes  9.82 Gbits/sec    0            sender
</span></span><span class="line"><span class="cl">[  5]   0.00-10.01  sec  11.4 GBytes  9.80 Gbits/sec                 receiver
</span></span></code></pre></div><h3 id="performance-measurement-3-mac-learning-and-forged-transmits-dual-uplinks-nested-hosts-on-the-same-physical-host">Performance Measurement 3: MAC Learning and Forged Transmits, Dual Uplinks, Nested Hosts on the Same Physical Host</h3>
<p>For the third test, I switched to using MAC Learning and Forged Transmits, while keeping both physical NICs (pNICs) active in the Active/Active load balancing configuration. Both nested ESXi hosts were still located on the same physical host. This configuration was designed to optimize traffic handling without relying on Promiscuous Mode</p>
<p><img src="test3.png" alt="Test 3"></p>
<h3 id="results-2">Results</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr  
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  24.2 GBytes  20.8 Gbits/sec    0            sender  
</span></span><span class="line"><span class="cl">[  5]   0.00-10.01  sec  24.2 GBytes  20.8 Gbits/sec                 receiver  
</span></span></code></pre></div><h3 id="performance-measurement-4-mac-learning-and-forged-transmits-single-uplink-nested-hosts-on-the-same-physical-host">Performance Measurement 4: MAC Learning and Forged Transmits, Single Uplink, Nested Hosts on the Same Physical Host</h3>
<p>For the fourth test, I used a single uplink (pNIC) with both nested ESXi hosts on the same ESXi server. MAC Learning and Forged Transmits were enabled to optimize traffic handling.
The throughput was 20.7 Gbits/sec, almost identical to Test 3. This confirms that, since the traffic did not need to traverse the physical network infrastructure, the single uplink configuration with MAC Learning and Forged Transmits performed just as efficiently, without the overhead of Promiscuous Mode.</p>
<p><img src="test4.png" alt="Test 4"></p>
<h3 id="results-3">Results</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[ ID] Interval           Transfer     Bitrate         Retr  
</span></span><span class="line"><span class="cl">[  5]   0.00-10.00  sec  24.2 GBytes  20.8 Gbits/sec    0            sender  
</span></span><span class="line"><span class="cl">[  5]   0.00-10.01  sec  24.2 GBytes  20.8 Gbits/sec                 receiver  
</span></span></code></pre></div><h3 id="further-performance-measurements-and-security-considerations">Further Performance Measurements and Security Considerations</h3>
<p>Additional performance tests revealed that the difference between Promiscuous Mode and MAC Learning was minimal or even non-existent when the nested hosts were placed on two different physical hosts.
The traffic between the nested VMs did not significantly differ whether Promiscuous Mode or MAC Learning was enabled, indicating that both configurations performed similarly in a multi-host environment.</p>

    <aside class="admonition warning">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-alert-circle">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="8" x2="12" y2="12"></line>
      <line x1="12" y1="16" x2="12.01" y2="16"></line>
   </svg></div><b>It&#39;s important to note the security implications of using Promiscuous Mode</b>
        </div>
        <div class="admonition-content">Enabling Promiscuous Mode on a network interface allows all traffic to be sent to the VM, even traffic not intended for it, which can expose sensitive data or potentially allow malicious activity.
Because of this security concern, Promiscuous Mode should only be used temporarily, and for troubleshooting purposes, in production environments.
It is recommended to disable it once the issue is resolved to maintain a secure network setup.</div>
    </aside>
<h3 id="side-effect-of-promiscuous-mode-duplicate-packets">Side Effect of Promiscuous Mode: Duplicate Packets</h3>
<p>Enabling Promiscuous Mode on a network interface can lead to duplicate packets when both the source and destination are on the same ESXi host. In this mode, the virtual machine receives all traffic, including its own outbound packets, causing unnecessary duplication. This can result in performance degradation due to increased CPU usage and network inefficiencies.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[root@esxnuc04:/usr/lib/vmware/vsan/bin] vmkping -I vmk1 192.168.69.203
</span></span><span class="line"><span class="cl">PING 192.168.69.203 (192.168.69.203): 56 data bytes
</span></span><span class="line"><span class="cl">64 bytes from 192.168.69.203: icmp_seq=0 ttl=64 time=0.356 ms
</span></span><span class="line"><span class="cl">64 bytes from 192.168.69.203: icmp_seq=0 ttl=64 time=0.423 ms (DUP!)
</span></span><span class="line"><span class="cl">64 bytes from 192.168.69.203: icmp_seq=0 ttl=64 time=0.426 ms (DUP!)
</span></span><span class="line"><span class="cl">64 bytes from 192.168.69.203: icmp_seq=0 ttl=64 time=0.429 ms (DUP!)
</span></span><span class="line"><span class="cl">64 bytes from 192.168.69.203: icmp_seq=1 ttl=64 time=0.249 ms
</span></span><span class="line"><span class="cl">64 bytes from 192.168.69.203: icmp_seq=1 ttl=64 time=0.274 ms (DUP!)
</span></span><span class="line"><span class="cl">64 bytes from 192.168.69.203: icmp_seq=1 ttl=64 time=0.277 ms (DUP!)
</span></span><span class="line"><span class="cl">64 bytes from 192.168.69.203: icmp_seq=1 ttl=64 time=0.281 ms (DUP!)
</span></span><span class="line"><span class="cl">64 bytes from 192.168.69.203: icmp_seq=2 ttl=64 time=0.261 ms
</span></span></code></pre></div><h2 id="sidequest-using-iperf-on-esxi-803">Sidequest: Using iPerf on ESXi 8.0.3</h2>
<p>To use iPerf for network performance testing on ESXi 8.0.3, you&rsquo;ll need to follow a few steps to enable and configure the necessary settings.</p>
<ul>
<li>Step 1: Disable the ESXi firewall temporarily
First, disable the ESXi firewall to allow the iPerf tool to operate without restrictions:</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">esxcli network firewall set --enabled false
</span></span></code></pre></div><ul>
<li>Step 2: Allow executing iPerf
Next, set the system to allow execution of non-installed binaries (such as iPerf), which are not part of the default ESXi installation:</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">localcli system settings advanced set -o /User/execInstalledOnly -i 0
</span></span></code></pre></div><ul>
<li>Step 3: Execute iPerf (Client example)
Once you&rsquo;ve set the necessary configuration, you can execute iPerf to test the network performance. Use the following command to run iPerf as a client (-c) and specify the target IP address (e.g., 192.168.69.203):</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">./usr/lib/vmware/vsan/bin/iperf3 -c 192.168.69.203
</span></span></code></pre></div><ul>
<li>Step 4: Re-enable the firewall
Once you’ve finished testing, remember to re-enable the firewall for security reasons:</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">esxcli network firewall set --enabled true
</span></span></code></pre></div><ul>
<li>Step 5: Restrict execution of non-installed binaries
To revert the system to its default behavior and restrict the execution of non-installed binaries, run the following command:</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">localcli system settings advanced set -o /User/execInstalledOnly -i 1
</span></span></code></pre></div><h2 id="why-mac-learning-and-forged-transmits-replace-promiscuous-mode-in-nested-environments">Why MAC Learning and Forged Transmits Replace Promiscuous Mode in Nested Environments</h2>
<p>In a typical nested ESXi environment, each inner VM sends packets with its unique MAC address, which the virtual switch on the parent ESXi host does not recognize by default. This creates a challenge because:</p>
<ul>
<li>Without Promiscuous Mode, the switch drops packets destined for or originating from these MAC addresses.</li>
<li>Without Forged Transmits, packets from inner VMs with &ldquo;forged&rdquo; source MAC addresses are also dropped.</li>
</ul>
<h3 id="by-enabling-mac-learning-and-forged-transmits">By enabling MAC Learning and Forged Transmits:</h3>
<p><em><strong>MAC Learning</strong></em> ensures that the virtual switch learns the inner VMs’ MAC addresses dynamically, so it can correctly forward traffic to them without requiring Promiscuous Mode.
<em><strong>Forged Transmits</strong></em> ensures that traffic from inner VMs with different source MAC addresses is allowed to leave the parent VM&rsquo;s vNIC.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Conclusion</b>
        </div>
        <div class="admonition-content">The combination of MAC Learning and Forged Transits removes the need for promiscuous mode, while maintaining:
Better performance, as traffic is only sent where needed.
Stronger security, since traffic is not broadcast unnecessarily.</div>
    </aside>
<p>MAC Learning with Forged Transmits is a significant performance gamechanger, especially when running multiple nested VMs on a single physical ESXi host.
However, it&rsquo;s important to note that MAC Learning with Forged Transmits requires a Distributed Switch. If you&rsquo;re using a Standard Switch, you&rsquo;ll still need to rely on Promiscuous Mode to achieve similar functionality.</p>
]]></content>
		</item>
		
		<item>
			<title>Unraid - A Storage Journey</title>
			<link>https://sdn-warrior.org/posts/unraid-storage/</link>
			<pubDate>Tue, 19 Nov 2024 23:00:00 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/unraid-storage/</guid>
			<description><![CDATA[How i use Unraid]]></description>
			<content type="html"><![CDATA[<h2 id="my-custom-unraid-storage-build---flexibility-simplicity-and-future-proofing">My Custom Unraid Storage Build - Flexibility, Simplicity, and Future-Proofing</h2>
<p>As a passionate homelaber, I enjoy not only using technology but also understanding and customizing it to suit my needs. My Unraid storage system is one of my longest-running projects, continuously evolving to meet the demands of my homelab.</p>
<p>After thorough research, I decided to go with Unraid – an operating system renowned for its simplicity, flexibility, and scalability. These key features were the deciding factors for me:</p>
<ul>
<li>Easy Expansion: Unraid allows combining drives of different sizes and expanding the array later without replacing all disks at once.</li>
<li>Docker Integration: The ability to run Docker containers directly on Unraid unlocks immense potential for personal projects and applications.</li>
<li>Versatility: Whether it’s managing data, running a media server, or hosting virtual machines, Unraid offers the freedom to adapt the system to your needs.</li>
</ul>
<p>In this blog post, I’ll share my experience and guide you through how I’ve planned, built, and continuously improved my Unraid storage system. It’s a perfect solution for anyone seeking a scalable, cost-effective setup without sacrificing performance or ease of use.</p>
<h2 id="the-beginning-my-first-steps-with-unraid">The Beginning: My First Steps with Unraid</h2>
<p>Unraid is a commercial product that initially caught my attention due to its unique approach to storage management. Historically, Unraid licenses were available for a one-time purchase, providing lifetime access to its features. Today, however, users can choose between a subscription model or a lifetime license, offering flexibility depending on individual needs.</p>
<p>One of the standout features of Unraid is that it boots directly from a USB stick. This design choice not only simplifies installation but also makes it incredibly easy to replace hardware. Simply move the USB stick to a new machine, and the system is ready to run without the need for extensive reconfiguration.</p>
<p>My first Unraid “server” was far from conventional: a Lenovo notebook powered by an old Intel Dual-Core processor. To build my initial array, I used external USB disks – a true makeshift setup but perfect for testing the waters. For three weeks, this setup served as my proof of concept (POC), allowing me to explore Unraid’s capabilities and ensure it met my needs before committing to more suitable hardware.</p>
<p>This early experimentation confirmed that Unraid was the right choice for my homelab, and I soon began planning and acquiring the components for my first proper build.</p>
<h2 id="building-a-3-tier-performance-storage-system">Building a 3-Tier Performance Storage System</h2>
<p>As my Unraid setup evolved, I implemented a 3-tier performance storage system to meet the varying demands of my homelab. Each tier is tailored for a specific purpose, optimizing the balance between speed, capacity, and efficiency:</p>
<ul>
<li>Tier 1: The Unraid Array (Slow Storage)
At the foundation of my storage system is the Unraid Array, which serves as the slowest but most capacious tier. Unlike traditional RAID, an Unraid Array does not stripe data across disks. Instead, each disk holds individual files, while parity disks provide fault tolerance for data recovery. This unique design allows mixing drives of different sizes, making upgrades straightforward and cost-effective.
My Unraid Array is hosted in an external USB 3.2 storage shelf, which presents each drive individually to Unraid. The shelf delivers enough bandwidth to operate all six 6TB enterprise SATA drives at full speed, ensuring reliable performance even during intensive data access.</li>
</ul>

    <aside class="admonition warning">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-alert-circle">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="8" x2="12" y2="12"></line>
      <line x1="12" y1="16" x2="12.01" y2="16"></line>
   </svg></div><b>A Quick Warning About Using Unraid with USB Disk Shelves</b>
        </div>
        <div class="admonition-content"><p>It’s important to note that Unraid does not officially recommend running the array on a USB disk shelf, as USB connections can sometimes lead to instability or performance issues. However, my personal experience has shown that it can work reliably with the right hardware.</p>
<p>In my setup, I use a TerraMaster D6-320 USB 3.2 disk shelf, paired with a high-quality USB controller like those found in devices such as Intel NUCs. This combination has proven stable and capable of delivering full-speed performance for all six enterprise SATA drives in my array.
While this setup works well for me, I recommend testing thoroughly in your environment to ensure stability and compatibility before committing to a similar configuration.</p>
</div>
    </aside>
<ul>
<li>
<p>Tier 2: Consumer NVMe Drives (Fast Cache and Docker Storage)
The second performance tier consists of consumer-grade NVMe drives, configured in a btrfs pool within Unraid. This configuration not only allows advanced features like snapshots but also supports RAID levels within the pool, providing a balance between performance and redundancy.
This tier is designed to handle tasks requiring high-speed I/O, such as hosting Docker containers. Keeping Docker data on the NVMe tier ensures that the Unraid Array doesn’t need to spin up unnecessarily, prolonging the life of the disks and improving system responsiveness.
The NVMe drives also serve as a fast cache for incoming data. Files uploaded to the NAS during the day are stored on the NVMe tier and then moved to the slower Unraid Array overnight—except for Docker data, which always remains on the NVMe storage to maintain optimal performance.
Unraid’s flexibility makes it easy to decide whether specific shares or data should stay on the NVMe pool or be automatically moved to the Array on a scheduled basis. This level of control ensures you can optimize storage placement to suit your workload, balancing speed and capacity seamlessly.</p>
</li>
<li>
<p>Tier 3: Enterprise NVMe via iSCSI (Fast and Durable Storage)
The top tier features a 4TB enterprise NVMe drive, designed for high-speed and durable performance under constant load. This storage tier is shared with my homelab servers via iSCSI Multichannel, utilizing a 2x10Gb Intel X710 NIC for redundancy and maximum throughput.
This tier provides fast, reliable storage for workloads that demand consistent performance, such as virtual machines or other critical applications in my homelab. By leveraging enterprise-grade hardware and robust networking, this storage layer ensures low-latency access and can handle the demands of continuous use without compromising reliability.</p>
</li>
</ul>
<h2 id="current-setup">Current Setup</h2>
<p>My Unraid server is built on a Intel NUC Extreme 11th Gen i7 with 64GB of RAM, offering a powerful and compact platform for my homelab. The storage setup includes 2x 1TB consumer-grade NVMe drives for fast cache and 4TB enterprise-grade NVMe for ultra-reliable, high-performance storage.</p>
<p>The Unraid Array has a total capacity of 42TB, with 33.4TB usable for data storage. This provides ample space for both my active projects and long-term storage needs.</p>
<p>On the software side, I host 29 Docker container services and 4 virtual machines, including critical services such as my Active Directory (AD), Certificate Authority (CA), and a Veeam Proxy for file backups. This setup allows for a highly efficient and flexible environment that supports a wide range of use cases while maintaining reliable performance.</p>
<p><img src="unraid2.jpg" alt="Gui"></p>
<h2 id="performance">Performance</h2>
<p>The performance of my Unraid setup was measured using CrystalDiskMark with a 16GB test file (on a Windows 11 VM) to evaluate both sequential and random read and write speeds, as well as IOPS (Input/Output Operations Per Second) of my iSCSI Storage (Tier 3). The results highlight the impressive capabilities of the system:</p>
<p>Read Performance:</p>
<ul>
<li>Sequential Read (Q8T1): 1.993 GB/s | IOPS: 1900.35</li>
<li>Sequential Read (Q1T1): 0.782 GB/s | IOPS: 746.21</li>
<li>Random Read 4K (Q32T1): 0.322 GB/s | IOPS: 78,651.61</li>
<li>Random Read 4K (Q1T1): 0.021 GB/s | IOPS: 5,149.17</li>
</ul>
<p>Write Performance:</p>
<ul>
<li>Sequential Write (Q8T1): 1.247 GB/s | IOPS: 1,189.37</li>
<li>Sequential Write (Q1T1): 0.802 GB/s | IOPS: 764.48</li>
<li>Random Write 4K (Q32T1): 0.298 GB/s | IOPS: 72,776.61</li>
<li>Random Write 4K (Q1T1): 0.036 GB/s | IOPS: 8,835.45</li>
</ul>
<p>These performance metrics demonstrate both the high throughput and responsiveness of the NVMe storage.
The sequential read and write speeds are excellent for large file transfers, while the random IOPS (especially at Q32T1) indicate the drive’s ability to handle a high volume of small, random data requests.
Despite the lower random read/write speeds at Q1T1, the system still shows strong overall performance for a variety of tasks.</p>
<h2 id="understanding-the-crystaldiskmark-test-parameters">Understanding the CrystalDiskMark Test Parameters</h2>
<p>In CrystalDiskMark, several key parameters define how the storage device is tested. Here’s a breakdown of what each test represents:</p>
<p>Q8T1: This stands for Queue Depth 8, Thread 1. It simulates a scenario where 8 data requests are queued up, but only 1 thread (or process) is handling those requests. This type of test is useful for measuring the performance of the storage device when handling multiple sequential tasks at once, but not with excessive parallelism.</p>
<p>Q1T1: This stands for Queue Depth 1, Thread 1. Here, only 1 data request is in the queue, and a single thread handles it. This test represents the performance when a single request is being processed at a time, simulating typical user scenarios where one operation is occurring without significant multitasking.</p>
<p>Q32T1: This stands for Queue Depth 32, Thread 1. In this case, there are 32 queued data requests with a single thread handling them. This test simulates heavy workloads where many data requests are pending, but only one thread is processing them. It can show how the device handles stress under larger, more sustained read operations.</p>
<h3 id="sequential-vs-random-read-tests">Sequential vs. Random Read Tests</h3>
<p>Sequential Read: This test measures how fast the storage device can read large, contiguous chunks of data, like streaming a video or transferring large files. It simulates real-world scenarios where large files need to be read from the storage at a steady rate.</p>
<p>Sequential Read (Q8T1): 1.993 GB/s – This high performance indicates the drive can handle multiple large file read operations quickly, with 8 data requests queued up.
Sequential Read (Q1T1): 0.782 GB/s – This is slower than the Q8T1 test because only one request is processed at a time, simulating less intensive operations.</p>
<p>Random Read: This test measures the performance when the drive has to read small, non-contiguous chunks of data from different parts of the storage. This type of test is more representative of workloads like database operations or running small applications that frequently access different data blocks.</p>
<p>Random Read 4K (Q32T1): 0.322 GB/s – With 32 queued requests and 4KB blocks, this performance shows how the system handles multiple random reads.
Random Read 4K (Q1T1): 0.021 GB/s – Here, only one small request is being handled at a time, leading to slower performance because random 4K reads are typically slower due to the overhead of accessing many different locations on the disk.</p>
<p>These tests give a complete picture of the drive&rsquo;s performance under different scenarios: from high-speed, sequential reads (large files) to more intensive, random access (small files), and with varying levels of workload concurrency.</p>
<h2 id="bom-bill-of-materials">BOM (Bill of Materials)</h2>
<ul>
<li>NUC11DBBi7 , Version M17027-404</li>
<li>2x 32 GB RAM Kingston KF3200C20S4 SODIMM DDR4 Synchronous 3200 MHz</li>
<li>TerraMaster D6-320 USB 3.2(Gen2)</li>
<li>3x TOSHIBA_MG09ACA18TE 18 TB Enterprise SATA</li>
<li>1x TOSHIBA_MG08ADA600E 6 TB Enterpise SATA (to change)</li>
<li>2x Samsung 970 EVO Plus 1TB</li>
<li>1x Samsung MZ1L23T8HBLA-00A07 4 TB Enterprise NVMe 110mm</li>
<li>1x Intel X710 2x 10 Gb/s</li>
<li>1x Good USB Stick (32GB)</li>
</ul>
<p><img src="das.jpg" alt="DAS Disk Array">
<img src="unraid.jpg" alt="Unraid"></p>
<h3 id="fun-fact-my-unraid-server-has-underglow-lighting">Fun fact: My Unraid server has underglow lighting!</h3>
]]></content>
		</item>
		
		<item>
			<title>How to get most out of your Nuc </title>
			<link>https://sdn-warrior.org/posts/nuc/</link>
			<pubDate>Sun, 17 Nov 2024 11:57:43 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/nuc/</guid>
			<description><![CDATA[Performance tuning for NUCs]]></description>
			<content type="html"><![CDATA[<h2 id="first-things-first">First things first</h2>
<p>Get a second NIC. The Intel NUC Pro has an IO expansion and supports an additional NIC.
Unfortunately, these are relatively difficult to get in Germany, but it&rsquo;s worth the effort.

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Search for</b>
        </div>
        <div class="admonition-content">ASUS NUC LAN and USB Expansion Module (90AR0000-P00010)</div>
    </aside></p>
<p>
<figure><picture>
          <source srcset="/NIC_hu_d82a1db6d2bdb61a.webp" type="image/webp">
          <source srcset="/NIC_hu_932f4d66f79948b2.jpg" type="image/jpeg">
          <img src="/NIC_hu_d82a1db6d2bdb61a.webp"alt="Image of an IO expansion"  width="1200"  height="800" />
        </picture><figcaption>
            <p>IO expansion</p>
          </figcaption></figure>
vSphere 8 supports the cards natively and you don&rsquo;t have to install any drivers.
It also supports jumbo frames, which is relevant for NSX Labs.
It is recommended to use a 2.5 GB managed switch. I am using a Mikrotik with the wonderful name <code>CRS326-4C +20G+2Q</code>.</p>

    <aside class="admonition tip">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-sun">
      <circle cx="12" cy="12" r="5"></circle>
      <line x1="12" y1="1" x2="12" y2="3"></line>
      <line x1="12" y1="21" x2="12" y2="23"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
      <line x1="1" y1="12" x2="3" y2="12"></line>
      <line x1="21" y1="12" x2="23" y2="12"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
   </svg></div><b>Practical tip</b>
        </div>
        <div class="admonition-content">My experience with 2.5 Gb/s Lan has shown that it makes sense to set the ports to a fixed speed in the hypervisor and on the switch, otherwise I kept having network failures.</div>
    </aside>
<h2 id="memory-tiering">Memory Tiering</h2>
<p>Memory Tiering is very new in ESXi vSphere 8.0U3 and is still a Tech Preview.
With memory tiering, you can use up to 400% of the physical RAM. This requires a fast NVMe.
I would recommend a PCIe4 NVMe with at least 5000 MB/s read/write.
Memory Tiering stores very cold (unused RAM pages) and cold RAM pages (less than 20% used) on the NVMe (Memory Tier).
There is a wonderful <a href="https://www.vmware.com/explore/video-library/video/6360757998112" title="Explore USA">Explore Session</a> on this.</p>
<p>To enable memory tiering, you have to enter the following commands via the ESX Cli:</p>
<ul>
<li>This command turns on memory tiering</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">esxcli system settings kernel set -s MemoryTiering -v TRUE
</span></span></code></pre></div><ul>
<li>This command selects the NVMe</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">esxcli system tierdevice create -d /vmfs/devices/disks/&lt;Your NVME&gt;
</span></span></code></pre></div><ul>
<li>Enter the factor here (0-400%).</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">esxcli system settings advanced set -o /Mem/TierNvmePct -i 400
</span></span></code></pre></div><p>After a reboot, you have the selected amount of additional memory.</p>

    <aside class="admonition warning">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-alert-circle">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="8" x2="12" y2="12"></line>
      <line x1="12" y1="16" x2="12.01" y2="16"></line>
   </svg></div><b>Attention</b>
        </div>
        <div class="admonition-content">The selected disk is no longer available to the ESXi.
The minimum capacity must match the selected factor.
If the disk is larger, it will still be used entirely for memory tiering.
My recommendation is to use 1 TB NVMe with 64 GB of physical RAM and 400% as the factor.
ESXi will use the NVMe evenly so that the disk doesn&rsquo;t break as quickly.</div>
    </aside>
<h2 id="using-pe-cores">Using P/E Cores</h2>
<p>Intel has introduced the big.little CPU architecture from the 12th generation of their consumer CPUs. This leads to some problems with ESXi. If the efficiency cores are activated, the ESXi starts with a PSOD (Purble Screen of Death).
Fortunately, there are a few workarounds here.</p>
<ul>
<li>Disable the E cores in the BIOS</li>
</ul>
<p>This means that you can use hyperthreading and the P Cores. However, you are clearly wasting potential here. That&rsquo;s why we don&rsquo;t want to.</p>
<ul>
<li>Use P and E cores and sacrifice hyperthreading for them</li>
</ul>
<p>My tests showed that I got significantly more performance out of my 13th generation i7 if I didn&rsquo;t use hyperthreading and only used “real” CPU cores, even if the E cores have a lower clock rate.
<a href="https://williamlam.com/2023/01/video-of-esxi-install-workaround-for-fatal-cpu-mismatch-on-feature-for-intel-12th-gen-cpus-and-newer.html">William Lam</a> has written very detailed blog articles about this, I link to him here for more information, as this article was actually only intended to be a short summary.</p>
<p>We actually only need two ESX CLI commands to make it all work.</p>
<ul>
<li>With this command, we prevent the PSOD from occurring when the ESXi boots.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">esxcli system settings kernel set -s cpuUniformityHardCheckPanic -v FALSE
</span></span></code></pre></div><ul>
<li>With this command, we prevent the ESXi from getting a PSOD when the VMs are switched on.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">esxcli system settings kernel set -s ignoreMsrFaults -v TRUE
</span></span></code></pre></div>
    <aside class="admonition tip">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-sun">
      <circle cx="12" cy="12" r="5"></circle>
      <line x1="12" y1="1" x2="12" y2="3"></line>
      <line x1="12" y1="21" x2="12" y2="23"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
      <line x1="1" y1="12" x2="3" y2="12"></line>
      <line x1="21" y1="12" x2="23" y2="12"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
   </svg></div><b>Practical tip</b>
        </div>
        <div class="admonition-content">When reinstalling an ESXi server, I always switch off the E Cores, which saves me from having to manipulate the boot loader. After I have allowed memory tiering and the E/P Cores via the ESX CLI, I switch the E/P Cores back on in the BIOS.</div>
    </aside>
<p>If everything is correct, an ESX NUC of the 13th generation looks like this.

<figure><picture>
          <source srcset="/nuc_hu_5ccbf9c8ebe38803.webp" type="image/webp">
          <source srcset="/nuc_hu_5ee5fb0e8a02aeca.jpg" type="image/jpeg">
          <img src="/nuc_hu_5ccbf9c8ebe38803.webp"alt="NUC i7"  width="1098"  height="458" />
        </picture><figcaption>
            <p>NUC i7 13th Gen with Memory Tiering and P/E Cores</p>
          </figcaption></figure></p>
]]></content>
		</item>
		
		<item>
			<title>Homelab V4</title>
			<link>https://sdn-warrior.org/posts/labv4/</link>
			<pubDate>Sat, 16 Nov 2024 20:00:00 +0000</pubDate>
			
			<guid>https://sdn-warrior.org/posts/labv4/</guid>
			<description><![CDATA[Homelab v4]]></description>
			<content type="html"><![CDATA[<h2 id="ready-for-vcf">Ready for VCF</h2>
<p>I have done a huge redesign of my Homelab.
To better test VCF scenarios, 3 new Minisforum MS-01 have been added.
These have a 13th generation i9 and are equipped with fast NVMes for memory tiering.
They also have 2x10G and 2x2.5G networking on board for various VM workloads.
Furthermore, I converted my storage from NFS to iSCSI with multipathing, which gets even more performance out of my self-built Unraid.
I manage about 2 GB/s read / 1.2 GB GB/s write and 78K IOPS (Random 4K with 32Q) in a Windows 11 VM.</p>

<figure><picture>
          <source srcset="/bench1_hu_d9f2ebae7aabcbfb.webp" type="image/webp">
          <source srcset="/bench1_hu_4a57bd3f94e44ed.jpg" type="image/jpeg">
          <img src="/bench1_hu_d9f2ebae7aabcbfb.webp"alt="Disk Performance iSCSI Multipathing"  width="483"  height="351" />
        </picture><figcaption>
            <p>Disk Performance iSCSI Multipathing</p>
          </figcaption></figure>

<figure><picture>
          <source srcset="/bench2_hu_fa4b468b3bd2299a.webp" type="image/webp">
          <source srcset="/bench2_hu_cb94958550bf7aec.jpg" type="image/jpeg">
          <img src="/bench2_hu_fa4b468b3bd2299a.webp"alt="IOPS iSCSI Multipathing"  width="483"  height="356" />
        </picture><figcaption>
            <p>IOPS iSCSI Multipathing</p>
          </figcaption></figure>
<p>Pretty impressive for my setup. I still have to customize the rack a bit so that I can add the 10G Mikrotik switch and clean up the VLANs from old labs.
I&rsquo;m already planning a further expansion stage though.\</p>
]]></content>
		</item>
		
		<item>
			<title>NSX Integration Fortigate</title>
			<link>https://sdn-warrior.org/posts/nsx-integration-fortigate/</link>
			<pubDate>Mon, 26 Aug 2024 19:49:23 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/nsx-integration-fortigate/</guid>
			<description><![CDATA[NSX and Fortigate]]></description>
			<content type="html"><![CDATA[<h2 id="nsx-integration-for-fortinet-fortigate-firewalls">NSX integration for Fortinet Fortigate Firewalls</h2>
<p>Modern SDN solutions are flexible, fast and effective. The rules of the classic perimeter firewall should be exactly the same. To make life easier, Fortinet has an NSX integration that allows us to write our perimeter rules to dynamic NSX groups.</p>
<h2 id="first-things-first">First things first</h2>
<p>The Fortinet NSX integration works via a so-called external connector. For this purpose, the Fortigate contacts the NSX Manager at regular intervals and updates the previously imported groups.
This allows us to use dynamic groups that were previously created in NSX using tags, for example.</p>
<p>First we need to configure our connector. To do this, go to the Fortigate at <em><strong>Security Fabric / External Connectors</strong></em> and click on <em><strong>Create New</strong></em>.</p>
<p><img src="01.webp" alt="Fortigate Dialog"></p>
<p>Here we need to enter our NSX Manager, if we have an NSX Manager Cluster then of course the Cluster VIP or FQDN is needed.
We can define an update interval, this determines how long it takes to update the groups on the Fortigate.
In my lab I chose 30 seconds, depending on the environment lower or higher values may make sense. In a productive environment, the certificate should always be verified.
In my homelab environment I deliberately turned this off.</p>
<p><img src="02_External-Connector.webp" alt="External Connector"></p>
<h2 id="importing-the-dynamic-nsx-groups">Importing the dynamic NSX groups</h2>
<p>The groups need to be imported via the Fortigate CLI. This is relatively easy to do for all groups and specifically for individual groups.
Groups imported this way will be automatically updated in the future. If new groups are configured in NSX, they must be imported via the CLI if they play a role in the rules.</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Fortigate CLI</b>
        </div>
        <div class="admonition-content"><code>execute nsx group import &lt;SDN Connector&gt; &lt;VDOM&gt; &lt;group&gt;</code></div>
    </aside>
<p>If you want to import all NSX groups, you need to omit the group name in the CLI call. In the screenshot you can see me importing the <em><strong>dFG_AlpineLinux</strong></em> NSX group.
This uses an NSX tag to combine all VMs of type Alpine Linux into one security group.</p>
<p><img src="03_Group-Import.png" alt="Group-Import"></p>
<p>In the Fortigate, you can now find the group under <em><strong>Policy &amp; Objects / Addresses</strong></em> and use it like any other group in firewall policies. The NSX groups can be used not only for firewall rules, but also for policy-based routing via the SD-WAN feature.</p>
<p><img src="04_FW-Groups.webp" alt="Firewall Groups"></p>
<p>In my example, I am prohibiting the Alpine Linux VMs from accessing the Internet. The current realised group assignment can be checked at any time via <em><strong>Policy &amp; Objects&gt; / Addresses</strong></em> and a double click on the group.</p>
<p><img src="05_matched-adress.webp" alt="Matched Adrewss"></p>
<h2 id="delete-groups">Delete groups</h2>
<p>Groups need to be deleted manually. The easiest way to do this is via the Fortigate CLI. To do this, execute the following CLI command:</p>

    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Fortigate CLI</b>
        </div>
        <div class="admonition-content"><code>execute nsx group delete &lt;VDOM&gt; &lt;filter&gt;</code></div>
    </aside>
<p>If you want to delete all groups, you can simply leave the filter empty. If a group is used in a firewall policy, it cannot be deleted and you will receive a message that the group is in use.</p>
<h2 id="testing-the-solution">Testing the solution</h2>
<p>To do this, I log on to the Alpine2 VM and check the current IP. The VM has currently been assigned 172.31.2.10. We can also find this on the Fortigate in our dFG_AlpineLinux group. I am trying to send an ICMP to the Internet, which is blocked by the Fortigate firewall as expected.</p>
<p><img src="06_test-1.webp" alt="First Test"></p>
<p>Next, I remove the Alpine Linux tag in the NSX, which ensures that the VM is no longer realised in the dFG_Alpine Linux group on the Fortigate after 30 seconds at the latest.</p>
<p><img src="07_test-2.webp" alt="Second Test"></p>
<p>Finally, I repeated my ping test. As expected, Internet access is now without any problems.</p>
<p><img src="08_icmp.png" alt="Test Number three"></p>
<h2 id="remarks">Remarks</h2>
<p>If the connection to NSX Manager is interrupted, group membership remains at the last synchronised state. This means that in highly dynamic environments, too much or too little traffic may be allowed or blocked. For this reason, the SDN connection should always be monitored. All group changes are saved in the Log SDN Connector Log of the Fortigate.</p>
<h2 id="use-cases">Use cases</h2>
<p>One conceivable scenario would be to enable a dynamic firewall for VMs that are allowed to access the Internet. This can be done in NSX using a tag and a group. Every VM that does not have a tag and is therefore not in the group will be blocked at the Fortigate perimeter firewall.</p>
<p><img src="09_firewall_rule.webp" alt="Firewall Rules"></p>
<p>The firewall rule allows everything that does not go into RFC1918 networks (private IP range). Of course, this is only a simple example and more complex setups are possible.</p>
<h2 id="additional-information">Additional information</h2>
<p><a href="https://docs.fortinet.com/document/fortigate/7.4.4/administration-guide/753961/public-and-private-sdn-connectors">Fortinet Documentation: Public and private SDN connectors</a></p>
]]></content>
		</item>
		
		<item>
			<title>NSX Identity Firewall – A Case Study With the Flavour VDI</title>
			<link>https://sdn-warrior.org/posts/nsx-idfw-vdi/</link>
			<pubDate>Fri, 02 Aug 2024 08:34:23 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/nsx-idfw-vdi/</guid>
			<description><![CDATA[IDFW with NSX and Windows Clients]]></description>
			<content type="html"><![CDATA[
    <aside class="admonition info">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
      <circle cx="12" cy="12" r="10"></circle>
      <line x1="12" y1="16" x2="12" y2="12"></line>
      <line x1="12" y1="8" x2="12.01" y2="8"></line>
   </svg></div><b>Disclaimer</b>
        </div>
        <div class="admonition-content">There are of course other ways of using the Identity Firewall. This is the way I have used it with my customers so far. Of course, the whole thing is colored by personal preferences, experiences and customer requirements so take this as an idea for your own implementations.</div>
    </aside>
<h2 id="intro">Intro</h2>
<p>A customer of mine has the use case that his entire environment must be micro-segmented. Of course, this does not stop at the VDI environment. Since my customer uses non-persistent VDIs (the VMs are deleted after each logoff), no tags can be used for the security groups. After deleting the VM, the tag would also be removed and a new VDI would have no tags and would thus be isolated. This can be solved with automation or with the Identity Firewall (a combination of both solutions is also conceivable and makes sense). In the first step, my customer opted for the Identity Firewall because it allows generic VDIs to be used and authorisations to resources can be conveniently controlled via the customer AD. In addition, each user/user group receives individual firewall rules, which corresponds to the need-to-know principle.</p>
<h3 id="you-can-use-the-identity-firewall-in-2-ways">You can use the Identity Firewall in 2 ways:</h3>
<ul>
<li>Variant 1 would be with VMware Tools and Guest Introspection.</li>
<li>Variant 2 would be with log scraping and, for example, Aria Operations for Logs as a log server.</li>
</ul>
<p>I use variant 1 because the implementation means less effort in my customer setup and we only want to protect the VDIs with Idendity Firewall.</p>
<h3 id="limitations">Limitations</h3>
<ul>
<li>No User /Group ID Support for Federation.</li>
<li>No direct integration with VDI and RDSH.</li>
<li>User-ID based rules are supported for only firewall rules.</li>
<li>No User-ID based policy for IDS/IPS and TLS Inspection.</li>
<li>Multi-User (RDSH) does not support Server Message Block (SMP) protocol.</li>
</ul>
<h3 id="supported-protocols">Supported protocols</h3>
<ul>
<li>Single user (VDI, or Non-RDSH Server) use case support – TCP, UDP</li>
<li>Multi-User (RDSH) use case support – TCP, UDP</li>
</ul>
<h3 id="supported-clients">Supported clients</h3>
<ul>
<li>Windows 8,10,11</li>
<li>Windows Server 2012 – 2022</li>
</ul>
<h3 id="what-is-needed">What is needed?</h3>
<ul>
<li>NSX in the VDI cluster</li>
<li>AD infrastructure</li>
<li>VMware tools</li>
<li>VMware Aria Operations for Logs (optional)</li>
</ul>
<h2 id="first-things-first">First things first</h2>
<p>Identity based groups can only be used as a source for a firewall rule. In addition, the rules only come into effect after a successful logon to the client. Thus, normal dFW rules must be written for all communication that happens before the user logs on. This applies, for example, to Windows AD communication. The NSX Manager synchronises cyclically with the domain controllers. The default interval is 180 minutes. If changes are made to the group membership at short notice, a manual sync can be performed. Alternatively, the sync interval can also be shortened or extended. Using network introspection, the NSX Manager recognises when a user logs on to a client and can perform matching with the AD groups and thus add the client dynamically to the security group of the IDFW firewall rule.</p>

<figure><picture>
          <source srcset="/idfw/00_idfw_hu_bac15068c0d841d3.webp" type="image/webp">
          <source srcset="/idfw/00_idfw_hu_964b72d338437915.jpg" type="image/jpeg">
          <img src="/idfw/00_idfw_hu_bac15068c0d841d3.webp"alt="Idendity Firewall function"  width="1782"  height="1164" />
        </picture><figcaption>
            <p>Idendity Firewall function</p>
          </figcaption></figure>
<h2 id="getting-started">Getting started</h2>
<p>Firstly, I start by customising the golden images of the VDI and installing NSX Guest Introspection. These are not installed by default and have to be installed explicitly. You can find them under VMware Device Driver – NSX Network Introspection. File Introspection is installed automatically.</p>

<figure><picture>
          <source srcset="/idfw/01_vmwaretools_hu_4ebbf2048f289a20.webp" type="image/webp">
          <source srcset="/idfw/01_vmwaretools_hu_3e58b2f4b42be85b.jpeg" type="image/jpeg">
          <img src="/idfw/01_vmwaretools_hu_4ebbf2048f289a20.webp"alt="VMware Tools"  width="555"  height="417" />
        </picture><figcaption>
            <p>VMware Tools</p>
          </figcaption></figure>
<p>Once Guestintrospection has been successfully installed, we no longer need to do anything on our Windows clients. Next, the domain must be integrated.</p>
<p>This is done in the NSX Manager under System -&gt; Identity Firewall AD. Several domains can be entered so that multi-tenant setups can also be realised. The NSX Manager requires firewall activations and must be able to reach the domain controllers via LDAP or LDAPS. I strongly recommend the use of LDAPS. These settings can also be used to perform a manual sync or check the synchronisation status.</p>

<figure><a href="02_nsx_idfw.jpeg"><picture>
          <source srcset="/idfw/02_nsx_idfw_hu_b00fd488a8510e1a.webp" type="image/webp">
          <source srcset="/idfw/02_nsx_idfw_hu_4f4d80bda7c1bf57.jpeg" type="image/jpeg">
          <img src="/idfw/02_nsx_idfw_hu_b00fd488a8510e1a.webp"alt="Idetity firewall AD settings"  width="1452"  height="465" />
        </picture></a><figcaption>
            <p>Idetity firewall AD settings (click to enlarge)</p>
          </figcaption></figure>
<p>Under LDAP Server you can set several domain controllers for the previously set up domain. The protocol used is also selected here. I use the Domain Administrator in my lab. In a productive environment, an LDAP bind user should always be used.</p>

<figure><a href="03.jpeg"><picture>
          <source srcset="/idfw/03_hu_b4e39e1cee0248fa.webp" type="image/webp">
          <source srcset="/idfw/03_hu_4ffcb5292d1f2369.jpeg" type="image/jpeg">
          <img src="/idfw/03_hu_b4e39e1cee0248fa.webp"alt="LDAP Server settings"  width="1160"  height="460" />
        </picture></a><figcaption>
            <p>LDAP Server settings (click to enlarge)</p>
          </figcaption></figure>

    <aside class="admonition attention">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" class="feather feather-link" width="24" height="24" viewBox="0 0 24 24"
      fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
   </svg></div><b>Attention</b>
        </div>
        <div class="admonition-content">If LDAPS is used, NSX imports the SHA thumbprint of the domain controller certificate. As the certificate is usually renewed automatically after 2 years at the latest, NSX loses the trust with the domain controller. In this case, the trust must be established manually. To do this, delete the thumbprint and reconnect to the bind user.  It has proven to be practical to monitor certificate expiry times and to enter at least 2 domain controllers that exchange their certificates with a 4-week time lag. If the trust fails completely, no more identity rules are applied and the default firewall rule comes into effect. In practice, this should be an any/any default drop and log rule.</div>
    </aside>
<p>After we have successfully setup and synchronised our domain, we only need to activate the Identity Firewall. By default, this feature is disabled (it is a free feature that is available with the NSX Firewall VCF add-on). To activate the Identity Firewall, go to Security -&gt; Distributed Firewall -&gt; Settings -&gt; Identity Firewall Settings and activate the identity firewall service button. Then we select the cluster on which we want to activate the service. Now we can get started.</p>

<figure><a href="04.webp"><picture>
          <source srcset="/idfw/04_hu_dae2156eed25be54.webp" type="image/webp">
          <source srcset="/idfw/04_hu_6ddab8f8debb026a.jpg" type="image/jpeg">
          <img src="/idfw/04_hu_dae2156eed25be54.webp"alt="Distributed Firewall Settings"  width="1699"  height="792" />
        </picture></a><figcaption>
            <p>Distributed Firewall Settings (click to enlarge)</p>
          </figcaption></figure>
<h2 id="identity-firewall-rules">Identity Firewall Rules</h2>
<p>A general recommendation that applies to all firewalls is to think about a naming concept. At my customer, we have different name prefixes for the various security groups in NSX or in the other firewalls. For my part, I prefer the following naming convention, for example:</p>
<p>Distributed firewall groups start with dFW_XXX, an LDAP backed security group with dFWU_XXX (the U stands for user). For a group that contains an NSX segment it would be dFWS_XXX and for the gateway firewall a gWF_XXX and so on.</p>
<p>So we create our first LDAP user group. As with any group, we can do this either when creating the rules or in the inventory under Groups. The process is the same as for a normal Distributed Firewall Group, except that we don’t use tags but Distinguished Names, which can be conveniently selected or filtered from the synchronised AD elements.</p>

<figure><a href="05.webp"><picture>
          <source srcset="/idfw/05_hu_4fb5c5eda755034e.webp" type="image/webp">
          <source srcset="/idfw/05_hu_e5b4ef1fbf7d287.jpg" type="image/jpeg">
          <img src="/idfw/05_hu_4fb5c5eda755034e.webp"alt="Security Groups"  width="1164"  height="977" />
        </picture></a><figcaption>
            <p>Security Groups (click to enlarge)</p>
          </figcaption></figure>
<p>I also need at least one segment group and at least one group containing my target servers. The target servers are assigned to their groups via tags. The same applies to the segment group. To do this, I set one or more tags on the overlay segment and use this tag as a condition for group membership.</p>

<figure><a href="06.webp"><picture>
          <source srcset="/idfw/06_hu_b53d6b5cdca5a135.webp" type="image/webp">
          <source srcset="/idfw/06_hu_30cabdd7b0d936cb.jpg" type="image/jpeg">
          <img src="/idfw/06_hu_b53d6b5cdca5a135.webp"alt="Member selection"  width="1156"  height="964" />
        </picture></a><figcaption>
            <p>Member selection (click to enlarge)</p>
          </figcaption></figure>
<p>Our goal will be that we authorise our users assigned to dFWU_UserGroup1 to access our fileserver with SMB and the users of the group dFWU_UserGroup2 must not receive any authorisation. I have two domain users in my lab, User1 is in the AD group assigned to dFWU_UserGroup1 and User2 is only assigned to dFWU_UserGroup2.</p>
<h2 id="creating-the-firewall-rules">Creating the firewall rules</h2>
<p>For each identity firewall rule that allows traffic from a group of users to a destination, there must be a corresponding distributed firewall rule that allows traffic from a group of computers to the same destination specified in the identity firewall rule. We therefore need two firewall rules.</p>

<figure><a href="07.webp"><picture>
          <source srcset="/idfw/07_hu_f45be384524d1b37.webp" type="image/webp">
          <source srcset="/idfw/07_hu_4c8c3050aa8f549a.jpg" type="image/jpeg">
          <img src="/idfw/07_hu_f45be384524d1b37.webp"alt="Firewall Rules"  width="1630"  height="226" />
        </picture></a><figcaption>
            <p>Firewall Rules (click to enlarge)</p>
          </figcaption></figure>
<p>The first rule is pretty straight forward, as source we have our dFWU_UserGroup1, the target is our dFG_Fileserver and the service is SMB. The Applied To Field is even more important than usual for the Identity Firewall. We may only apply this rule to our VDIs. Since my customer has different pools that are named according to a specific naming scheme, I can further restrict the scope based on the computer name. Each pool has different rules and we only want the rules to be realised on VMs where they are needed. The second rule is a bit more interesting. As a source, we have our VDI segment or segments. As in the first rule, the target is our file server. Logically, the service is also the same.</p>

    <aside class="admonition attention">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" class="feather feather-link" width="24" height="24" viewBox="0 0 24 24"
      fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
   </svg></div><b>Attention</b>
        </div>
        <div class="admonition-content">It is important that the Apply To field can only be on the file servers or on the target that we want to enable. If we were to use the dFG_VDI_GroupA or the dFGS_VDI group here, for example, then the entire Identity Firewall Rule is cancelled out!</div>
    </aside>
<h2 id="testing-and-verifying">Testing and verifying</h2>
<p>The test is considered successful if User1 on the TestVDI can establish a successful SMB connection to the file server. If User2 is used instead of User1, the traffic to the file server must be blocked by the firewall.</p>
<p>For testing, I log in to my VDI with the credentials of User1 and perform a TestNetConnection with Powershell. This is a simple and quick way to test TCP connections. I also open a share on the file server.</p>

<figure><a href="08.webp"><picture>
          <source srcset="/idfw/08_hu_a864416fe8a04b90.webp" type="image/webp">
          <source srcset="/idfw/08_hu_a977631a54e3778c.jpg" type="image/jpeg">
          <img src="/idfw/08_hu_a864416fe8a04b90.webp"alt="Network test user 1"  width="1072"  height="627" />
        </picture></a><figcaption>
            <p>Network test user 1 (click to enlarge)</p>
          </figcaption></figure>
<p>The test was successful, both the TNC command and the actual opening of the file share worked. Now I’m running the same test on the same VDI (after it was recreated, because non-persistent VDI), only this time I’m using User2, which has no explicit firewall rules and is therefore blocked by my default cleanup rule. As expected, the traffic was successfully blocked.</p>

<figure><a href="09.png"><picture>
          <source srcset="/idfw/09_hu_e60dd127af9cff83.webp" type="image/webp">
          <source srcset="/idfw/09_hu_507c94b743a91bb8.jpg" type="image/jpeg">
          <img src="/idfw/09_hu_e60dd127af9cff83.webp"alt="Network test user 2"  width="993"  height="499" />
        </picture></a><figcaption>
            <p>Network test user 2 (click to enlarge)</p>
          </figcaption></figure>
<h2 id="lessons-learned">Lessons learned</h2>
<p>This is where I would like to add a few more thoughts on the subject. Troubleshooting is more difficult in practice than I thought. Tools such as NSX Traceflow cannot be used because you cannot add an AD user to the request. This means that the traffic in the traceflow is always dropped or the identity rule is maybe configured incorrectly.</p>
<p>But there is light at the end of the tunnel. In NSX 4.X there is a session view of the active IDFW user session under Security -&gt; Security Overview -&gt; Configuration. All active sessions, UserIDs and VMs are displayed here, as well as the source of the information.</p>

<figure><a href="10.png"><picture>
          <source srcset="/idfw/10_hu_592c97fbb2453d9a.webp" type="image/webp">
          <source srcset="/idfw/10_hu_34db9845bce1cec3.jpg" type="image/jpeg">
          <img src="/idfw/10_hu_592c97fbb2453d9a.webp"alt="Active Sessions"  width="979"  height="278" />
        </picture></a><figcaption>
            <p>Active Sessions (click to enlarge)</p>
          </figcaption></figure>
<p>Next tip would be to always check the sync status with the AD. Ask your AD admin when the user was added to the group. If the user has several accounts, ask for the user name used. Experience has shown that this is where most problems occur.</p>
<p>Use a syslog server and check exactly with which rule ID the traffic was discarded. Have all deny rules logged.</p>
<p>Not all rules can be implemented as Identity Firewall Rules. The Windows domain basic communication can only be enabled via a classic set of rules, as no Identity Firewall rules are active for the VM without an active user session.</p>
<h2 id="important-things-to-know">Important things to know</h2>
<p>Never install Guest Introspection on a target. If a user has remote desktop permissions on the target and guest introspection is active there, then the target receives all of the user’s firewall rules. This can lead to unwanted firewall permissions.</p>
<p>If targets outside of NSX are addressed, such as a NAS or legacy infrastructure, a second rule is not required (unless the gateway firewall is also used). In this case, the distributed firewall will only check the traffic at the source VM.</p>
<p>Any change on a domain, including a domain name change, will trigger a full sync with Active Directory. Because a full sync can take a long time, i recommend syncing during off-peak or non-business hours.</p>
<p>MutiUser setups only work with RDSH (Remote Desktop Session Hosts) which requires a special configuration. Otherwise, if several users are logged on to a client at the same time, this leads to unwanted behavior and, in the worst case, to unwanted firewall permissions.</p>
<h2 id="conclusion">Conclusion</h2>
<p>The Identity Firewall is a wonderful extension of the Distributed firewall and should be treated as such. Used correctly, it provides a very nice way to manage and delegate firewall permissions dynamically and centrally for individual users or user groups. It enables generic VDIs that can be used for different purposes depending on the user. This can reduce the number of VDI pools required, which in turn makes it easier to manage the customers VDI environment. The RBAC concept is even more tightly bound to the firewall policies and AD tiering can also be enforced via the firewall. And best of all, this great feature is included in the NSX Firewall license. I would recommend every NSX firewall administrator to take a closer look at the Identity Firewall.</p>
<h2 id="additional-resources">Additional resources</h2>
<p><a href="https://docs.vmware.com/en/VMware-NSX/4.1/administration/GUID-9CD3FC21-9ED4-4FB3-9E19-67A7C4D1F53E.html">VMware Docs Idendity Firewall</a></p>
]]></content>
		</item>
		
		<item>
			<title>NSX 4.X Certificate exchange of the NSX Manager</title>
			<link>https://sdn-warrior.org/posts/nsx-cert-exchange/</link>
			<pubDate>Fri, 05 Apr 2024 23:22:00 +0100</pubDate>
			
			<guid>https://sdn-warrior.org/posts/nsx-cert-exchange/</guid>
			<description><![CDATA[Exchange your NSX Manager certificates]]></description>
			<content type="html"><![CDATA[<h1 id="nsx-4x-certificate-exchange-of-the-nsx-manager">NSX 4.X Certificate exchange of the NSX Manager</h1>
<h1 id="certificate-creation">Certificate creation</h1>
<p>First of all, we need a CSR request. This can be created with OPENSSL. It is important that the key is also exported. You can either create 4 individual certificates (VIP and the three manager nodes) or a SAN certificate with all DNS and IP names of the manager nodes. The easiest way is to carry out the request on a manager node. To do this, I create an openssl config file with VIM.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[req]
</span></span><span class="line"><span class="cl">default_bits = 4096
</span></span><span class="line"><span class="cl">default_md = sha256
</span></span><span class="line"><span class="cl">days = 365
</span></span><span class="line"><span class="cl">distinguished_name = req_distinguished_name
</span></span><span class="line"><span class="cl">req_extensions = v3_req
</span></span><span class="line"><span class="cl">prompt = no
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">[req_distinguished_name]
</span></span><span class="line"><span class="cl">C   = DE
</span></span><span class="line"><span class="cl">ST  = RLP
</span></span><span class="line"><span class="cl">L   = NW
</span></span><span class="line"><span class="cl">O   = Land RLP
</span></span><span class="line"><span class="cl">OU  = sdnwarrior
</span></span><span class="line"><span class="cl">CN  = nsxm0001.lab.home
</span></span><span class="line"><span class="cl">emailAddress = mail@lab.home
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">[v3_req]
</span></span><span class="line"><span class="cl">subjectAltName = @sans
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">[sans]
</span></span><span class="line"><span class="cl">DNS.1 = nsxm0001.lab.home
</span></span><span class="line"><span class="cl">DNS.2 = nsxm0002.lab.home
</span></span><span class="line"><span class="cl">DNS.3 = nsxm0003.lab.home
</span></span><span class="line"><span class="cl">DNS.4 = nsxm0004.lab.home
</span></span><span class="line"><span class="cl">IP.1 = 192.168.12.110
</span></span><span class="line"><span class="cl">IP.2 = 192.168.12.111
</span></span><span class="line"><span class="cl">IP.3 = 192.168.12.112
</span></span><span class="line"><span class="cl">IP.4 = 192.168.12.113
</span></span></code></pre></div><p>The CSR is generated with the following command:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">openssl req -new -newkey rsa:4096 -nodes -keyout nsxm0001.key -out nsxm0001.csr -config opnssl.cnf
</span></span></code></pre></div><p>Two files are generated, a private key file and the actual request, which must be submitted to the CA.</p>

    <aside class="admonition attention">
        <div class="admonition-title">
            <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" class="feather feather-link" width="24" height="24" viewBox="0 0 24 24"
      fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
   </svg></div><b>Attention</b>
        </div>
        <div class="admonition-content">The CA must issue the certificate with the extension basicConstraints = cA:FALSE, otherwise the certificate cannot be used. With a Windows CA, this must be explicitly permitted in the template. If the extension is missing, the certificate validation will fail with an error message that the certificate key does not match the certificate.</div>
    </aside>
<h2 id="import-certificate">Import certificate</h2>
<p>The certificate can be imported in the NSX Manager under System &gt; Certificates &gt; Import. Here it must be ensured that the service certificate slider is set to NO. The complete certificate chain is also required. The certificate chain must be in the industry standard order of ‘certificate – intermediate – root.</p>

<figure><picture>
          <source srcset="/nsx-cert/01_hu_ff86af9542b83bd8.webp" type="image/webp">
          <source srcset="/nsx-cert/01_hu_1afaeed124abd485.jpg" type="image/jpeg">
          <img src="/nsx-cert/01_hu_ff86af9542b83bd8.webp"alt="NSX Cert"  width="582"  height="924" />
        </picture><figcaption>
            <p>Import NSX Cert</p>
          </figcaption></figure>
<p>After the import, the certificate can be validated using an API request.
API calls may vary depending on the NSX-T versions, in my example NSX version 4.1.2.3 is used.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">GET https://&lt;nsx-mgr&gt;/api/v1/trust- management/certificates/&lt;cert-id&gt;?action=validate
</span></span></code></pre></div><h2 id="exchange-of-certificates">Exchange of certificates</h2>
<p>An API request must be executed for each manager node and for the VIP. This requires the certificate ID and the manager node ID. Both can be copied from the WebGUI or requested via API Get Requests.</p>
<p>The following API call is used to exchange the Manager Node certificate:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">POST /api/v1/trust-management/certificates/&lt;cert- id&gt;?action=apply_certificate&amp;service_type=API&amp;node_id=&lt;node- id&gt;
</span></span></code></pre></div><p>The following API call is used to exchange the cluster VIP certificate:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">POST /api/v1/trust-management/certificates/&lt;cert- id&gt;?action=apply_certificate&amp;service_type=MGMT_CLUSTER
</span></span></code></pre></div><p>After replacing the certificates, you should close all browser windows and log in to the NSX Manager again. The certificate should now have been successfully replaced.</p>
<h2 id="further-resources">Further resources:</h2>
<p><a href="https://docs.vmware.com/en/VMware-NSX-T-Data-Center/3.2/administration/GUID-50C36862-A29D-48FA-8CE7-697E64E10E37.html">VMware Administration Handbook</a></p>
]]></content>
		</item>
		
	</channel>
</rss>
